[
    {
        "_id": "5f605acc468ccc0964b0c253",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nvector<long long int>v;\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    }\n    v.push_back(0);\n    v.push_back(0);\n    long long int c=0;\n    for(int i=2;i<=n;i++ ){\n        if(prime[i]==true) c=c+1;\n        v.push_back(c);\n    }\n}\nint power(int x, unsigned int y, long lonhint p)  \n{  \n    int res = 1;     // Initialize result  \n  \n    x = x % p; // Update x if it is more than or  \n   \n    if (x == 0) return 0; // In case x is divisible by p; \n  \n    while (y > 0)  \n    {  \n        // If y is odd, multiply x with result  \n        if (y & 1)  \n            res = (res*x) % p;  \n  \n        // y must be even now  \n        y = y>>1; // y = y/2  \n        x = (x*x) % p;  \n    }  \n    return res;  \n} \nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    long long int t,n;\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<0<<\"\\n\";\n        else{\n            //for(auto i:v) cout<<i;\n            long long int v1,r,v2;\n            r=v[n]-1;\n            v2=power(2,r,mod);\n            v1=v2%mod;\n            cout<<v1<<\"\\n\";\n        }  \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480845,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Compilation error",
        "submission_language": "cpp14",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982192,
        "updated_at_ms": 1599998992,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T06:10:20.739Z",
        "__v": 0
    },
    {
        "_id": "5f605ad4468ccc0964b0c254",
        "submission_code": "p=int(1e9+7)\ndef nCr(n, r): \n    return (fact(n)%(1000000007) // (fact(r)%(1000000007) *fact(n - r)%(1000000007)))%(1000000007) \ndef fact(n): \n    res = 1\n    for i in range(2, n + 1): \n        res = (res%(1000000007) * i )%(1000000007)\n    return res%1000000007\ndef countWays(m, n, x1, y1,x2,y2): \n    return (nCr(m + n, m)%p - nCr(x1 + y1, x1)%p *nCr(m + n - x1 - y1, m - x1)%p -nCr(x2 + y2, x2)%p *nCr(m + n - x2 - y2, m - x2)%p+nCr(x2+ y2 - x1 - y1, x2 - x1)%p*nCr(x1 + y1, x1)%p*nCr(m+n-x2-y2, n-y2)%p)%p \nt=int(input())\nfor i in range(t):\n    m,n,x,y,x2,y2=map(int,input().split())  \n    print(countWays(m, n, x, y, x2,y2)) \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480842,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4674163",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599982191,
        "updated_at_ms": 1599984591,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:10:28.930Z",
        "__v": 0
    },
    {
        "_id": "5f605add468ccc0964b0c255",
        "submission_code": "T=int(input())\nfor _ in range(T):\n    x=[int(a) for a in input().split()]\n    ck=[[x[2],x[3]],[x[4],x[5]]]\n    dp=[[0 for i in range(x[0]+1)] for j in range(x[1]+1)]\n    if(x[1]-x[3]<x[1]+1 and x[2]<x[0]+1):\n        dp[x[1]-x[3]][x[2]]=-1\n    if(x[1]-x[5]<x[1]+1 and x[4]<x[0]+1):\n        dp[x[1]-x[5]][x[4]]=-1\n    for i in range(x[0]+1):\n        if(x[1]==x[1]-x[3] and i==x[2]):\n            break\n        if(x[1]==x[1]-x[5] and i==x[4]):\n            break\n        dp[x[1]][i]=1\n    for i in range(x[1],-1,-1):\n        if(i==x[1]-x[3] and 0==x[2]):\n            break\n        if(i==x[1]-x[5] and 0==x[4]):\n            break\n        dp[i][0]=1\n    i=x[1]-1\n    while(i>=0):\n        for j in range(1,x[0]+1):\n            if(dp[i][j]==-1):\n                dp[i][j]=0\n                continue\n            dp[i][j]=dp[i+1][j]+dp[i][j-1]\n        i-=1\n    print(dp[0][x[0]])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480838,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "6986737",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "vegishanmukh7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599982184,
        "updated_at_ms": 1599985784,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:10:37.847Z",
        "__v": 0
    },
    {
        "_id": "5f605ae7468ccc0964b0c256",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n\n// long long cnt(int x1, int y1, int x2, int y2) \n// {\n//     int n = (x2 - x1) ;\n//     int m = (y2 - y1) ; \n//     if (m == 1 || n == 1) \n//     return 1; \n//     return cnt(x1 + 1, y1, x2, y2) + cnt(x1, y1 + 1, x2, y2);  \n// }\nlong long cnt(int x1, int y1, int x2, int y2)\n{\n    int n = (x2 - x1) ;\n    int m = (y2 - y1) ; \n    long long count[n][m];\n    for(int i = 0; i < n; i++) \n    count[i][0] = 1; \n    for(int j = 0; j < m; j++) \n    count[0][j] = 1; \n    for(int i = 1; i < n; i++) \n    for(int j = 1; j < m; j++)\n    count[i][j] = (count[i - 1][j] % (int)(1e9 + 7) + count[i][j - 1] % (int)(1e9 + 7)) % (int)(1e9 + 7); \n    return count[n - 1][m - 1] % (int)(1e9 + 7);  \n}\nvoid solve()\n{\n    int x, y ; cin >> x >> y ;\n    int x1, y1 ; cin >> x1 >> y1 ;\n    int x2, y2 ; cin >> x2 >> y2 ;\n    long long c = cnt(0, 0, x - 1, y - 1);\n    long long s1 = cnt(0, 0, x1 - 1, y1 - 1) ;\n    long long s2 = cnt(0, 0, x2 - 1, y2 - 1) ;\n    long long e1 = cnt(x1, y1, x - 1, y - 1) ;\n    long long e2 = cnt(x2, y2, x - 1, y - 1) ;\n    long long f1 = (s1 * e1) % (int)(1e9 + 7);\n    long long f2 = (s2 * e2) % (int)(1e9 + 7);\n    cout << (c - f1 - f2 + (int)(1e9 + 7) + (int)(1e9 + 7)) % (int)(1e9 + 7) << \"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL); cout.tie(NULL);\n    int t = 1; cin >> t;\n    while(t--) solve();\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480831,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "5876221",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "NMN5G9",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599982178,
        "updated_at_ms": 1599982178,
        "misc_notes": "[\"Wrong Answer\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T06:10:47.974Z",
        "__v": 0
    },
    {
        "_id": "5f605af0468ccc0964b0c257",
        "submission_code": "import math\nn = int(input())\nlst=[]\nfor i in range(0,n):\n    a = int(input())\n    b=math.factorial(a)\n    c=1\n    for j in range(1,b):\n        for k in range(j,b):\n            if(math.gcd(i,j)==1):\n                if(j*k==b):\n                    c+=1\n    print(c)\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480829,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5487386",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "devaduttsanka",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982176,
        "updated_at_ms": 1599982176,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:10:56.792Z",
        "__v": 0
    },
    {
        "_id": "5f605afa468ccc0964b0c258",
        "submission_code": "t=int(input())\nfor k in range(t):\n    s=[]\n    D,R='D','R'\n    print('Case #',end=\"\")\n    print(k+1,end=\"\")\n    print(': ',end=\"\")\n    n,m=map(int,input().split())\n    for i in range(n):\n        l=str(input())\n        l=list(l)\n        s.append(l)\n    dp=[]\n    for i in range(n):\n        l=[]\n        for j in range(m):\n            l.append(0)\n        dp.append(l)\n    point=[]\n    for i in range(n):\n        l=[]\n        for j in range(m):\n            l.append(0)\n        point.append(l)\n    dp[0][0]=s[0][0]\n    point[0][0]=\"\"\n    for i in range(1,n):\n        dp[i][0]=dp[i-1][0]+s[i][0]\n        point[i][0]=point[i-1][0]+D\n    for j in range(1,m):\n        dp[0][j]=dp[0][j-1]+s[0][j];\n        point[0][j]=point[0][j-1]+R;\n    for i in range(1,n):\n        for j in range(1,m):\n            if(dp[i-1][j]>dp[i][j-1]):\n                dp[i][j]=dp[i][j-1]+s[i][j];\n                point[i][j]=point[i][j-1]+R;\n            elif(dp[i-1][j]<dp[i][j-1]):\n                dp[i][j]=dp[i-1][j]+s[i][j];\n                point[i][j]=point[i-1][j]+D;\n            else:\n                if(point[i-1][j]<point[i][j-1]):\n                    dp[i][j]=dp[i-1][j]+s[i][j];\n                    point[i][j]=point[i-1][j]+D;\n                else:\n                    dp[i][j]=dp[i][j-1]+s[i][j];\n                    point[i][j]=point[i][j-1]+R;\n    print(point[n-1][m-1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480826,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "5812143",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "rahul03692",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599982175,
        "updated_at_ms": 1599982175,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:11:06.412Z",
        "__v": 0
    },
    {
        "_id": "5f605b03468ccc0964b0c259",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n#define mod 1000000007\n\nunsigned long long power(int x,unsigned long long y)  \n{  \n    unsigned long long temp;  \n    if(y == 0)  \n        return 1;  \n    temp = power(x, y / 2)%mod;  \n    if (y % 2 == 0)  \n        return (temp * temp)%mod;  \n    else\n    {  \n        if(y > 0)  \n            return (x * temp * temp)%mod;  \n        else\n            return ((temp * temp) / x)%mod;  \n    }  \n}\nvoid fastscan(long long &x)\n    {\n        bool neg=false;\n        register int c;\n        x =0;\n        c=getchar();\n        if(c=='-')\n        {\n            neg = true;\n            c=getchar();\n        }\n        for(;(c>47 && c<58);c=getchar())\n            x = (x<<1) + (x<<3) +c -48;\n        if(neg)\n            x *=-1;\n    }\nint main() {\n    long long t,n,i,j,prime[1000005],c=0,cp[1000005];\n    fastscan(t);\n    for(i=1;i<1000003;i++){\n        prime[i]=0;\n    }\n    cp[1]=1;\n    for(i=2;i<1000003;i++){\n        if(prime[i]==0){\n            for(j=2*i;j<1000003;j=j+i){\n                prime[j]=1;\n            }\n            c++;\n        }\n        cp[i]=c;\n    }\n    while(t--){\n        fastscan(n);\n        if(n==1){\n            printf(\"0\\n\");\n        }else{\n        c = cp[n];\n        printf(\"%llu\\n\",power(2,c-1)%mod);\n    }\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480816,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982161,
        "updated_at_ms": 1599996561,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:11:15.524Z",
        "__v": 0
    },
    {
        "_id": "5f605b0c468ccc0964b0c25a",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        System.out.println(\"81\");\n        System.out.println(\"33\");\n        System.out.println(\"334\");\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480815,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "6637308",
        "submission_status": "Wrong Answer",
        "submission_language": "java8",
        "site_user_handle": "badiniswetha",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599982157,
        "updated_at_ms": 1599982157,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:11:24.222Z",
        "__v": 0
    },
    {
        "_id": "5f605b15468ccc0964b0c25b",
        "submission_code": "#include<bits/stdc++.h>\n\nusing namespace std;\ntypedef unsigned long long ll;\ntypedef long double ld;\ntypedef double db; \ntypedef string str; \n#define mp make_pair\n#define F first\n#define S second\n#define sz(x) (int)(x).size()\n#define all(x) begin(x), end(x)\n#define rall(x) (x).rbegin(), (x).rend() \n#define rsz resize\n#define ins insert \n#define ft front() \n#define bk back()\n#define pf push_front \n#define pb push_back\n#define all(x) begin(x), end(x)\n#define eb emplace_back \n#define lb lower_bound \n#define ub upper_bound  \nconst int Mod = 1e9 + 7; \nconst int MX = 2e5+5; \nconst int N = 10001;\nint find(vector< int> v[], int u, vector<bool> &b, int ch, int &x)\n{\n    //cout<<u<<\" \";\n    x++;\n    int ans = ch;\n    b[u] = 1;\n    for(int i : v[u])\n        if(!b[i])\n            ans += find(v, i, b, ch^1, x);\n    return ans;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n    int t;\n    cin>>t;\n    //cout<<t<<\"\\n\";\n    for(int i =0;i<t;i++)\n    {\n        cout<<\"Case #\"<<i+1<<\": \";\n        int n, x;\n        cin>>n>>x;\n        map< int ,int > m;\n        vector<int> v[n*n];\n        for(int i =0;i<x;i++)\n        {\n            int l, r;\n            cin>>l>>r;\n\n            l--,r--;\n            m[l*n + r] = 1;\n        }\n        for(int i =0;i<n;i++)\n        {\n            for(int j= 0;j<n;j++)\n            {\n                if(!m[i*n+j])\n                {\n                    if(!m[(i+1)*n + j + 2] && i < n-1 && j < n-2)\n                    {\n                        //cout<<\"1\";\n                        v[i*n+j].pb((i+1)*n + j + 2);\n                        v[(i+1)*n + j + 2].pb(i*n+j);\n                    }\n                    if(!m[(i+2)*n + j + 1] && i < n-2 && j < n-1){\n                        //cout<<\"1\"<<\" \";\n                        v[(i+2)*n + j + 1].pb(i*n+j);\n                        v[i*n+j].pb((i+2)*n + j + 1);\n                    }\n                    if(!m[(i+1)*n + j - 2] && i  <  n-1 && j > 1)\n                    {\n                        //cout<<\"1\";\n                        v[i*n + j].pb( (i+1)*n + j - 2);\n                        v[(i+1)*n + j - 2].pb( i*n+j);\n                    }\n                    if(!m[(i+2)*n + j - 1] && i < n -2 && j > 0)\n                    {\n                        //cout<<\"1\";\n                        v[i*n + j].pb( (i+2)*n + j - 1);\n                        v[(i+2)*n + j - 1].pb( i*n+j);    \n                    }\n\n                }\n            }\n        }\n        vector< bool >  b(n*n, 0);\n        int ans= 0;\n        for(int i =0 ;i <n*n;i++)\n        {\n            if(m[i] == 0 && b[i]== 0){\n                int x = 0;\n                int m1 = find(v, i, b, 1, x);\n                ans += max(m1, x - m1);\n            }\n        }\n        cout<<ans<<\"\\n\";\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480814,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "9693257",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "sg0071729",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599982157,
        "updated_at_ms": 1599983357,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:11:33.645Z",
        "__v": 0
    },
    {
        "_id": "5f605b1c468ccc0964b0c25c",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    Scanner sc=new Scanner(System.in);\n    String s=sc.nextLine();\n    System.ot.println(s);\n    static String s(String s)\n    {\n        int l=s.lenth();\n        String ans=\" \";\n        for(int i=0;i<l-1;i++)\n        {\n            if(s.charAt[i]>s.charAt[i+1])\n            {\n                for(int j=0;j<1;j++)\n                {\n                    if(i!=j)\n                    {\n                        ans +=s.charAt[j];\n                        \n                    }\n                }\n            }return ans;\n        }\n        ans=s.subString(0,l-1);\n        return ans;\n    }\n    \n        }\n    }\n    public static void main(String[] args) {\n        String s=\" \";\n        System.out.println(s);\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480808,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9685839",
        "submission_status": "Compilation error",
        "submission_language": "java",
        "site_user_handle": "ballaramyasri441",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599982149,
        "updated_at_ms": 1599982149,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T06:11:40.444Z",
        "__v": 0
    },
    {
        "_id": "5f605b23468ccc0964b0c25d",
        "submission_code": "from sys import stdin,stdout\n\ndef SieveOfEratosthenes(n): \n    prime = {} \n    p = 2\n    while (p * p <= n):  \n        if (p not in prime):  \n            for i in range(p * 2, n + 1, p): \n                prime[i] = 1\n        p += 1\n    all_primes =[0,0]\n    for p in range(2,n + 1): \n        if(p in prime):\n            all_primes.append(all_primes[-1])\n        else:\n            all_primes.append(all_primes[-1]+1)\n    return all_primes\n\ndef binpow(a,b):\n    res = 1\n    while(b>0):\n        if(b&1):\n            res = res*a\n        a = a*a\n        b>>=1\n    return res\n\nt=  int(stdin.readline())\nprimes = SieveOfEratosthenes(1000000)\nfor _ in range(t):\n    n = int(stdin.readline())\n    p = (int)(1e9+7)\n    val = binpow(2,primes[n]-1)\n    stdout.write(str(val%p)+\"\\n\")",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480805,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4312249",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982148,
        "updated_at_ms": 1599985748,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:11:47.365Z",
        "__v": 0
    },
    {
        "_id": "5f605b2d468ccc0964b0c25e",
        "submission_code": "#include<bits/stdc++.h>\n\n#ifndef LOCAL\n#pragma GCC optimize(\"O3\")\n#endif\n//~ #pragma GCC optimize(\"Ofast\")\n//~ #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//~ #pragma GCC optimize(\"unroll-loops\")\n\n#define endl        '\\n'\n#define ll          long long\n#define pb          push_back\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define rs(v,n)     v.resize(n)\n#define hell        1000000007\n#define peak        9123372036854775807\n#define pii         acos(-1)\n#define clr(a,x)    memset(a,x,sizeof(a))\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\n\nnamespace InOp{\ntemplate<class x,class y>\nistream &operator>>(istream &in,pair<x,y> &p) \n{ \n    in>>p.F>>p.S;\n    return in;\n}\ntemplate<class x>\nistream &operator>>(istream &in,vector<x> &v) \n{\n    for(auto& i:v)\n        in>>i;\n    return in;\n}\ntemplate<class x,class y>\nostream &operator<<(ostream &out,pair<x,y> &p) \n{ \n    out<<\"(\"<<p.F<<\",\"<<p.S<<\") \";\n    return out; \n}\ntemplate<class x>\nostream &operator<<(ostream &out,vector<x> &v) \n{ \n    out<<v.size()<<endl;\n    for(auto i:v)\n        out<<i<<\" \";\n    out<<endl;\n    return out; \n}\n}\nusing namespace InOp;\n\nnamespace ModOp{\ntemplate<class x,class y,class z> z add(x a,y b,z m){return (a+b)%m;}\ntemplate<class x,class y,class z> z sub(x a,y b,z m){return (a-b+m)%m;}\ntemplate<class x,class y,class z> z mul(x a,y b,z m){return ((ll)a*b)%m;}\ntemplate<class x,class y,class z> z expo(x b,y e,z m){x a=1;b%=m;while(e!=0){if((e&1)==1){a=a*b;a=a%m;}b=b*b;b%=m;e>>=1;}return a%m;}\ntemplate<class x,class z> z inv(x b,z m){return expo(b,m-2,m);}\ntemplate<class x,class y> x invGeneral(x a,y b){if(a==0)return b==1?0:-1;x m=invGeneral(b%a,a);return m==-1?-1:((1-(ll)b*m)/a+b)%b;}\ntemplate<class x,class y,class z> z div(x a,y b,z m){x c=inv(b,m);return mul(a,c,m);}\n}\nusing namespace ModOp;\n\nnamespace Debug{\ntemplate<class x> void deb(x a){cerr<<\"a\"<<\": \"<<a<<endl;}\ntemplate<class x,class y> void deb(x a,y b){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<endl;}\ntemplate<class x,class y,class z> void deb(x a,y b,z c){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<endl;}\ntemplate<class x,class y,class z,class xy> void deb(x a,y b,z c,xy d){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<\" | \"<<\"d\"<<\": \"<<d<<endl;}\n}\nusing namespace Debug;\n\n#define N  1000005\nvoid ch(ll x,ll y,ll n,vector<vector<ll>>& vis)\n{\n    if(x>=2&&y>=1)\n    vis[x-2][y-1]=1;\n    if(x+2<n&&y>=1)\n    vis[x+2][y-1]=1;\n    if(x>=2&&y+1<n)\n    vis[x-2][y+1]=1;\n    if(x+2<n&&y+1<n)\n    vis[x+2][y+1]=1;\n    if(x+1<n&&y+2<n)\n    vis[x+1][y+2]=1;\n    if(x>=1&&y+2<n)\n    vis[x-1][y+2]=1;\n    if(x+1<n&&y>=2)\n    vis[x+1][y-2]=1;\n    if(x>=1&&y>=2)\n    vis[x-1][y-2]=1;\n}\nll even(ll n,vector<vector<ll>> vis)\n{\n    ll ans=0;\n    for(ll i=0;i<n;i++)\n    {\n        for(ll j=0;j<n;j++)\n        {\n            if(vis[i][j]==1)continue;\n            if((i+j)%2==1)continue;\n            ch(i,j,n,vis);\n            ans++;\n        }\n    }\n    for(ll i=0;i<n;i++)\n    {\n        for(ll j=0;j<n;j++)\n        {\n            if(vis[i][j]==1)continue;\n            ch(i,j,n,vis);\n            ans++;\n        }\n    }\n    return ans;\n}\nll odd(ll n,vector<vector<ll>> vis)\n{\n    ll ans=0;\n    for(ll i=0;i<n;i++)\n    {\n        for(ll j=0;j<n;j++)\n        {\n            if(vis[i][j]==1)continue;\n            if((i+j)%2==0)continue;\n            ch(i,j,n,vis);\n            ans++;\n        }\n    }\n    for(ll i=0;i<n;i++)\n    {\n        for(ll j=0;j<n;j++)\n        {\n            if(vis[i][j]==1)continue;\n            ch(i,j,n,vis);\n            ans++;\n        }\n    }\n    return ans;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    ll tt=1;\n    cin>>tt;\n    for(ll test=1;test<=tt;test++)\n    {\n        cout<<\"Case #\"<<test<<\": \";\n        ll i,j,k,l,r,x,y,m,n;\n        cin>>n>>m;\n        vector<vector<ll>> vis(n,vector<ll>(n,0));\n        for(i=0;i<m;i++)\n        {\n            cin>>x>>y;\n            vis[x-1][y-1]=1;\n        }\n        ll ans;\n        ans=odd(n,vis);\n        ans=max(ans,even(n,vis));\n        // deb(ans1,ans2);\n        cout<<ans<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480804,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "1583809",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599982145,
        "updated_at_ms": 1599984545,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:11:57.506Z",
        "__v": 0
    },
    {
        "_id": "5f605b33468ccc0964b0c25f",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        System.out.println(\"Case #1: DDRR\");\n                          System.out.println( \"Case #2: RRRDD\");\nSystem.out.println(\"Case #3: RRDRR\");\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480799,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "6637308",
        "submission_status": "Wrong Answer",
        "submission_language": "java8",
        "site_user_handle": "badiniswetha",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599982140,
        "updated_at_ms": 1599982140,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:12:03.475Z",
        "__v": 0
    },
    {
        "_id": "5f605b3d468ccc0964b0c260",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\nint factorial(int n)\n{\n    if(n==0)\n    return 1;\n    else\n     return (n*factorial(n-1));\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    long long t;cin>>t;\n    while(t--)\n    {\n        long long n;cin>>n;\n        int f;\n        f=factorial(n);\n        vector<pair<int,int> >a;\n        for(long long i=1;i*i<=f;i++)\n        {\n            if(f%i==0)\n                a.push_back(make_pair(i,f/i));\n        }\n        int count=0;\n        for(auto x:a)\n        {\n            int g=x.first,h=x.second;\n            if(__gcd(g,h)==1)\n            count++;\n        }\n        cout<<count<<\"\\n\";\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480794,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6077224",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "18H51A04F3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982138,
        "updated_at_ms": 1599983338,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:12:13.257Z",
        "__v": 0
    },
    {
        "_id": "5f605b43468ccc0964b0c261",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\ntypedef unsigned long long ll;\ntypedef pair<int, int> pii;\n#define sz(x) (int)(x).size()\n#define all(x) x.begin(), x.end()\n#define itn int\n \nll powmod(ll a,ll b) {ll res=1; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a; }\n\nconst int MX = 2e5+5; \nconst int N = 10001;\nint n,m;\n\nint getit(vector<pair<int,ll>> v[],int p, vector<int>& vis, ll z) {\n    if(p+1 == n*m) return 1;\n    vis[p] = 1;\n    for(int i=0;i<v[p].size();++i){\n        if((v[p][i].S&z) == z && !vis[v[p][i].F]){\n            if(getit(v, v[p][i].F, vis, z)) return 1;\n        }\n    }\n    return 0;\n}\n\nvoid kd(vector<pair<int,ll>> v[], int p, vector<int> &vis, ll z) {\n    vis[p] = 1;\n    for(auto q : v[p]) {\n        if((q.S&z)<=0) q.S=0;\n        if(vis[q.F]) kd(v,q.F,vis,z);\n    }\n}\n\nll getans(vector< pair<int,ll>> v[], ll cb) {\n    ll a = 0;\n    if(cb == -1)  return  0;\n    ll ans = 0;\n    ll r = 0;\n    for(int i = cb;i>=0;i--) {\n        vector<int> x(n*m);\n          r = ans|1ll<<i;\n          if(getit(v, 0, x, r)){\n            ans = ans|(1ll<<i);\n            r = ans;\n        }\n    }\n    return ans;\n}\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--) {\n        cin>>m>>n;\n        vector<pair<int,ll>> v[n*m];\n        for(int i =0; i < m;++i) {\n            for(int j =0;j< n;j++) {\n                ll l;\n                if(i < m -1) {\n                    cin>>l;\n                    v[i*n + j].pb({i*n+j+n, l});\n                    v[(i+1)*n+j].pb({i*n+j, l});\n                }\n                if(j < n -1) {\n                    cin>>l;\n                    v[i*n + j].pb({(i)*n+j+1, l});\n                    v[(i)*n+j+1].pb({(i)*n+j, l});    \n                }\n            }\n        }\n        cout<<getans(v, 63)<<\"\\n\";\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480785,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "6937721",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "ak821",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599982126,
        "updated_at_ms": 1599986926,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:12:19.927Z",
        "__v": 0
    },
    {
        "_id": "5f605b4c468ccc0964b0c262",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 1000005\n// #define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n// #define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\nmap<char,int> mp;\nstruct node{\n    int val = 0;\n    map<int,node*> m;\n} *root;\nnode* newnode(){\n    node* temp = new node;\n    temp->val = 0;\n    return temp;\n}\nmap<string,int> m;\nvoid add(string s){\n    int n = s.size();\n    node* cur = root;\n    rep(i,0,n){\n        cur->val++;\n        if(cur->m.find(mp[s[i]]) == cur->m.end()){\n            cur->m[mp[s[i]]] = newnode();\n        }\n        cur = cur->m[mp[s[i]]];\n    }\n    cur->val++;\n}\nmap<string,int> freq;\nint query(string s){\n    int n = s.size();\n    node* cur = root;\n    int len = 0;\n    string val;\n    rep(i,0,n){\n        cur = cur->m[mp[s[i]]];\n        val.pb(mp[s[i]]);\n        len++;\n        if(cur->val == 1 and m[val] == freq[val]) return len;\n    }\n    return 50;\n}\nint query2(string s){\n    node* cur = root;\n    rep(i,0,sz(s)){\n        if(cur->m.find(s[i] - '0') == cur->m.end()) return 0;\n        cur = cur->m[s[i] - '0'];\n    }\n    return cur->val;\n}\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n    mp['a'] = 2;\n    mp['b'] = 2;\n    mp['c'] = 2;\n    mp['d'] = 3;\n    mp['e'] = 3;\n    mp['f'] = 3;\n    mp['g'] = 4;\n    mp['h'] = 4;\n    mp['i'] = 4;\n    mp['j'] = 5;\n    mp['k'] = 5;\n    mp['l'] = 5;\n    mp['m'] = 6;\n    mp['n'] = 6;\n    mp['o'] = 6;\n    mp['p'] = 7;\n    mp['q'] = 7;\n    mp['r'] = 7;\n    mp['s'] = 7;\n    mp['t'] = 8;\n    mp['u'] = 8;\n    mp['v'] = 8;\n    mp['w'] = 9;\n    mp['x'] = 9;\n    mp['y'] = 9;\n    mp['z'] = 9;\n    cin>>TESTS;\n    rep(l,1,TESTS+1)\n    {   \n        m.clear();\n        int n,q;\n        cin >> n >> q;\n        root = new node;\n        map<string,string> p;\n        rep(i,0,n){\n            string s,t;\n            cin >> s >> t;\n            p[s] = t;\n            rep(i,0,sz(t)){\n                string cur;\n                rep(j,i,sz(t)){\n                    cur.pb(t[j]);\n                    m[cur]++;\n                }\n            }\n            add(s);\n        }\n        assert(p.size() == n);\n        // trace(1);\n        cout << \"Case #\" << l << \": \";\n        while(q--){\n            string s;\n            cin >> s;\n            string no = p[s];\n            int ans = 50;\n            freq.clear();\n            rep(i,0,sz(no)){\n                string cur;\n                rep(j,i,sz(no)){\n                    cur.pb(no[j]);\n                    freq[cur]++;\n                }\n            }\n            ans = min(ans, query(s));\n            for(auto j : freq){\n                if(j.sc == m[j.fr]){\n                    if(query2(j.fr) == 0){\n                        ans = min(ans, sz(j.fr));\n                    }\n                }\n            }\n            cout << ans << \" \";\n        }\n        cout << endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480779,
        "contest_id": "115291",
        "problem_id": "177480",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Keypad Trouble",
        "problem_view_link": "keypad-trouble",
        "created_at_ms": 1599982113,
        "updated_at_ms": 1599986913,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:12:28.221Z",
        "__v": 0
    },
    {
        "_id": "5f605b56468ccc0964b0c263",
        "submission_code": "import java.io.*;\nimport java.util.*;\npublic class Solution {\n    public static int gcd(int a, int b) {   \n        int res=0;\n        for(int i = 1; i <= a && i <= b; ++i)\n        {\n            // Checks if i is factor of both integers\n            if(a % i==0 && b % i==0)\n                res = i;\n        }\n        return res;\n        \n    } \n    public static boolean coprime(int a, int b) { \n        return (gcd(a, b) == 1); \n    }  \n    public static int numOfPairs(ArrayList<Integer> arr, int n,int res){            \n        int count = 0;  \n        for (int i = 0; i < n - 1; i++){\n            for (int j = i + 1; j < n; j++) {\n                //System.out.println(\"Factors: \"+arr.get(i)+\" \"+arr.get(j));\n                if (coprime(arr.get(i), arr.get(j)) && arr.get(i)*arr.get(j)==res){\n                    count++;\n                    //System.out.println(\"Here\");\n                }\n            }\n        }\n        return count; \n    } \n    public static void main(String[] args) throws IOException{\n        int ans=0;\n        BufferedReader sc =  \n                   new BufferedReader(new InputStreamReader(System.in));\n        int t=Integer.parseInt(sc.readLine());\n        for(int i=0;i<t;i++){\n            int n=Integer.parseInt(sc.readLine());\n            int fact=1;\n            for(int j=1;j<n+1;j++){\n                fact*=j;\n            }\n            ArrayList<Integer> list=new ArrayList<Integer>();\n            for(int k=1;k<fact+1;k++){\n                if(fact%k==0)\n                    list.add(k);\n            }\n            //System.out.println(list);\n            ans=numOfPairs(list,list.size(),fact);   \n            System.out.println(ans);\n            }\n        }\n    }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480778,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982112,
        "updated_at_ms": 1599994112,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:12:38.455Z",
        "__v": 0
    },
    {
        "_id": "5f605b60468ccc0964b0c264",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        List<Integer> list1=new ArrayList<>();\n        List<Integer> list2=new ArrayList<>();\n        \n        while(n!=0){\n            int tc=sc.nextInt();\n            while(tc!=0){\n                 int a=sc.nextInt();\n            int b=sc.nextInt();\n            list1.add(a);\n            list2.add(b);\n            tc--;\n            }\n            int index=0;\n            int min_res=Integer.MAX_VALUE;\n            int sum=0;\n            int listSum1 =0;\n            int listSum2 = 0;\n            for(int i=0;i<list1.size();i++){\n                int x=list1.get(i);\n                int y=list2.get(i);\n                sum = sum + ((x*x) + (y*y));\n                listSum1 +=x;\n                listSum2 +=y;\n            }\n            for(int i=0;i<list1.size();i++){\n                int x=list1.get(i);\n                int y=list2.get(i);\n                int res=0;\n                res = sum + list1.size()*((x*x) + (y*y)) - (2*x*listSum1) -(2*y*listSum2);\n                if(min_res>res){\n                    min_res=res;\n                    index=i;\n                }\n            }\n            System.out.println(list1.get(index)+\" \"+list2.get(index));\n        n--;\n        list1.clear();\n        list2.clear();\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480770,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4675172",
        "submission_status": "Wrong Answer",
        "submission_language": "java8",
        "site_user_handle": "Likhita_AVL",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599982104,
        "updated_at_ms": 1599984504,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:12:48.009Z",
        "__v": 0
    },
    {
        "_id": "5f605b6a468ccc0964b0c265",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef solution2(N):\n    f=1\n    count=1\n    m=[1]\n    flag=0\n    mo=1000000007\n    f=math.factorial(N)\n    for k in range(2,int(math.sqrt(f)+1)):\n        if f%k==0:\n            d=f//k\n            if d not in m:\n                gcd=math.gcd(k,d)\n                if gcd==1:\n                    count+=1\n\n    return count%mo\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        N= int(input())\n        res = solution2(N)\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480768,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982102,
        "updated_at_ms": 1599992902,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:12:58.028Z",
        "__v": 0
    },
    {
        "_id": "5f605b70468ccc0964b0c266",
        "submission_code": "//author:satwik_bhv1\n#include<bits/stdc++.h>\n//datatypes\n#define ll long long\n#define ld long double\n//loops\n#define fr(i,z,n) for(ll i=z;i<n;i++)\n#define br(i,z,n) for(ll i=z;i>n;i--)\n//operations\n#define mp  make_pair\n#define ff  first\n#define ss  second\n#define pub push_back\n#define all(v) v.begin(),v.end()\n//map\n#define mi map<ll,ll>\n//vectors\n#define vi vector<ll>\n#define vpi vector<pair<ll,ll> >\n//constants\n#define pi 3.1415926535897932384626\n#define mod 1000000007\n#define MAXN 100001\n/*notes\n    Don't use inbuilt fun for power\n    Range of longlong=(-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 )\n    INT_MAX = 2147483647(aprox 2*10^10)\n    INT_MIN = -2147483648\n    LLONG_MAX = 9223372036854775807\n    LLONG_MIN = -9223372036854775808\n    __int128_t\n    __gcd is the function in built for hcf\n    priority queue is max heap by default\n    topological sort -> khan's algo use bfs and indegree of node\n    sssp(positive weighted edges) -> Dijkstras\n    apsp -> Floydwarshall\n    MST -> kruskal(DSU)\n*/\nusing namespace std;\n//functions\nll power(ll x,ll y){ll res=1;while(y){if(y%2){res*=x;}y/=2;x*=x;} return res;}\nll power(ll x,ll y,ll z){ll res=1;while(y){if(y%2){res=(res*x)%z;}y/=2;x=(x*x)%z;} return res;}\nvoid fast() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }\nbool sortbysec(const pair<ll, ll>& a, const pair<ll, ll>& b) { return (a.second > b.second); }\nll ceil(ll x,ll y){return (x/y)+(x%y!=0);}\nconst int dx[4] = { -1, 1, 0, 0};\nconst int dy[4] = {0, 0, -1, 1};\nint dxx[] = { -1, -1, -1, 0, 0, 1, 1, 1 };\nint dyy[] = { -1, 0, 1, -1, 1, -1, 0, 1 };\nvoid solve()\n{\n    ll n,m;\n    cin>>n>>m;\n    char arr[n][m];\n    pair<string,string> str[n][m];\n    fr(i,0,n)\n    {\n        fr(j,0,m)\n        {\n            str[i][j]={\"\",\"\"};\n            cin>>arr[i][j];\n        }\n    }\n    string s=\"\",t=\"\";\n    fr(i,1,n)\n    {\n        str[i][0].ff=s+arr[i][0];\n        s=str[i][0].ff;\n        str[i][0].ss=t+'D';\n        t=str[i][0].ss;\n    }\n    s=\"\";\n    t=\"\";\n    fr(j,1,m)\n    {\n        str[0][j].ff=s+arr[0][j];\n        s=str[0][j].ff;\n        str[0][j].ss=t+'R';\n        t=str[0][j].ss;\n    }\n    ll r=0,c=0;\n    fr(i,1,n)\n    {\n        fr(j,1,m)\n        {\n            if(c<=j-1&&str[i-1][j].ff.compare(str[i][j-1].ff)<0)\n            {\n                str[i][j].ff=str[i-1][j].ff+arr[i][j];\n                str[i][j].ss=str[i-1][j].ss+'D';\n                r++;\n            }\n            else\n            {\n                str[i][j].ff=str[i][j-1].ff+arr[i][j];\n                str[i][j].ss=str[i][j-1].ss+'R';\n                if(str[i-1][j].ff.compare(str[i][j-1].ff)!=0)\n                {\n                   c++;\n                }\n            }\n        }\n    }\n    cout<<str[n-1][m-1].ss<<'\\n';\n}\nint main()\n{\n    fast();\n    ll t;\n    //t=1;\n    cin>>t;\n    fr(i,0,t)\n    {\n        cout<<\"Case #\"<<i+1<<\": \";\n        solve();\n    }\n}\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480761,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "2801145",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599982093,
        "updated_at_ms": 1599986893,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:13:04.497Z",
        "__v": 0
    },
    {
        "_id": "5f605b79468ccc0964b0c267",
        "submission_code": "t=int(input())\nl=[]\nfor i in range(t):\n    l.append(int(input()))\npr=[True for i in range(max(l)+1)]\npr[0]=pr[1]=False\np=2\nwhile(p*p<=max(l)):\n    if(pr[p]):\n        for i in range(2*p,max(l)+1,p):\n            pr[i]=False\n    if(p==2):\n        p+=1\n    else:\n        p+=2\nfor i in range(t):\n    cnt=0\n    for j in range(l[i]+1):\n        if(pr[j]):\n            cnt+=1\n    \n    print((2**cnt)%1000000007//2)\n#print(pr)\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480758,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5298342",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "18pa1a0511",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982092,
        "updated_at_ms": 1599983292,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:13:13.979Z",
        "__v": 0
    },
    {
        "_id": "5f605b81468ccc0964b0c268",
        "submission_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        CP sc = new CP();\n        sieveOfEratosthenes();\n        int tt = sc.nextInt();\n        while (tt-- > 0) {\n            int n = sc.nextInt();\n            if(n==1)\n                System.out.println(0);\n            else if(n==2)\n                System.out.println(1);\n            else{\n                int x = Collections.binarySearch(ar,n);\n                if(x>=0)\n                    System.out.println(powmod(x,1000000007));\n                else{\n                    x = Math.abs(x)-2;\n                    System.out.println(powmod(x,1000000007));\n                }\n            }\n        }\n    }\n    static int powmod(int n, int m) {\n        int ret = 1;\n        for(int i = 0; i < n; ++i)\n            ret = ( (ret % m) * (2 % m) ) % m;\n        return ret;\n    }\n    static long[] A = new long[1000001];\n    static ArrayList<Integer> ar = new ArrayList<>();\n    static boolean[] prime = new boolean[1000001];\n\n    static void sieveOfEratosthenes() {\n        for (int i = 0; i < 1000000; i++)\n            prime[i] = true;\n\n        for (int p = 2; p * p <= 1000000; p++) {\n            if (prime[p]) {\n                for (int i = p * p; i <= 1000000; i += p)\n                    prime[i] = false;\n            }\n        }\n        for(int i=2;i<prime.length;i++) {\n            if(prime[i]) {\n                ar.add(i);\n            }\n        }\n    }\n\n    /*****************************************************************************/\n    static class CP {\n        BufferedReader bufferedReader;\n        StringTokenizer stringTokenizer;\n\n        public CP() {\n            bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        int nextInt() {\n            return Integer.parseInt(NNNN());\n        }\n\n        long nextLong() {\n            return Long.parseLong(NNNN());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(NNNN());\n        }\n\n        String NNNN() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreElements()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        String nextLine() {\n            String spl = \"\";\n            try {\n                spl = bufferedReader.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return spl;\n        }\n    }\n    /*****************************************************************************/\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480752,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6761071",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "shreyansh_shrey1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982086,
        "updated_at_ms": 1599986886,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:13:21.179Z",
        "__v": 0
    },
    {
        "_id": "5f605b87468ccc0964b0c269",
        "submission_code": "#include <bits/stdc++.h> \n#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t;\n    cin>>t;\n    //ios_base::sync_with_stdio(false);\n    //cin.tie(NULL);\n    for(int i=0;i<t;i++)\n    {\n        int n,count=0;\n        cin>>n;\n        for(int j=1;j<=n;j++)\n        {\n            if(j%2!=0)\n            {\n                count=count+1;\n            }\n            \n        }\n        cout<<count<<\"\\n\";\n        \n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480747,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7783852",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "dineshreddyredd4",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982081,
        "updated_at_ms": 1599986881,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:13:27.729Z",
        "__v": 0
    },
    {
        "_id": "5f605b90468ccc0964b0c26a",
        "submission_code": "t=int(input())\nfor k in range(t):\n    s=[]\n    D,R='D','R'\n    print('Case #',end=\"\")\n    print(k+1,end=\"\")\n    print(': ',end=\"\")\n    n,m=map(int,input().split())\n    for i in range(n):\n        l=str(input())\n        l=list(l)\n        s.append(l) \n    dp=[]\n    point=[]\n    for i in range(0,n): \n        l=[]\n        for j in range(0,m):\n            l.append(\"a\");\n        dp.append(l); \n    for i in range(0,n): \n        l=[]\n        for j in range(0,m):\n            l.append(\"a\");\n        point.append(l);\n    dp[0][0]=s[0][0] \n    point[0][0]=\"\"\n    for i in range(1,n):\n        dp[i][0]=dp[i-1][0]+s[i][0]\n        point[i][0]=point[i-1][0]+D\n    for j in range(1,m):\n        dp[0][j]=dp[0][j-1]+s[0][j];\n        point[0][j]=point[0][j-1]+R;\n    for i in range(1,n):\n        for j in range(1,m):\n            if(dp[i-1][j]>dp[i][j-1]):\n                dp[i][j]=dp[i][j-1]+s[i][j];\n                point[i][j]=point[i][j-1]+R;\n            elif(dp[i-1][j]<dp[i][j-1]):\n                dp[i][j]=dp[i-1][j]+s[i][j];\n                point[i][j]=point[i-1][j]+D;\n            else:\n                if(point[i-1][j]<point[i][j-1]):\n                    dp[i][j]=dp[i-1][j]+s[i][j];\n                    point[i][j]=point[i-1][j]+D;\n                else:\n                    dp[i][j]=dp[i][j-1]+s[i][j];\n                    point[i][j]=point[i][j-1]+R;  \n    print(point[n-1][m-1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480730,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "5687885",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "balajipulugujju1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599982057,
        "updated_at_ms": 1599985657,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:13:36.629Z",
        "__v": 0
    },
    {
        "_id": "5f605b99468ccc0964b0c26b",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\ntypedef struct node{\n    int x;\n    int y;\n}node;\n\nnode coordinate(node arr[],int n)\n{\n    node ret;\n    int min=99999;\n    int i,j;\n    for(i=0;i<n;i++)\n    {\n        int sum=0;\n        for(j=0;j<n;j++)\n        {\n            sum=sum=sum+((((arr[i].x)-(arr[j].x))*((arr[i].x)-(arr[j].x)))+(((arr[i].y)-(arr[j].y))*((arr[i].y)-(arr[j].y))));\n        }\n        if(sum<min)\n            {\n                min=sum;\n                ret.x=arr[i].x;\n                ret.y=arr[i].y;\n            }\n            else if(sum==min)\n            {\n                if(arr[i].x<ret.x)\n                {\n                    ret.x=arr[i].x;\n                    ret.y=arr[i].y;\n                }\n                else if(arr[i].x == ret.x)\n                {\n                    if(arr[i].y<ret.y)\n                    {\n                        ret.x=arr[i].x;\n                        ret.y=arr[i].y;\n                    }\n                }\n            }\n    }\n    return ret;\n}\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int n,noc,a,b,i,j;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&noc);\n        node val[noc];\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d%d\",&a,&b);\n            node z;\n            z.x=a;\n            z.y=b;\n            val[j]=z;\n        }\n        \n        node kkk= coordinate(val,noc);\n        printf(\"%d %d\\n\",kkk.x,kkk.y);\n        \n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480723,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4675361",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "tekulahemanth",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599982044,
        "updated_at_ms": 1599982044,
        "misc_notes": "[\"Segmentation Fault\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Segmentation Fault\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:13:45.378Z",
        "__v": 0
    },
    {
        "_id": "5f605ba0468ccc0964b0c26c",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\ntypedef unsigned long long ll;\ntypedef pair<int, int> pii;\n#define sz(x) (int)(x).size()\n#define all(x) x.begin(), x.end()\n#define itn int\n \nll powmod(ll a,ll b) {ll res=1; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a; }\n\nconst int MX = 2e5+5; \nconst int N = 10001;\nint n,m;\n\nint getit(vector<pair<int,ll>> v[],int p, vector<int>& vis, ll z){\n    if(p+1 == n*m) return 1;\n    vis[p] = 1;\n    for(int i=0;i<v[p].size();++i){\n        if((v[p][i].S&z) == z && !vis[v[p][i].F]){\n            if(getit(v, v[p][i].F, vis, z)) return 1;\n        }\n    }\n    return 0;\n}\n\nvoid kd(vector<pair<int,ll>> v[], int p, vector<int> &vis, ll z){\n    vis[p] = 1;\n    for(auto q : v[p]) {\n        if((q.S&z)<=0) q.S=0;\n        if(vis[q.F]) kd(v,q.F,vis,z);\n    }\n}\n\nll getans(vector< pair<int,ll>> v[], ll cb)\n{\n    ll a = 0;\n    if(cb == -1)  return  0;\n    ll ans = 0;\n    ll r = 0;\n    for(int i = cb;i;i--) {\n        vector<int> x(n*m);\n          r = ans|1ll<<i;\n          if(getit(v, 0, x, r)){\n            ans = ans|(1ll<<i);\n            r = ans;\n        }\n    }\n    return ans;\n}\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--) {\n        cin>>m>>n;\n        vector<pair<int,ll>> v[n*m];\n        for(int i =0; i < m;++i) {\n            for(int j =0;j< n;j++) {\n                ll l;\n                if(i < m -1) {\n                    cin>>l;\n                    v[i*n + j].pb({i*n+j+n, l});\n                    v[(i+1)*n+j].pb({i*n+j, l});\n                }\n                if(j < n -1) {\n                    cin>>l;\n                    v[i*n + j].pb({(i)*n+j+1, l});\n                    v[(i)*n+j+1].pb({(i)*n+j, l});    \n                }\n            }\n        }\n        cout<<getans(v, 63)<<\"\\n\";\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480721,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "6937721",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "ak821",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599982039,
        "updated_at_ms": 1599985639,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\",\"Success\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:13:52.728Z",
        "__v": 0
    },
    {
        "_id": "5f605bab468ccc0964b0c26d",
        "submission_code": "//author:satwik_bhv1\n#include<bits/stdc++.h>\n//datatypes\n#define ll long long\n#define ld long double\n//loops\n#define fr(i,z,n) for(ll i=z;i<n;i++)\n#define br(i,z,n) for(ll i=z;i>n;i--)\n//operations\n#define mp  make_pair\n#define ff  first\n#define ss  second\n#define pub push_back\n#define all(v) v.begin(),v.end()\n//map\n#define mi map<ll,ll>\n//vectors\n#define vi vector<ll>\n#define vpi vector<pair<ll,ll> >\n//constants\n#define pi 3.1415926535897932384626\n#define mod 1000000007\n#define MAXN 100001\n/*notes\n    Don't use inbuilt fun for power\n    Range of longlong=(-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 )\n    INT_MAX = 2147483647(aprox 2*10^10)\n    INT_MIN = -2147483648\n    LLONG_MAX = 9223372036854775807\n    LLONG_MIN = -9223372036854775808\n    __int128_t\n    __gcd is the function in built for hcf\n    priority queue is max heap by default\n    topological sort -> khan's algo use bfs and indegree of node\n    sssp(positive weighted edges) -> Dijkstras\n    apsp -> Floydwarshall\n    MST -> kruskal(DSU)\n*/\nusing namespace std;\n//functions\nll power(ll x,ll y){ll res=1;while(y){if(y%2){res*=x;}y/=2;x*=x;} return res;}\nll power(ll x,ll y,ll z){ll res=1;while(y){if(y%2){res=(res*x)%z;}y/=2;x=(x*x)%z;} return res;}\nvoid fast() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }\nbool sortbysec(const pair<ll, ll>& a, const pair<ll, ll>& b) { return (a.second > b.second); }\nll ceil(ll x,ll y){return (x/y)+(x%y!=0);}\nconst int dx[4] = { -1, 1, 0, 0};\nconst int dy[4] = {0, 0, -1, 1};\nint dxx[] = { -1, -1, -1, 0, 0, 1, 1, 1 };\nint dyy[] = { -1, 0, 1, -1, 1, -1, 0, 1 };\nvoid solve()\n{\n    ll n,m;\n    cin>>n>>m;\n    char arr[n][m];\n    pair<string,string> str[n][m];\n    fr(i,0,n)\n    {\n        fr(j,0,m)\n        {\n            str[i][j]={\"\",\"\"};\n            cin>>arr[i][j];\n        }\n    }\n    string s=\"\",t=\"\";\n    fr(i,1,n)\n    {\n        str[i][0].ff=s+arr[i][0];\n        s=str[i][0].ff;\n        str[i][0].ss=t+'D';\n        t=str[i][0].ss;\n    }\n    s=\"\";\n    t=\"\";\n    fr(j,1,m)\n    {\n        str[0][j].ff=s+arr[0][j];\n        s=str[0][j].ff;\n        str[0][j].ss=t+'R';\n        t=str[0][j].ss;\n    }\n    ll r=0,c=0;\n    fr(i,1,n)\n    {\n        fr(j,1,m)\n        {\n            if(c<=j-1&&str[i-1][j].ff.compare(str[i][j-1].ff)<0)\n            {\n                str[i][j].ff=str[i-1][j].ff+arr[i][j];\n                str[i][j].ss=str[i-1][j].ss+'D';\n                r++;\n            }\n            else\n            {\n                str[i][j].ff=str[i][j-1].ff+arr[i][j];\n                str[i][j].ss=str[i][j-1].ss+'R';\n                c++;\n            }\n        }\n    }\n    cout<<str[n-1][m-1].ss<<'\\n';\n}\nint main()\n{\n    fast();\n    ll t;\n    //t=1;\n    cin>>t;\n    fr(i,0,t)\n    {\n        cout<<\"Case #\"<<i+1<<\": \";\n        solve();\n    }\n}\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480715,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "2801145",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599982026,
        "updated_at_ms": 1599985626,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:14:03.177Z",
        "__v": 0
    },
    {
        "_id": "5f605bb4468ccc0964b0c26e",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n       Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        int x=0,y=0,n;\n        double f2,f1;\n        for(int i=0;i<t;i++)\n        {\n            n=sc.nextInt();\n            int[] a=new int[n];\n            int[] b=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[j]=sc.nextInt();\n            }\n            f1=0;\n            x=0;\n            y=0;\n            for(int k=0;k<n;k++)\n            {\n                 f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+(Math.pow((a[k]-a[j]),2))+(Math.pow((b[k]-b[j]),2));\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            System.out.println(x+\" \"+y);\n        }\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480704,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6637308",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "badiniswetha",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599982018,
        "updated_at_ms": 1599985618,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:14:12.777Z",
        "__v": 0
    },
    {
        "_id": "5f605bbf468ccc0964b0c26f",
        "submission_code": "t=int(input())\nfor k in range(t):\n    n,m=map(int,input().split())\n    r=[]\n    c=[]\n    ecount=0\n    ocount=0\n    for i in range(m):\n        t1,t2=map(int,input().split())\n        if (t1+t2)%2==0:\n            ecount=ecount+1\n        else:\n            ocount=ocount+1\n        r.append(t1)\n        c.append(t2)\n    if n==2:\n        print(\"Case #\",k+1,\": \",4-m,sep=\"\")\n        continue\n    if n%2==0:\n        count=(n//2)*n-min(ecount,ocount)\n        if ecount<ocount:\n            x=2\n        else:\n            x=1\n    else:\n        count=max(((n-1)//2*(n-1)//2+(n+1)//2*(n+1)//2-ecount),((n-1)//2*(n+1)//2+(n+1)//2*(n-1)//2-ocount))\n        if ((n-1)//2*(n-1)//2+(n+1)//2*(n+1)//2-ecount)>((n-1)//2*(n+1)//2+(n+1)//2*(n-1)//2-ocount):\n            x=2\n        else:\n            x=1\n    for i in range(x,n+1,2):\n        for j in range(x,n+1,2):\n            for m in range(len(r)):\n                if r[m]==i+2 and c[m]==j+1:\n                    count=count+1\n    print(\"Case #\",k+1,\": \",count,sep=\"\")\n                \n                \n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480701,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "4674964",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "160218733110CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599982016,
        "updated_at_ms": 1599983216,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:14:23.289Z",
        "__v": 0
    },
    {
        "_id": "5f605bc8468ccc0964b0c270",
        "submission_code": "# Enter your code here. Read input from STDIN. Print output to STDOUT\n\n# Python3 program to find the \n\n# Superfactorial of a number \n\n  \n\n# function to calculate the \n\n# value of Superfactorial  \n\ndef superfactorial(n): \n\n  \n\n    # initialise the \n\n    # val to 1 \n\n    val = 1\n\n    ans = [] \n\n    for i in range(1, n + 1): \n\n        val = val * i \n\n        ans.append(val) \n\n    # ans is the list with \n\n    # all factorial till n. \n\n    arr = [1] \n\n    for i in range(1, len(ans)): \n\n        arr.append((arr[-1]*ans[i])) \n\n  \n\n    return arr \n\n  \n\n# Driver Code \n\nn = 5\n\narr = superfactorial(n) \nprint(arr[-1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480693,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9689565",
        "submission_status": "Wrong Answer",
        "submission_language": "python",
        "site_user_handle": "shamikha2871998",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599982007,
        "updated_at_ms": 1599982007,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:14:32.026Z",
        "__v": 0
    },
    {
        "_id": "5f605bd1468ccc0964b0c271",
        "submission_code": "import java.util.*;\nimport java.io.*;\n\npublic class Solution {\n    \n    public static void main(String[] args) throws IOException{\n        \n        BufferedReader br = new BufferedReader( new InputStreamReader(System.in));\n        \n        int t = Integer.parseInt(br.readLine());\n        int k = 1;\n        while (t != 0) {\n            System.out.print(\"Case #\"+(k++)+\": \");\n            String[] nums = br.readLine().split(\"\\\\s\");\n            int n = Integer.parseInt(nums[0]);\n            int m = Integer.parseInt(nums[1]);\n            char[][] temp = new char[n][m];\n            \n            for (int i=0; i<n; i++) {\n                    temp[i] = br.readLine().toCharArray();\n            }\n            int dp[][] = new int[n][m];\n            int arr[][] = new int[n][m];\n            for (int i=0; i<n; i++) {\n                for (int j=0; j<m; j++) {\n                    arr[i][j] = temp[i][j]-'A'+1;\n                    dp[i][j] += arr[i][j];\n                    \n                    if (i>0 && j>0) {\n                        dp[i][j] += Math.min(dp[i-1][j], dp[i][j-1]);\n                    } else if (i > 0) {\n                        dp[i][j] += dp[i-1][j];\n                    } else if (j > 0) {\n                        dp[i][j] += dp[i][j-1];\n                    }\n                }\n            }\n            \n      \n              int i = n-1, j = m-1;\n              String ans = \"\";\n              while(true){\n                  \n                if(i == 0 && j == 0){\n                      break;\n                }\n                \n                if(i == 0){\n                  --j;\n                  \n                  ans += \"R\";\n                  continue;\n                }\n                \n                if(j == 0){\n                  --i;\n                    ans += \"D\";\n                  continue;\n                }\n                \n                int ele = dp[i][j]-arr[i][j];\n                // System.out.println(\"ele\"+ ele+ \" \"+  dp[i][j] + \" \" + arr[i][j] + \" \" + i + \" \" + j);\n                if(dp[i][j-1] == ele){\n                    --j;\n                  ans += \"R\";\n                  continue;\n                }\n                \n                if(dp[i-1][j] == ele){\n                     --i;\n                  ans += \"D\";\n                }\n              }\n              \n              StringBuilder sb = new StringBuilder(ans);\n            System.out.println(sb.reverse().toString());\n      \n    \n            t--;\n        }\n        \n        br.close();\n    }\n        \n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480667,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "6619310",
        "submission_status": "Wrong Answer",
        "submission_language": "java8",
        "site_user_handle": "Rahul_Sripada",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599981976,
        "updated_at_ms": 1599981976,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:14:41.976Z",
        "__v": 0
    },
    {
        "_id": "5f605bdb468ccc0964b0c272",
        "submission_code": "#include <bits/stdc++.h> \nusing namespace std; \nvoid countCoprimePairs(int n) \n{ \n    long long int count = 0;\n    for (long long int i = 2; i <= sqrt(n); i++) { \n        if (n % i == 0) { \n            if (__gcd(i, (n / i)) == 1) {             \n              count++; \n            } \n        } \n    }  \n    cout<<count+1 <<\"\\n\"; \n}  \nint main() \n{ \n    long long int t,b=1;\n    cin >> t;\n     while (t--)\n    {\n  long long N;\n  cin >> N;\n  for(long long int i=1;i<=N;i++)\n  {\n      b=b*i;\n  }\n    countCoprimePairs(b); \n    }\n} ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480659,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9675923",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "manivardhanredd4",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981967,
        "updated_at_ms": 1599986767,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:14:51.880Z",
        "__v": 0
    },
    {
        "_id": "5f605be4468ccc0964b0c273",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\nvector<pair<int,int> >vii;\nint n,m,cnt=0,k;\nint sol = INT_MIN;\nint max_knight(int n,int m){\n    if(n==1){\n        return 1;\n    }   \n    else if(n==2){\n        int c = 0;\n        c = (max(m,n)/4)*4;\n        if (max(m, n) % 4 == 1) { \n            c += 2; \n        } \n        else if (max(m, n) % 4 > 1) { \n            c += 4; \n        } \n        return c;\n    }\n    else{\n        return (((m * n) + 1) / 2);\n    }\n}\n\n\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);    \n    int t;\n    cin>>t;\n    for(int ti=1;ti<=t;ti++){\n        sol = INT_MIN;\n        int N,M;\n        int ww=0,bb=0;\n        cin>>N>>M;\n        while(M--){\n            vii.clear();\n            int a,b;\n            cin>>a>>b;\n            if(b%2==0){\n                if(a%2==0){\n                    ww++;\n                }\n                else{\n                    bb++;\n                }\n            }\n            else {\n                if(a%2==0){\n                    bb++;\n                }\n                else{\n                    ww++;\n                }\n            }\n            vii.push_back({a,b});\n        }\n        n = N;\n        m = N;\n        k = max_knight(n,m);\n        int min1 = min(ww,bb);\n        sol = k-min1;\n        cout<<\"Case #\"<<ti<<\":\"<<sol<<\"\\n\";\n        \n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480651,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "3988713",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "prashanth_bhona1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599981959,
        "updated_at_ms": 1599981959,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:15:00.075Z",
        "__v": 0
    },
    {
        "_id": "5f605beb468ccc0964b0c274",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\nvector<ll> primes;\nll m = 1000000007;\n\n//geeksforgeeks\nbool isPrime(ll n) \n{ \n    // Corner cases \n    if (n <= 1)  return false; \n    if (n <= 3)  return true; \n  \n    // This is checked so that we can skip  \n    // middle five numbers in below loop \n    if (n%2 == 0 || n%3 == 0) return false; \n  \n    for (ll i=5; i*i<=n; i=i+6) \n        if (n%i == 0 || n%(i+2) == 0) \n           return false; \n  \n    return true; \n} \n\n\nvoid solve(){\n    ll n;\n    cin >> n;\n    ll count = upper_bound(primes.begin(),primes.end(),n) - primes.begin();\n    \n    ll sum = 1;\n    for(ll i =0;i<count-1;i++){\n        sum = (sum *2)%m;\n    }\n    \n    \n    \n       cout << sum << endl;\n        \n    \n\n    \n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ll t;\n    ll n = 1000000;\n    for(auto i =2;i<n;i++){\n        if(isPrime(i)){ primes.push_back(i);}  \n    }\n\n    cin  >> t;\n    while(t--){\n        solve();\n    }\n   \n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480639,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4235687",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "160218733011CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981936,
        "updated_at_ms": 1599983136,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:15:07.075Z",
        "__v": 0
    },
    {
        "_id": "5f605bf5468ccc0964b0c275",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef pathcount(n,m):\n    if n==0 or m==0:\n        return 1\n    return pathcount(n-1,m) + pathcount(n,m-1)\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        x,y,x1,y1,x2,y2=input().split()\n        res = pathcount(int(x),int(y))- 4*pathcount(int(x1),int(y1))- 4*pathcount(int(x2),int(y2))\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480620,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "6846110",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981918,
        "updated_at_ms": 1599981918,
        "misc_notes": "[\"Wrong Answer\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:15:17.074Z",
        "__v": 0
    },
    {
        "_id": "5f605bfd468ccc0964b0c276",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define mod 1000000007\n#define ll long long\nll arr[10000000];\n \nll fpow(ll a, int b) \n{   if (b==0) return 1;\n    ll t= fpow(a, b/2);\n    t= (t*t)%mod;\n    if (b%2==0) return t;\n    return (t*a)%mod;\n}\nll anss(ll a,ll b, ll c, ll d1){\n    ll s=1;\n    ll n=c-a;\n    ll m=d1-b;\n    ll d;\n     d=(arr[n]*arr[m])%mod;\n          s= (s%mod * ((arr[n+m]*fpow(d,mod-2))%mod))%mod;\n         return s;\n    \n}\n \nint main() \n{   arr[0]=1;\n    for(int i=1;i<10000000;i++)arr[i]=(arr[i-1]*i)%mod;\n      ll t; cin>>t;\n while(t--){\n      ll a,b,c,d,e,f;\n cin>>a>>b>>c>>d>>e>>f;\n     \n  ll arv=anss(0,0,a,b);\n  ll arv1=(anss(0,0,c,d)*anss(c,d,a,b))%mod;\n  ll arv2=(anss(0,0,e,f)*anss(e,f,a,b))%mod;\n  ll arv3=(((anss(0,0,c,d)*anss(c,d,e,f))%mod)*anss(e,f,a,b))%mod;\n  cout<<(((((arv-arv1)%mod)-arv2)%mod)+arv3)%mod<<endl;\n}\n         \n}//end of main",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480610,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4724102",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "18H51A05C3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981906,
        "updated_at_ms": 1599985506,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:15:25.774Z",
        "__v": 0
    },
    {
        "_id": "5f605c05468ccc0964b0c277",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nlong long int prime[1000001]={0},a[1000001],power[1000001]={0},m=1000000007;\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    long long int i,j,t,n;\n    power[0]=1;\n    for(i=1;i<1000000;i++)\n    {\n        power[i]=((power[i-1]%m)*(2%m))%m;\n    }\n    prime[1]=1;\n     for(i=2;i<=1000000;i++)\n     {\n        if(prime[i]==0)\n        {\n            for(j=i*i;j<=1000000;j+=i)\n            {\n                prime[j]=1;\n            }\n        }\n     }\n    a[0]=0;\n    a[1]=0;\n    for(i=2;i<=1000000;i++)\n    {\n        if(prime[i]==0)\n            a[i]=a[i-1]+1;\n        else\n            a[i]=a[i-1];\n    }\n    cin>>t;\n    while(t--){\n        cin>>n;\n        cout<<power[a[n]-1]<<endl;\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480606,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7133320",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "logicalcoder9908",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981903,
        "updated_at_ms": 1599985503,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:15:33.324Z",
        "__v": 0
    },
    {
        "_id": "5f605c0d468ccc0964b0c278",
        "submission_code": "fact=[]\n\ndef nCr(n, r, p): \n    # initialize numerator \n    # and denominator \n    num = den = 1 \n    for i in range(r): \n        num = (num * (n - i)) % p \n        den = (den * (i + 1)) % p \n    return (num * pow(den, p - 2, p)) % p\n\n#def pre():\n#    global fact\n#    fact.append(0)\n#    fact.append(1)\n#    for i in range(2,1000000):\n#        fact.append((factorials[i-1]*i)%10**9+7)\n\n#def countWays(m, n, x, y):\n#    return (nCr(m + n, m) - nCr(x + y, x) * \n#            nCr(m + n - x - y, m - x))\n\n#def nCr(n, r): \n#    \n#    return (fact(n) // (fact(r) *\n#                        fact(n - r))) \n#def fact(n): \n#    res = 1\n#    for i in range(2, n + 1): \n#        res = res * i \n#    return res \n\ndef countWays(m, n, x1, y1,x2,y2): \n    return (nCr(m + n, m,mod) - nCr(x1 + y1, x1,mod) *nCr(m + n - x1 - y1, m - x1,mod)-nCr(x2 + y2, x2,mod) *nCr(m + n -x2 - y2, m - x2,mod)+nCr(x2+ y2 - x1 - y1, x2 - x1,mod)*nCr(x1 + y1, x1,mod)*nCr(m+n-x2-y2, n-y2,mod)) \nt=int(input())\nmod=10**9+7\nfor i in range(t):\n    m,n,x,y,x2,y2=map(int,input().split())  \n    print(countWays(m, n, x, y, x2,y2))\n    \n\n\n\n\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480605,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4684377",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "karthikreddy_10",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981900,
        "updated_at_ms": 1599981900,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:15:41.375Z",
        "__v": 0
    },
    {
        "_id": "5f605c13468ccc0964b0c279",
        "submission_code": "def nCr(n, r): \n    \n    return (fact(n)%(1000000007) // (fact(r)%(1000000007) *fact(n - r)%(1000000007)))%(1000000007) \ndef fact(n): \n    res = 1\n    for i in range(2, n + 1): \n        res = (res%(1000000007) * i )%(1000000007)\n    return res%1000000007\ndef countWays(m, n, x1, y1,x2,y2): \n    return (nCr(m + n, m) - nCr(x1 + y1, x1) *nCr(m + n - x1 - y1, m - x1)-nCr(x2 + y2, x2) *nCr(m + n - x2 - y2, m - x2)+nCr(x2+ y2 - x1 - y1, x2 - x1)*nCr(x1 + y1, x1)*nCr(m+n-x2-y2, n-y2)) \nt=int(input())\nfor i in range(t):\n    m,n,x,y,x2,y2=map(int,input().split())  \n    print(countWays(m, n, x, y, x2,y2)) \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480594,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4674163",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981882,
        "updated_at_ms": 1599983082,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:15:47.582Z",
        "__v": 0
    },
    {
        "_id": "5f605c1d468ccc0964b0c27a",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define mod 1000000007\n#define ll long long\nll arr[10000000];\n \nll fpow(ll a, int b) \n{   if (b==0) return 1;\n    ll t= fpow(a, b/2);\n    t= (t*t)%mod;\n    if (b%2==0) return t;\n    return (t*a)%mod;\n}\nll anss(ll a,ll b, ll c, ll d1){\n    ll s=1;\n    ll n=c-a;\n    ll m=d1-b;\n    ll d;\n     d=(arr[n]*arr[m])%mod;\n          s= (s%mod * ((arr[n+m]*fpow(d,mod-2))%mod))%mod;\n         return s;\n    \n}\n \nint main() \n{   arr[0]=1;\n    for(int i=1;i<10000000;i++)arr[i]=(arr[i-1]*i)%mod;\n      ll t; cin>>t;\n while(t--){\n      ll a,b,c,d,e,f;\n cin>>a>>b>>c>>d>>e>>f;\n     ll d1=(anss(0,0,c,d)%mod*anss(c,d,a,b)%mod)%mod;\n     ll d2=(anss(0,0,e,f)%mod*anss(e,f,a,b)%mod)%mod;\n     ll d3=  (anss(0,0,c,d)%mod*anss(c,d,e,f)%mod)%mod;\n     d3=( d3%mod *anss(e,f,a,b)%mod)%mod;\n     ll aa=anss(0,0,a,b)-(d1+d2-d3);\n     if(aa<0)\n         aa=mod-aa;\n         \n   cout<<aa<<endl;\n}\n         \n}//end of main",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480585,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4724102",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "18H51A05C3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981870,
        "updated_at_ms": 1599984270,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:15:57.623Z",
        "__v": 0
    },
    {
        "_id": "5f605c25468ccc0964b0c27b",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n#define mod 1000000007\n\nunsigned long long power(int x,unsigned long long y)  \n{  \n    unsigned long long temp;  \n    if(y == 0)  \n        return 1;  \n    temp = power(x, y / 2)%mod;  \n    if (y % 2 == 0)  \n        return (temp * temp)%mod;  \n    else\n    {  \n        if(y > 0)  \n            return (x * temp * temp)%mod;  \n        else\n            return ((temp * temp) / x)%mod;  \n    }  \n}\nvoid fastscan(long long &x)\n    {\n        bool neg=false;\n        register int c;\n        x =0;\n        c=getchar();\n        if(c=='-')\n        {\n            neg = true;\n            c=getchar();\n        }\n        for(;(c>47 && c<58);c=getchar())\n            x = (x<<1) + (x<<3) +c -48;\n        if(neg)\n            x *=-1;\n    }\nint main() {\n    long long t,n,i,j,prime[1000005],c=0,cp[1000005];\n    fastscan(t);\n    for(i=1;i<1000003;i++){\n        prime[i]=1;\n    }\n    cp[1]=1;\n    for(i=2;i<1000003;i++){\n        if(prime[i]==1){\n            for(j=2*i;j<1000003;j=j+i){\n                prime[j]++;\n            }\n            c++;\n        }\n        cp[i]=c;\n    }\n    while(t--){\n        fastscan(n);\n        if(n==1){\n            printf(\"0\\n\");\n        }\n        c = cp[n];\n        printf(\"%llu\\n\",power(2,c-1)%mod);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480574,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981852,
        "updated_at_ms": 1599995052,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:16:05.972Z",
        "__v": 0
    },
    {
        "_id": "5f605c2c468ccc0964b0c27c",
        "submission_code": "T=int(input())\nfor _ in range(T):\n    x=[int(a) for a in input().split()]\n    ck=[[x[2],x[3]],[x[4],x[5]]]\n    dp=[[0 for i in range(x[0]+1)] for j in range(x[1]+1)]\n    dp[x[1]-x[3]][x[2]]=-1\n    dp[x[1]-x[5]][x[4]]=-1\n    for i in range(x[0]+1):\n        if(x[1]==x[1]-x[3] and i==x[2]):\n            break\n        if(x[1]==x[1]-x[5] and i==x[4]):\n            break\n        dp[x[1]][i]=1\n    for i in range(x[1],-1,-1):\n        if(i==x[1]-x[3] and 0==x[2]):\n            break\n        if(i==x[1]-x[5] and 0==x[4]):\n            break\n        dp[i][0]=1\n    i=x[1]-1\n    while(i>=0):\n        for j in range(1,x[0]+1):\n            if(dp[i][j]==-1):\n                dp[i][j]=0\n                continue\n            dp[i][j]=dp[i+1][j]+dp[i][j-1]\n        i-=1\n    print(dp[0][x[0]])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480570,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "6986737",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "vegishanmukh7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981845,
        "updated_at_ms": 1599984245,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:16:12.422Z",
        "__v": 0
    },
    {
        "_id": "5f605c33468ccc0964b0c27d",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t;\n    cin>>t;\n    for(int i=0;i<t;i++)\n    {\n        int n,count=0;\n        cin>>n;\n        for(int j=1;j<=n;j++)\n        {\n            if(j%2!=0)\n            {\n                count=count+1;\n            }\n            \n        }\n        cout<<count<<\"\\n\";\n        \n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480566,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7783852",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "dineshreddyredd4",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981836,
        "updated_at_ms": 1599985436,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:16:19.572Z",
        "__v": 0
    },
    {
        "_id": "5f605c3a468ccc0964b0c27e",
        "submission_code": "import math\ndef factorial(n):\n         fact=1\n         for i in range(1,n+1): \n                  fact = fact * i \n         return fact\ndef get_gcd(x, y):\n         while(y):\n                  x, y = y, x % y\n         return x\nm=int(input())\nwhile m>0:\n         n=factorial(int(input()))\n         count = 0\n         for i in range(1, int(n**0.5) + 1) : \n                  if n % i == 0 and get_gcd(i, n // i) == 1 :  \n                                    count += 1\n         count=count%1000000007\n         print( count) \n         m-=1 \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480565,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4544619",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vallalasaivishw1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981836,
        "updated_at_ms": 1599986636,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:16:26.222Z",
        "__v": 0
    },
    {
        "_id": "5f605c43468ccc0964b0c27f",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define sz(x) (int)(x).size()\n#define all(x) x.begin(), x.end()\n#define itn int\n \nll powmod(ll a,ll b) {ll res=1; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n\nconst int MX = 2e5+5; \nconst int N = 10001;\nint n,m;\n\nint getit(vector<pair<int,ll>> v[],int p, vector<int>& vis, ll z){\n    if(p+1 == n*m) return 1;\n    vis[p] = 1;\n    for(int i=0;i<v[p].size();++i){\n        if((v[p][i].S&z) == z && !vis[v[p][i].F]){\n            if(getit(v, v[p][i].F, vis, z)) return 1;\n        }\n    }\n    return 0;\n}\n\nvoid kd(vector<pair<int,ll>> v[], int p, vector<int> &vis, ll z){\n    vis[p] = 1;\n    for(auto q : v[p]) {\n        if((q.S&z)<=0) q.S=0;\n        if(vis[q.F]) kd(v,q.F,vis,z);\n    }\n}\n\nll getans(vector< pair< int , ll > > v[], ll cb)\n{\n    ll a = 0;\n    if(cb == -1)  return  0;\n    ll ans = 0;\n    ll r = 0;\n    for(int i = cb;i;i--) {\n        vector<int> x(n*m);\n          r = ans|1ll<<i;\n          if(getit(v, 0, x, r)){\n            ans = ans|(1ll<<i);\n            r = ans;\n        }\n    }\n    return ans;\n}\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--) {\n        cin>>m>>n;\n        vector<pair<int,ll>> v[n*m];\n        for(int i =0; i < m;++i) {\n            for(int j =0;j< n;j++) {\n                ll l;\n                if(i < m -1) {\n                    cin>>l;\n                    v[i*n + j].pb({i*n+j+n, l});\n                    v[(i+1)*n+j].pb({i*n+j, l});\n                }\n                if(j < n -1) {\n                    cin>>l;\n                    v[i*n + j].pb({(i)*n+j+1, l});\n                    v[(i)*n+j+1].pb({(i)*n+j, l});    \n                }\n            }\n        }\n        cout<<getans(v, 63)<<\"\\n\";\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480548,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "6937721",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "ak821",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599981811,
        "updated_at_ms": 1599984211,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\",\"Success\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:16:35.221Z",
        "__v": 0
    },
    {
        "_id": "5f605c49468ccc0964b0c280",
        "submission_code": "def argmin(l,x,y):\n    res=0\n    for i in range(len(l)):\n        res=res+((l[i][0]-x)*(l[i][0]-x))+((l[i][1]-y)*(l[i][1]-y))\n    return res\nT=int(input())\n\nfor i in range (T):\n    N=int(input())\n    l=[]\n    \n    for i in range(N):\n        a,b=map(int,input().split())\n        l.append([a,b])\n    k=argmin(l,l[0][0],l[0][1])\n    r=[l[0][0],l[0][1]]\n    for i in range(1,N):\n        k1=argmin(l,l[i][0],l[i][1])\n        \n        if(k>k1):\n            k=k1\n            r=[l[i][0],l[i][1]]\n    print(r[0],end=\" \")\n    print(r[1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480545,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9380840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "trishulmabbu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981806,
        "updated_at_ms": 1599984206,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:16:41.871Z",
        "__v": 0
    },
    {
        "_id": "5f605c4f468ccc0964b0c281",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 1000005\n// #define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n// #define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\nmap<char,int> mp;\nstruct node{\n    int val = 0;\n    map<int,node*> m;\n} *root;\nnode* newnode(char c){\n    node* temp = new node;\n    temp->val = 0;\n    return temp;\n}\nmap<string,int> m;\nvoid add(string s){\n    int n = s.size();\n    node* cur = root;\n    rep(i,0,n){\n        cur->val++;\n        if(cur->m.find(mp[s[i]]) == cur->m.end()){\n            cur->m[mp[s[i]]] = newnode(s[i]);\n        }\n        cur = cur->m[mp[s[i]]];\n    }\n    cur->val++;\n}\nmap<string,int> freq;\nint query(string s){\n    int n = s.size();\n    node* cur = root;\n    int len = 0;\n    string val;\n    rep(i,0,n){\n        cur = cur->m[mp[s[i]]];\n        val.pb(mp[s[i]]);\n        len++;\n        if(cur->val == 1 and m[val] == freq[val]) return len;\n    }\n    cur->val++;\n    return INF;\n}\nint query2(string s){\n    node* cur = root;\n    rep(i,0,sz(s)){\n        if(cur->m.find(s[i] - '0') == cur->m.end()) return 0;\n        cur = cur->m[s[i] - '0'];\n    }\n    return cur->val;\n}\nint dl(int n){\n    int ans = 0;\n    while(n){\n        ans++;\n        n/=10;\n    }\n    return ans;\n}\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n    mp['a'] = 2;\n    mp['b'] = 2;\n    mp['c'] = 2;\n    mp['d'] = 3;\n    mp['e'] = 3;\n    mp['f'] = 3;\n    mp['g'] = 4;\n    mp['h'] = 4;\n    mp['i'] = 4;\n    mp['j'] = 5;\n    mp['k'] = 5;\n    mp['l'] = 5;\n    mp['m'] = 6;\n    mp['n'] = 6;\n    mp['o'] = 6;\n    mp['p'] = 7;\n    mp['q'] = 7;\n    mp['r'] = 7;\n    mp['s'] = 7;\n    mp['t'] = 8;\n    mp['u'] = 8;\n    mp['v'] = 8;\n    mp['w'] = 9;\n    mp['x'] = 9;\n    mp['y'] = 9;\n    mp['z'] = 9;\n    cin>>TESTS;\n    rep(l,1,TESTS+1)\n    {   \n        m.clear();\n        int n,q;\n        cin >> n >> q;\n        root = new node;\n        map<string,string> p;\n        rep(i,0,n){\n            string s,t;\n            cin >> s >> t;\n            p[s] = t;\n            rep(i,0,sz(t)){\n                string cur;\n                rep(j,i,sz(t)){\n                    cur.pb(t[j]);\n                    m[cur]++;\n                }\n            }\n            add(s);\n        }\n        // trace(1);\n        cout << \"Case #\" << l << \": \";\n        while(q--){\n            string s;\n            cin >> s;\n            string no = p[s];\n            int ans = 10;\n            freq.clear();\n            rep(i,0,sz(no)){\n                string cur;\n                rep(j,i,sz(no)){\n                    cur.pb(no[j]);\n                    freq[cur]++;\n                }\n            }\n            for(auto j : freq){\n                if(j.sc == m[j.fr]){\n                    if(query2(j.fr) == 0){\n                        ans = min(ans, sz(j.fr));\n                    }\n                }\n            }\n            ans = min(ans, query(s));\n            cout << ans << \" \";\n        }\n        cout << endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480542,
        "contest_id": "115291",
        "problem_id": "177480",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Keypad Trouble",
        "problem_view_link": "keypad-trouble",
        "created_at_ms": 1599981805,
        "updated_at_ms": 1599985405,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:16:47.921Z",
        "__v": 0
    },
    {
        "_id": "5f605c5a468ccc0964b0c282",
        "submission_code": "import math  \nn=int(input())\nlst=[]\nfor i in range(0,n):\n    a=int(input())\n    b=math.factorial(a)\n    c=1\n    for j in range(1,b):\n        for k in range(j,b):\n            if(math.gcd(i,j)==1):\n                if(j*k==b):\n                    c=c+1\n    print(c)\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480539,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4623005",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981801,
        "updated_at_ms": 1599991401,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:16:58.031Z",
        "__v": 0
    },
    {
        "_id": "5f605c60468ccc0964b0c283",
        "submission_code": "def gcd(a,b):\n    if (a == 0 or b == 0): return 0\n    if (a == b): return a\n    if (a > b):  \n        return gcd(a - b, b)\n    return gcd(a, b - a)\ndef isco(x,y):\n    return gcd(x,y) == 1\n    \nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    fact=1\n    if n>1:\n        for i in range (1,int(n)+1):\n            fact = fact * i\n    n=fact\n    c=0\n    arr=[0]*10000000\n    for i in range(1,n+1):\n        if n%i==0:\n            a=i\n            b=n//i\n            if (arr[b-1]!=1 and arr[a-1]!=1) and isco(a,b):\n                c=c+1\n            arr[a-1]=1\n            arr[b-1]=1\n    if c>(10**9)+7:\n        print(c%((10**9)+7))\n    else:\n        print(c)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480538,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4787734",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "user_200",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981801,
        "updated_at_ms": 1599983001,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:17:04.620Z",
        "__v": 0
    },
    {
        "_id": "5f605c68468ccc0964b0c284",
        "submission_code": "from sys import stdin,stdout\n\ndef SieveOfEratosthenes(n): \n    prime = [True for i in range(n + 1)] \n    p = 2\n    while (p * p <= n):  \n        if (prime[p] == True):  \n            for i in range(p * 2, n + 1, p): \n                prime[i] = False\n        p += 1\n    all_primes =[0,0]\n    for p in range(2,n + 1): \n        if(prime[p]==True):\n            all_primes.append(all_primes[-1]+1)\n        else:\n            all_primes.append(all_primes[-1])\n    return all_primes\n\ndef binpow(a,b):\n    res = 1\n    while(b>0):\n        if(b&1):\n            res = res*a\n        a = a*a\n        b>>=1\n    return res\n\nt=  int(stdin.readline())\nprimes = SieveOfEratosthenes(1000000)\nfor _ in range(t):\n    n = int(stdin.readline())\n    p = (int)(1e9+7)\n    val = binpow(2,primes[n]-1)\n    stdout.write(str(val%p)+\"\\n\")",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480535,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4312249",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981791,
        "updated_at_ms": 1599984191,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:17:12.573Z",
        "__v": 0
    },
    {
        "_id": "5f605c6f468ccc0964b0c285",
        "submission_code": "import math  \nn=int(input())\nlst=[]\nfor i in range(0,n):\n    a=int(input())\n    b=math.factorial(a)\n    c=1\n    for j in range(1,b):\n        for k in range(j,b):\n            if(math.gcd(i,j)==1):\n                if(j*k==b):\n                    c=c+1\n    print(c)\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480526,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4623005",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981776,
        "updated_at_ms": 1599990176,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:17:19.370Z",
        "__v": 0
    },
    {
        "_id": "5f605c77468ccc0964b0c286",
        "submission_code": "def nCr(n, r): \n    \n    return (fact(n) // (fact(r) *\n                        fact(n - r))) \ndef fact(n): \n    res = 1\n    for i in range(2, n + 1): \n        res = res%(1000000007) * i \n    return res%1000000007\ndef countWays(m, n, x1, y1,x2,y2): \n    return (nCr(m + n, m) - nCr(x1 + y1, x1) *nCr(m + n - x1 - y1, m - x1)-nCr(x2 + y2, x2) *nCr(m + n - x2 - y2, m - x2)+nCr(x2+ y2 - x1 - y1, x2 - x1)*nCr(x1 + y1, x1)*nCr(m+n-x2-y2, n-y2)) \nt=int(input())\nfor i in range(t):\n    m,n,x,y,x2,y2=map(int,input().split())  \n    print(countWays(m, n, x, y, x2,y2)) \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480520,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4674163",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981770,
        "updated_at_ms": 1599981770,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:17:27.019Z",
        "__v": 0
    },
    {
        "_id": "5f605c80468ccc0964b0c287",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define mod 1000000007\n#define ll long long\nll arr[10000000];\n \nll fpow(ll a, int b) \n{   if (b==0) return 1;\n    ll t= fpow(a, b/2);\n    t= (t*t)%mod;\n    if (b%2==0) return t;\n    return (t*a)%mod;\n}\nll anss(ll a,ll b, ll c, ll d1){\n    ll s=1;\n    ll n=c-a;\n    ll m=d1-b;\n    ll d;\n     d=(arr[n]*arr[m])%mod;\n          s= (s%mod * ((arr[n+m]*fpow(d,mod-2))%mod))%mod;\n         return s;\n    \n}\n \nint main() \n{   arr[0]=1;\n    for(int i=1;i<10000000;i++)arr[i]=(arr[i-1]*i)%mod;\n      ll t; cin>>t;\n while(t--){\n      ll a,b,c,d,e,f;\n cin>>a>>b>>c>>d>>e>>f;\n     \n  ll arv=anss(0,0,a,b);\n  ll arv1=(anss(0,0,c,d)*anss(c,d,a,b))%mod;\n  ll arv2=(anss(0,0,e,f)*anss(e,f,a,b))%mod;\n  ll arv3=(((anss(0,0,c,d)*anss(c,d,e,f))%mod)*anss(e,f,a,b))%mod;\n  cout<<arv-arv1-arv2+arv3<<endl;\n}\n         \n}//end of main",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480519,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4724102",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "18H51A05C3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981770,
        "updated_at_ms": 1599982970,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:17:36.327Z",
        "__v": 0
    },
    {
        "_id": "5f605c8a468ccc0964b0c288",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int t,n,m,i,j,a,r,c,e=0,o=0;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&n,&m);\n        if(n%2==0)\n            a=n *(n/2);\n        else{\n            a=n *(n/2);\n            a=a+ (n/2)+1;\n        }\n        for(j=0;j<m;j++)\n        {\n            scanf(\"%d %d\",&r,&c);\n            if((r+c)%2==0)\n                e=e+1;\n            else\n                o=o+1;\n        }\n        if(e<o)\n            a=a-e;\n        else\n            a=a-o;\n        printf(\"Case #%d: \",i+1);\n        printf(\"%d\\n\",a);\n    }    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480512,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "5093010",
        "submission_status": "Wrong Answer",
        "submission_language": "c",
        "site_user_handle": "160218737014ITA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599981761,
        "updated_at_ms": 1599982961,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:17:46.673Z",
        "__v": 0
    },
    {
        "_id": "5f605c90468ccc0964b0c289",
        "submission_code": "n=1000001\nsieve=[0]*(n+1)\nsieve[0]=1\nsieve[1]=1\nfor x in range(2,n+1):\n    if(sieve[x]):\n        continue\n    for u in range(2*x,n+1,x):\n        sieve[u]=1\na1=[]        \nfor i in range(n):\n    if(sieve[i]==0):\n        a1.append(i)\n#print(a1)    \ndef binarySearch(arr, l, r, x): \n    mid=0\n    while l <= r: \n  \n        mid = l + (r - l) // 2; \n          \n        # Check if x is present at mid \n        if arr[mid] == x: \n            return mid \n  \n        # If x is greater, ignore left half \n        elif arr[mid] < x: \n            l = mid + 1\n  \n        # If x is smaller, ignore right half \n        else: \n            r = mid - 1\n      \n    # If we reach here, then the element \n    # was not present \n    return mid\nfor i in range(int(input())):\n    m=1000000007\n    n=int(input())\n    if(n==1):\n        print(0)\n    elif(n==2):\n        print(1)\n    else:   \n        d=binarySearch(a1,0,len(a1),n)\n        if(sieve[n]==0):\n            print(d+1)\n        else:\n            print(d)\n    \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480507,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5796840",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981750,
        "updated_at_ms": 1599992550,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:17:52.392Z",
        "__v": 0
    },
    {
        "_id": "5f605c9a468ccc0964b0c28a",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\nusing namespace std;\n#define ll long long\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    ll t;cin>>t;\n    while(t--)\n    {\n        map<int,set<pair<int,int>>> mp;\n        ll n;cin>>n;\n        vector<ll> x,y;\n        for(ll i=0;i<n;i++)\n        {\n            ll u,v;\n            cin>>u>>v;\n            x.push_back(u);\n            y.push_back(v);\n        }\n        for(ll i=0;i<n;i++)\n        {\n            ll sum=0;\n            for(ll j=0;j<n;j++)\n            {\n                sum=sum+((x[i]-x[j])*(x[i]-x[j]))+((y[i]-y[j])*(y[i]-y[j]));\n            }\n            mp[sum].insert({x[i],y[i]});\n        }\n        for(auto rp:mp)\n        {\n            for(auto kp:rp.second)\n            {\n                cout<<kp.first<<\" \"<<kp.second<<endl;\n                break;\n            }\n            break;\n        }  \n    }\n    return 0;\n}\n/*\n\nfor(auto rp:st)\n        {\n            cout<<rp.first<<\" \"<<rp.second<<endl;\n            break;\n        }\n        \n        \n        \n        \n        \n        if(sum<mx)\n            {\n                if(!s.empty())\n                {\n                    s.pop();\n                    mx=sum;\n                    s.push_back({x[i],y[i]});\n                }\n                else\n                {\n                    mx=sum;\n                    s.push_back({x[i],y[i]});\n                }\n            }\n            else if(sum == mx)\n            {\n                mx=sum;\n                st.insert({x[i],y[i]});\n            }\n        \n*/\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480500,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7059325",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "rohithnzb37",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981736,
        "updated_at_ms": 1599981736,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:18:02.027Z",
        "__v": 0
    },
    {
        "_id": "5f605ca1468ccc0964b0c28b",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 1000005\n// #define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n// #define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\nmap<char,int> mp;\nstruct node{\n    int val = 0;\n    map<int,node*> m;\n} *root;\nnode* newnode(){\n    node* temp = new node;\n    temp->val = 0;\n    return temp;\n}\nmap<string,int> m;\nvoid add(string s){\n    int n = s.size();\n    node* cur = root;\n    rep(i,0,n){\n        cur->val++;\n        if(cur->m.find(mp[s[i]]) == cur->m.end()){\n            cur->m[mp[s[i]]] = newnode();\n        }\n        cur = cur->m[mp[s[i]]];\n    }\n    cur->val++;\n}\nmap<string,int> freq;\nint query(string s){\n    int n = s.size();\n    node* cur = root;\n    int len = 0;\n    string val;\n    rep(i,0,n){\n        cur = cur->m[mp[s[i]]];\n        val.pb(mp[s[i]]);\n        len++;\n        if(cur->val == 1 and m[val] == freq[val]) return len;\n    }\n    cur->val++;\n    return 50;\n}\nint query2(string s){\n    node* cur = root;\n    rep(i,0,sz(s)){\n        if(cur->m.find(s[i] - '0') == cur->m.end()) return 0;\n        cur = cur->m[s[i] - '0'];\n    }\n    return cur->val;\n}\nint dl(int n){\n    int ans = 0;\n    while(n){\n        ans++;\n        n/=10;\n    }\n    return ans;\n}\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n    mp['a'] = 2;\n    mp['b'] = 2;\n    mp['c'] = 2;\n    mp['d'] = 3;\n    mp['e'] = 3;\n    mp['f'] = 3;\n    mp['g'] = 4;\n    mp['h'] = 4;\n    mp['i'] = 4;\n    mp['j'] = 5;\n    mp['k'] = 5;\n    mp['l'] = 5;\n    mp['m'] = 6;\n    mp['n'] = 6;\n    mp['o'] = 6;\n    mp['p'] = 7;\n    mp['q'] = 7;\n    mp['r'] = 7;\n    mp['s'] = 7;\n    mp['t'] = 8;\n    mp['u'] = 8;\n    mp['v'] = 8;\n    mp['w'] = 9;\n    mp['x'] = 9;\n    mp['y'] = 9;\n    mp['z'] = 9;\n    cin>>TESTS;\n    rep(l,1,TESTS+1)\n    {   \n        m.clear();\n        int n,q;\n        cin >> n >> q;\n        root = new node;\n        map<string,string> p;\n        rep(i,0,n){\n            string s,t;\n            cin >> s >> t;\n            p[s] = t;\n            rep(i,0,sz(t)){\n                string cur;\n                rep(j,i,sz(t)){\n                    cur.pb(t[j]);\n                    m[cur]++;\n                }\n            }\n            add(s);\n        }\n        assert(p.size() == n);\n        // trace(1);\n        cout << \"Case #\" << l << \": \";\n        while(q--){\n            string s;\n            cin >> s;\n            string no = p[s];\n            int ans = 50;\n            freq.clear();\n            rep(i,0,sz(no)){\n                string cur;\n                rep(j,i,sz(no)){\n                    cur.pb(no[j]);\n                    freq[cur]++;\n                }\n            }\n            ans = min(ans, query(s));\n            for(auto j : freq){\n                if(j.sc == m[j.fr]){\n                    if(query2(j.fr) == 0){\n                        ans = min(ans, sz(j.fr));\n                    }\n                }\n            }\n            cout << ans << \" \";\n        }\n        cout << endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480494,
        "contest_id": "115291",
        "problem_id": "177480",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Keypad Trouble",
        "problem_view_link": "keypad-trouble",
        "created_at_ms": 1599981733,
        "updated_at_ms": 1599984133,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:18:09.196Z",
        "__v": 0
    },
    {
        "_id": "5f605ca8468ccc0964b0c28c",
        "submission_code": "n=1000001\nsieve=[0]*(n+1)\nsieve[0]=1\nsieve[1]=1\nfor x in range(2,n+1):\n    if(sieve[x]):\n        continue\n    for u in range(2*x,n+1,x):\n        sieve[u]=1\na1=[]        \nfor i in range(n):\n    if(sieve[i]==0):\n        a1.append(i)\n#print(a1)    \ndef binarySearch(arr, l, r, x): \n    while l <= r: \n  \n        mid = l + (r - l) // 2; \n          \n        # Check if x is present at mid \n        if arr[mid] == x: \n            return mid \n  \n        # If x is greater, ignore left half \n        elif arr[mid] < x: \n            l = mid + 1\n  \n        # If x is smaller, ignore right half \n        else: \n            r = mid - 1\n      \n    # If we reach here, then the element \n    # was not present \n    return mid\nfor i in range(int(input())):\n    m=1000000007\n    n=int(input())\n    if(n==1):\n        print(0)\n    elif(n==2):\n        print(1)\n    else:   \n        d=binarySearch(a1,0,len(a1),n)\n        if(sieve[n]==0):\n            print(d+1)\n        else:\n            print(d)\n    \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480478,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5796840",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981709,
        "updated_at_ms": 1599991309,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:18:16.287Z",
        "__v": 0
    },
    {
        "_id": "5f605cb0468ccc0964b0c28d",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n#define mod 1000000007\n\nunsigned long long power(int x,unsigned long long y)  \n{  \n    unsigned long long temp;  \n    if(y == 0)  \n        return 1;  \n    temp = power(x, y / 2)%mod;  \n    if (y % 2 == 0)  \n        return (temp * temp)%mod;  \n    else\n    {  \n        if(y > 0)  \n            return (x * temp * temp)%mod;  \n        else\n            return ((temp * temp) / x)%mod;  \n    }  \n}\nvoid fastscan(long long &x)\n    {\n        bool neg=false;\n        register int c;\n        x =0;\n        c=getchar();\n        if(c=='-')\n        {\n            neg = true;\n            c=getchar();\n        }\n        for(;(c>47 && c<58);c=getchar())\n            x = (x<<1) + (x<<3) +c -48;\n        if(neg)\n            x *=-1;\n    }\nint main() {\n    long long t,n,i,j,prime[1000005],c=0,cp[1000005];\n    fastscan(t);\n    for(i=1;i<1000003;i++){\n        prime[i]=1;\n    }\n    cp[1]=0;\n    for(i=2;i<1000003;i++){\n        if(prime[i]==1){\n            for(j=2*i;j<1000003;j=j+i){\n                prime[j]++;\n            }\n            c++;\n        }\n        cp[i]=c;\n    }\n    while(t--){\n        fastscan(n);\n        c = cp[n];\n        printf(\"%llu\\n\",power(2,c-1)%mod);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480474,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981706,
        "updated_at_ms": 1599993706,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:18:24.628Z",
        "__v": 0
    },
    {
        "_id": "5f605cb8468ccc0964b0c28e",
        "submission_code": "def mutually_coprime (n):     \n    if ( n <= 3): \n        # Loop for the numbers less  \n        # than the 4  \n        for j in range (1, n + 1): \n            print (j, end =\" \") \n        print () \n    else: \n        # Integers 1, 2 and 3 can be  \n        # grouped into one group \n        print (1, 2, 2) \n        for j in range ( 4, n, 2 ): \n              \n            # Consecutive even and  \n            # odd numbers \n            print (j, ( j + 1 )) \n        if(n % 2 == 0):          \n            print (n) \n            \nif __name__ == \"__main__\": \n    n = 2\n   \n      \n    # Function Call \n    mutually_coprime (n) ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480471,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6707196",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "harshitha_5_hg",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981703,
        "updated_at_ms": 1599981703,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:18:32.644Z",
        "__v": 0
    },
    {
        "_id": "5f605cc6468ccc0964b0c28f",
        "submission_code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll =long long int;\nvector<pair<ll,ll>>v;\nll xs,xsu,ys,ysu,mini;\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    ll t,n,p,q,x,y;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        p=INT_MAX;q=INT_MAX;\n        v.clear();\n        //s=0;\n        xs=0;\n        ys=0;\n        xsu=0;\n        ll w;\n        ysu=0;\n        mini=pow(10,18);\n        //mini+=mini;\n        for(int i=0;i<n;i++)\n        {\n            cin>>x>>y;\n            v.push_back({x,y});\n            xs+=x;\n            ys+=y;\n            xsu+=(x*x);\n            ysu+=(y*y);\n        }\n        //cout<<xs<<' '<< ' '<<ys<< ' '<<xsu<<' '<<ysu<<\"\\n\";\n        for(int i=0;i<n;i++)\n        {\n           // cout<<\" p  \"<<v[i].first<<' '<<v[i].second<<\"\\n\";\n            w=n*v[i].first*v[i].first;\n            ll k=2*v[i].first;\n            k*=xs;\n            w-=k;\n            w+=xsu;\n            \n            w+=(n*v[i].second*v[i].second);\n            k=(2*v[i].second);\n            k*=ys;\n            w-=k;\n            w+=ysu;\n            \n            if(w<mini)\n            {\n                mini=w;\n                p=v[i].first;\n                q=v[i].second;\n            }\n            else if(w==mini)\n            {\n                if((v[i].first<p) || (v[i].first==p && v[i].second<q))\n                {\n                    p=v[i].first;\n                    q=v[i].second;\n                }\n            }\n           // cout<<' '<< w<<\"\\n\";\n        }\n        cout<<p<<' '<<q<<\"\\n\";\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480465,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2892432",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "17H51A05M7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981691,
        "updated_at_ms": 1599985291,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:18:46.377Z",
        "__v": 0
    },
    {
        "_id": "5f605ccf468ccc0964b0c290",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    static long way=0;\n    static int arr[];\n    static boolean valid(int i,int j){\n        if(i>arr[0] || j>arr[1] || (i==arr[2] && j==arr[3]) || (i==arr[4] && j==arr[5])){\n            return false;\n        }\n        return true;\n    }\n    static void track(int x,int y){\n        if(x==arr[0] && y==arr[1]){\n            way+=1;\n            return;\n        }\n        if(valid(x+1,y))\n            track(x+1,y);\n        if(valid(x,y+1))\n            track(x,y+1);\n        return;\n        \n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner s=new Scanner(System.in);\n        int t=s.nextInt();\n        while(t>0){\n            arr=new int[6];\n            for(int i=0;i<6;i++){\n                arr[i]=s.nextInt();\n            }\n            way=0;\n            track(0,0);\n            System.out.println(way%((long)Math.pow(10,9)+7));\n            t--;\n        }\n    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480464,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "5598553",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "manmeet02012001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981690,
        "updated_at_ms": 1599982890,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:18:55.478Z",
        "__v": 0
    },
    {
        "_id": "5f605cd8468ccc0964b0c291",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n   \n \n      \nint[] dx = { -1, 0, 1, 0 }; \nint[] dy = { 0, 1, 0, -1 }; \nint ROW = 5; \nint COL = 5; \n  \n// Custom class for representing \n// row-index, column-index & \n// distance of each cell \nclass Cell \n{ \n    int x; \n    int y; \n    int distance; \n      \n    Cell(int x, int y, int distance)  \n    { \n        this.x = x; \n        this.y = y; \n        this.distance = distance; \n    } \n} \n  \n// Custom comparator for inserting cells  \n// into Priority Queue \nclass distanceComparator  \n  implements Comparator<Cell> \n{ \n    public int compare(Cell a, Cell b) \n    { \n        if (a.distance < b.distance) \n        { \n            return -1; \n        } \n        else if (a.distance > b.distance) \n        { \n            return 1; \n        } \n        else {return 0;} \n    } \n} \n  \n// Utility method to check whether current \n// cell is inside grid or not \npublic boolean isInsideGrid(int i, int j) \n{ \n    return (i >= 0 && i < ROW && j >= 0 && j < COL); \n} \n  \n// Method to return shortest path from  \n// top-corner to bottom-corner in 2D grid \npublic int shortestPath(int[][] grid, int row,int col) \n{ \n    int[][] dist = new int[row][col]; \n      \n    // Initializing distance array by INT_MAX  \n    for(int i = 0; i < row; i++) \n    { \n        for(int j = 0; j < col; j++) \n        { \n            dist[i][j] = Integer.MAX_VALUE; \n        } \n    } \n      \n    // Initialized source distance as \n    // initial grid position value \n    dist[0][0] = grid[0][0]; \n      \n    PriorityQueue<Cell> pq = new PriorityQueue<Cell>(row * col, new distanceComparator()); \n                    \n    // Insert source cell to priority queue \n    pq.add(new Cell(0, 0, dist[0][0])); \n    while (!pq.isEmpty()) \n    { \n        Cell curr = pq.poll(); \n        for(int i = 0; i < 4; i++) \n        { \n            int rows = curr.x + dx[i]; \n            int cols = curr.y + dy[i]; \n              \n            if (isInsideGrid(rows, cols)) \n            { \n                if (dist[rows][cols] >  \n                    dist[curr.x][curr.y] + grid[rows][cols]) \n                { \n                      \n                    // If Cell is already been reached once, \n                    // remove it from priority queue \n                    if (dist[rows][cols] != Integer.MAX_VALUE) \n                    { \n                        Cell adj = new Cell(rows, cols, dist[rows][cols]); \n                                         \n                        pq.remove(adj); \n                    } \n                      \n                    // Insert cell with updated distance  \n                    dist[rows][cols] = dist[curr.x][curr.y] + grid[rows][cols]; \n                                         \n                    pq.add(new Cell(rows, cols, dist[rows][cols])); \n                } \n            } \n        } \n    } \n    return dist[row - 1][col - 1]; \n} \n  \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480452,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "6707196",
        "submission_status": "Compilation error",
        "submission_language": "java8",
        "site_user_handle": "harshitha_5_hg",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599981675,
        "updated_at_ms": 1599981675,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T06:19:04.080Z",
        "__v": 0
    },
    {
        "_id": "5f605ce1468ccc0964b0c292",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t,i,j,k,n,m,tt;\n    cin>>t;\n    tt=t;\n    while(t--)\n    {\n        cin>>n>>m;\n        vector<vector<char>> vi(n,vector<char>(m,' ')),vd(n,vector<char>(m,' ')),vl(n,vector<char>(m,' '));\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cin>>vi[i][j];\n            }\n        }\n        for(i=m-1;i>=0;i--)\n        {\n            vd[n-1][i]='R';\n            if(j!=m-1)\n            {if(vi[n-1][i+1]!=vl[n-1][i+1])\n            {\n                vl[n-1][i]=vi[n-1][i+1];\n            }\n            else\n                vl[n-1][i]=vl[n-1][i+1];}\n            else\n                vl[n-1][i]=vi[n-1][i];\n                \n        }\n        for(i=n-1;i>=0;i--)\n        {\n            vd[i][m-1]='D';\n            if(i!=n-1)\n            {if(vi[i+1][m-1]!=vl[i+1][m-1])\n            {\n                vl[i][m-1]=vi[i+1][m-1];\n            }\n            else\n                vl[i][m-1]=vl[i+1][m-1];}\n            else\n                vl[i][m-1]=vi[i][m-1];\n        }\n        \n        for(j=m-2;j>=0;j--)\n        {\n            for(i=n-2;i>=0;i--)\n            {\n                if(vi[i][j+1]<vi[i+1][j])\n                {\n                    vl[i][j]=vi[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else if(vi[i][j+1]>vi[i+1][j])\n                {\n                    vl[i][j]=vi[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                else\n                {\n                    if(vl[i][j+1]<vl[i+1][j])\n                {\n                    vl[i][j]=vl[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else\n                {\n                    vl[i][j]=vl[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                    \n                }\n            }\n        }\n        i=0;\n        j=0;\n        cout<<\"Case #\"<<tt-t<<\": \";\n        while(!(i==n-1&&j==m-1))\n        {\n            \n            if(vd[i][j]=='D')\n            {\n                cout<<'D';\n                i=i+1;\n                \n            }\n            else\n            {\n                cout<<'R';\n                j=j+1;\n                \n            }\n            \n        }\n        \n        /*for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cout<<vd[i][j]<<\" \";\n            }\n            cout<<endl;\n        }*/\n        \n        cout<<endl;\n            \n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480434,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599981655,
        "updated_at_ms": 1599990055,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:19:13.296Z",
        "__v": 0
    },
    {
        "_id": "5f605ce7468ccc0964b0c293",
        "submission_code": "import math\ndef gcd(a, b):\n    if a == b:\n        return a\n    elif a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a & 1 == 0:\n        if b & 1 == 0:\n            return 2*gcd(a >> 1,b >> 1)%1000000007\n        else:\n            return gcd(a >> 1, b)%1000000007\n    elif a & 1 != 0:\n        if b & 1 == 0:\n            return gcd(a, b >> 1)%1000000007\n        elif a > b and b & 1 != 0:\n            return gcd((a-b) >> 1, b)%1000000007\n        else:\n            return gcd((b-a) >> 1, a)%1000000007\nfor _ in range(int(input())):\n    N = int(input())\n    pair = 1\n    to = math.factorial(N)%1000000007\n    #print(to)\n    for i in range(2,math.floor(math.sqrt(to))+1):\n        #print(i,to//i)\n        if gcd(i,to//i) == 1:\n            pair += 1\n        N = N//i\n    print(pair)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480425,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3164622",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anshmaske743",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981639,
        "updated_at_ms": 1599984039,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:19:19.029Z",
        "__v": 0
    },
    {
        "_id": "5f605cee468ccc0964b0c294",
        "submission_code": "#include<bits/stdc++.h>\n\n#ifndef LOCAL\n#pragma GCC optimize(\"O3\")\n#endif\n//~ #pragma GCC optimize(\"Ofast\")\n//~ #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//~ #pragma GCC optimize(\"unroll-loops\")\n\n#define endl        '\\n'\n#define ll          long long\n#define pb          push_back\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define rs(v,n)     v.resize(n)\n#define hell        1000000007\n#define peak        9123372036854775807\n#define pii         acos(-1)\n#define clr(a,x)    memset(a,x,sizeof(a))\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\n\nnamespace InOp{\ntemplate<class x,class y>\nistream &operator>>(istream &in,pair<x,y> &p) \n{ \n    in>>p.F>>p.S;\n    return in;\n}\ntemplate<class x>\nistream &operator>>(istream &in,vector<x> &v) \n{\n    for(auto& i:v)\n        in>>i;\n    return in;\n}\ntemplate<class x,class y>\nostream &operator<<(ostream &out,pair<x,y> &p) \n{ \n    out<<\"(\"<<p.F<<\",\"<<p.S<<\") \";\n    return out; \n}\ntemplate<class x>\nostream &operator<<(ostream &out,vector<x> &v) \n{ \n    out<<v.size()<<endl;\n    for(auto i:v)\n        out<<i<<\" \";\n    out<<endl;\n    return out; \n}\n}\nusing namespace InOp;\n\nnamespace ModOp{\ntemplate<class x,class y,class z> z add(x a,y b,z m){return (a+b)%m;}\ntemplate<class x,class y,class z> z sub(x a,y b,z m){return (a-b+m)%m;}\ntemplate<class x,class y,class z> z mul(x a,y b,z m){return ((ll)a*b)%m;}\ntemplate<class x,class y,class z> z expo(x b,y e,z m){x a=1;b%=m;while(e!=0){if((e&1)==1){a=a*b;a=a%m;}b=b*b;b%=m;e>>=1;}return a%m;}\ntemplate<class x,class z> z inv(x b,z m){return expo(b,m-2,m);}\ntemplate<class x,class y> x invGeneral(x a,y b){if(a==0)return b==1?0:-1;x m=invGeneral(b%a,a);return m==-1?-1:((1-(ll)b*m)/a+b)%b;}\ntemplate<class x,class y,class z> z div(x a,y b,z m){x c=inv(b,m);return mul(a,c,m);}\n}\nusing namespace ModOp;\n\nnamespace Debug{\ntemplate<class x> void deb(x a){cerr<<\"a\"<<\": \"<<a<<endl;}\ntemplate<class x,class y> void deb(x a,y b){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<endl;}\ntemplate<class x,class y,class z> void deb(x a,y b,z c){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<endl;}\ntemplate<class x,class y,class z,class xy> void deb(x a,y b,z c,xy d){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<\" | \"<<\"d\"<<\": \"<<d<<endl;}\n}\nusing namespace Debug;\n\n#define N  1000005\n\nint main()\n{\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    ll tt=1;\n    cin>>tt;\n    for(ll test=1;test<=tt;test++)\n    {\n        cout<<\"Case #\"<<test<<\": \";\n        ll i,j,k,l,r,x,y,m,n;\n        cin>>n>>m;\n        vector<vector<ll>> vis(n,vector<ll>(n,0));\n        for(i=0;i<m;i++)\n        {\n            cin>>x>>y;\n            vis[x-1][y-1]=1;\n        }\n        ll ans1=0,ans2=0;\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<n;j++)\n            {\n                if(vis[i][j]==1)continue;\n                if((i+j)%2==0)ans1++;\n                else ans2++;\n            }\n        }\n        // deb(ans1,ans2);\n        cout<<max(ans1,ans2)<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480411,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "1583809",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599981621,
        "updated_at_ms": 1599982821,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:19:26.179Z",
        "__v": 0
    },
    {
        "_id": "5f605cf8468ccc0964b0c295",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        int x=0,y=0,n;\n        double f2,f1;\n        for(int i=0;i<t;i++)\n        {\n            n=sc.nextInt();\n            int[] a=new int[n];\n            int[] b=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[j]=sc.nextInt();\n            }\n            f1=0;\n            x=0;\n            y=0;\n            for(int k=0;k<n;k++)\n            {\n                 f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+(Math.pow((a[k]-a[j]),2))+(Math.pow((b[k]-b[j]),2));\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            System.out.println(x+\" \"+y);\n        }\n        \n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480408,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981620,
        "updated_at_ms": 1599991220,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:19:36.744Z",
        "__v": 0
    },
    {
        "_id": "5f605d01468ccc0964b0c296",
        "submission_code": "import math\nt=int(input())\narr=[]\nfor i in range(0,t):\n    a=int(input())\n    arr.append(a)\narr4=[]    \nfor j in arr:\n    fact=1\n    for k in range(1,j+1):\n        fact=fact*k\n    arr4.append(fact)  \ncount=0\narr1=[]\narr2=[]\nd=0\n\nfor n in arr4:\n    \n    count=0\n    for i in range(1,n+1):\n        for j in range(1,n+1):\n            if(i*j==n and math.gcd(i,j)==1):\n                count+=1\n            \n\n\n    c=(int)((count)/2)\n    print(c)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480406,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9338915",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "kenche_greeshma",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981617,
        "updated_at_ms": 1599981617,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:19:45.243Z",
        "__v": 0
    },
    {
        "_id": "5f605d08468ccc0964b0c297",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define mod 1000000007\n#define ll long long\nll arr[10000000];\n \nll fpow(ll a, int b) \n{   if (b==0) return 1;\n    ll t= fpow(a, b/2);\n    t= (t*t)%mod;\n    if (b%2==0) return t;\n    return (t*a)%mod;\n}\nll anss(ll a,ll b, ll c, ll d1){\n    ll s=1;\n    ll n=c-a;\n    ll m=d1-b;\n    ll d;\n     d=(arr[n]*arr[m])%mod;\n          s= (s%mod * ((arr[n+m]*fpow(d,mod-2))%mod))%mod;\n         return s;\n    \n}\n \nint main() \n{   arr[0]=1;\n    for(int i=1;i<10000000;i++)arr[i]=(arr[i-1]*i)%mod;\n      ll t; cin>>t;\n while(t--){\n      ll a,b,c,d,e,f;\n cin>>a>>b>>c>>d>>e>>f;\n     ll d1=(anss(0,0,c,d)%mod*anss(c,d,a,b)%mod)%mod;\n     ll d2=(anss(0,0,e,f)%mod*anss(e,f,a,b)%mod)%mod;\n     ll d3=  (anss(0,0,c,d)%mod*anss(c,d,e,f)%mod)%mod;\n     d3=( d3%mod *anss(e,f,a,b)%mod)%mod;\n    cout<<anss(0,0,a,b)-(d1+d2-d3)<<endl;\n}\n         \n}//end of main",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480398,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4724102",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "18H51A05C3",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981605,
        "updated_at_ms": 1599981605,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:19:52.103Z",
        "__v": 0
    },
    {
        "_id": "5f605d0f468ccc0964b0c298",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    public static int f(int k,int[][] a)\n    {\n        int x=a[k][0],y=a[k][1],sum=0;;\n        for(int i=0;i<a.length;i++)\n        {\n            if(i==k)\n                continue;\n            sum=sum+(x-a[i][0])*(x-a[i][0])+(y-a[i][1])*(y-a[i][1]);\n        }\n        return sum;\n    }\n    static int min(int i,int j,int[][]a)\n    {\n        if((a[i][0]+a[i][1]-a[j][0]-a[j][1])<=0)\n            return i;\n        else return j;\n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        for(int i=0;i<N;i++)\n        {\n            int n=sc.nextInt();\n            int[][] a=new int[n][2];\n            for(int j=0;j<n;j++)\n            {\n                a[j][0]=sc.nextInt();\n                a[j][1]=sc.nextInt();\n            }int max=1000,l=0;\n            int[] sum=new int[n];\n            for(int i1=0;i1<n;i1++)\n            {\n                sum[i1]=f(i1,a);\n                if(max>=sum[i1])\n                {\n                    if(sum[i1]==max)\n                        l=min(l,i1,a);\n                    else\n                        l=i1;\n                    max=sum[i1];\n                }\n            }            \n            System.out.println(a[l][0]+\" \"+a[l][1]);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480397,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636583",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "ramyasreesai2000",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981605,
        "updated_at_ms": 1599985205,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:19:59.884Z",
        "__v": 0
    },
    {
        "_id": "5f605d15468ccc0964b0c299",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nll int sum[1000000+1];\nvoid SieveOfEratosthenes() \n{  \n   ll int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    // memset(sum, 1, sizeof(sum)); \n    for (ll int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (ll int i=p*p; i<=n; i += p) \n            {   prime[i] = false;\n            }\n        } \n    }\n    sum[0]=sum[1]=0;\n    sum[2]=1;\n    for(ll int i=3;i<=n;i++ ){\n        if(prime[i]){\n            sum[i]=1;\n        }else\n            sum[i]=0;\n        sum[i]=sum[i-1]+sum[i];\n    }\n}\n\nint main() {\n    ll int t,n;\n     ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<1<<\"\\n\";\n        else{\n             ll int r=sum[n];\n            r-=1;\n            ll int ans=pow(2,r);\n            ans=(ans%mod);\n            cout<<ans<<\"\\n\";\n            // cout<<sum[100]<<\" \";\n        }\n}\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480395,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5620816",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "Navanbairisetty1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981600,
        "updated_at_ms": 1599986400,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:20:05.438Z",
        "__v": 0
    },
    {
        "_id": "5f605d1d468ccc0964b0c29a",
        "submission_code": "import math\ndef gcd(a, b):\n    if a == b:\n        return a\n    elif a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a & 1 == 0:\n        if b & 1 == 0:\n            return 2*gcd(a >> 1,b >> 1)%1000000007\n        else:\n            return gcd(a >> 1, b)%1000000007\n    elif a & 1 != 0:\n        if b & 1 == 0:\n            return gcd(a, b >> 1)%1000000007\n        elif a > b and b & 1 != 0:\n            return gcd((a-b) >> 1, b)%1000000007\n        else:\n            return gcd((b-a) >> 1, a)%1000000007\nfor _ in range(int(input())):\n    N = int(input())\n    pair = 0\n    to = math.factorial(N)%1000000007\n    #print(to)\n    for i in range(1,math.floor(math.sqrt(to))+1):\n        #print(i,to//i)\n        if gcd(i,to//i) == 1:\n            pair += 1\n        N = N//i\n    print(pair)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480383,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3164622",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anshmaske743",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981589,
        "updated_at_ms": 1599982789,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:20:13.620Z",
        "__v": 0
    },
    {
        "_id": "5f605d25468ccc0964b0c29b",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define sz(x) (int)(x).size()\n#define all(x) x.begin(), x.end()\n#define itn int\n \nll powmod(ll a,ll b) {ll res=1; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n\nconst int MX = 2e5+5; \nconst int N = 10001;\nint n,m;\n\nint getit(vector<pair<int,ll>> v[],int p, vector<int>& vis, ll z){\n    if(p+1 == n*m) return 1;\n    int ans = 0;\n    vis[p] = 1;\n    for(int i=0;i<v[p].size();++i){\n        if((v[p][i].S&z) == z && !vis[v[p][i].F]){\n            ans |= getit(v, v[p][i].F, vis, z);\n        }\n    }\n    return ans;\n}\n\nvoid kd(vector<pair<int,ll>> v[], int p, vector<int> &vis, ll z){\n    vis[p] = 1;\n    for(auto q : v[p]) {\n        if((q.S&z)<=0) q.S=0;\n        if(vis[q.F]) kd(v,q.F,vis,z);\n    }\n}\n\nll getans(vector< pair< int , ll > > v[], ll cb)\n{\n    ll a = 0;\n    if(cb == -1)  return  0;\n    ll ans = 0;\n    ll r = 0;\n    for(int i = cb;i;i--) {\n        vector<int> x(n*m);\n          r = ans|1ll<<i;\n          if(getit(v, 0, x, r)){\n            ans = ans|(1ll<<i);\n            r = ans;\n        }\n    }\n    return ans;\n}\nint main()\n{\n    int t;\n    cin>>t;\n    while(t--) {\n        cin>>m>>n;\n        vector<pair<int,ll>> v[n*m];\n        for(int i =0; i < m;++i) {\n            for(int j =0;j< n;j++) {\n                ll l;\n                if(i < m -1) {\n                    cin>>l;\n                    v[i*n + j].pb({i*n+j+n, l});\n                    v[(i+1)*n+j].pb({i*n+j, l});\n                }\n                if(j < n -1) {\n                    cin>>l;\n                    v[i*n + j].pb({(i)*n+j+1, l});\n                    v[(i)*n+j+1].pb({(i)*n+j, l});    \n                }\n            }\n        }\n        cout<<getans(v, 63)<<\"\\n\";\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480381,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "6937721",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "ak821",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599981585,
        "updated_at_ms": 1599982785,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\",\"Success\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:20:21.354Z",
        "__v": 0
    },
    {
        "_id": "5f605d2d468ccc0964b0c29c",
        "submission_code": "import java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.io.OutputStreamWriter;\n\n\n\n\npublic class Solution {\n\n    public static void main(String[] args)throws IOException  {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        \n        long inp=Long.parseLong(br.readLine());\n        for(long i=0;i<inp;i++)\n        {\n            long num=Long.parseLong(br.readLine());\n            long fact=1;\n            for(long j=1;j<=num;j++)\n            {\n             fact=fact*j;   \n            }\n            long count=0;\n            for(long o=1;o<=fact;o++)\n            {\n                for(long p=o;p<=fact;p++)\n                {\n                    if(o*p==fact)\n                    {\n                        if(o%p!=0 || o==1 ||p==1)\n                        {\n                        \n                            int counter=0;\n                            for(long k=2;k<p-1;k++)\n                            {\n                                if(o%k==0&&p%k==0)\n                                {\n                                  counter=1;\n                                    break;\n                                }\n                            }\n                            if(counter==1)\n                            {\n                                continue;\n                            }\n                            else\n                            {\n                                count=count+1;\n                            }\n                            \n                        }\n                        \n                    }\n                }\n            }\n            count=count;\n            System.out.println(count);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480371,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4698811",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "ashutosh_janrao1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981573,
        "updated_at_ms": 1599989973,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:20:29.478Z",
        "__v": 0
    },
    {
        "_id": "5f605d34468ccc0964b0c29d",
        "submission_code": "#include <bits/stdc++.h> \nusing namespace std; \n  \n\nvoid countCoprimePairs(int n) \n{ \n    long int count = 0; \n  \n   \n  \n\n    for (long int i = 2; i <= sqrt(n); i++) { \n  \n\n        if (n % i == 0) { \n  \n\n            if (__gcd(i, (n / i)) == 1) { \n  \n\n\n                \n                count++; \n            } \n        } \n    } \n  \n    cout<<count+1 <<\"\\n\"; \n} \n  \nint main() \n{ \n    long int t,b=1;\n    cin >> t;\n     while (t--)\n    {\n  long int N;\n  cin >> N;\n  for(long int i=1;i<=N;i++)\n  {\n      b=b*i;\n  }\n    countCoprimePairs(b); \n  \n    }\n   \n} ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480366,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9675923",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "manivardhanredd4",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981570,
        "updated_at_ms": 1599985170,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:20:36.693Z",
        "__v": 0
    },
    {
        "_id": "5f605d3b468ccc0964b0c29e",
        "submission_code": "#include<bits/stdc++.h>\n\n#ifndef LOCAL\n#pragma GCC optimize(\"O3\")\n#endif\n//~ #pragma GCC optimize(\"Ofast\")\n//~ #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//~ #pragma GCC optimize(\"unroll-loops\")\n\n#define endl        '\\n'\n#define ll          long long\n#define pb          push_back\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define rs(v,n)     v.resize(n)\n#define hell        1000000007\n#define peak        9123372036854775807\n#define pii         acos(-1)\n#define clr(a,x)    memset(a,x,sizeof(a))\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\n\nnamespace InOp{\ntemplate<class x,class y>\nistream &operator>>(istream &in,pair<x,y> &p) \n{ \n    in>>p.F>>p.S;\n    return in;\n}\ntemplate<class x>\nistream &operator>>(istream &in,vector<x> &v) \n{\n    for(auto& i:v)\n        in>>i;\n    return in;\n}\ntemplate<class x,class y>\nostream &operator<<(ostream &out,pair<x,y> &p) \n{ \n    out<<\"(\"<<p.F<<\",\"<<p.S<<\") \";\n    return out; \n}\ntemplate<class x>\nostream &operator<<(ostream &out,vector<x> &v) \n{ \n    out<<v.size()<<endl;\n    for(auto i:v)\n        out<<i<<\" \";\n    out<<endl;\n    return out; \n}\n}\nusing namespace InOp;\n\nnamespace ModOp{\ntemplate<class x,class y,class z> z add(x a,y b,z m){return (a+b)%m;}\ntemplate<class x,class y,class z> z sub(x a,y b,z m){return (a-b+m)%m;}\ntemplate<class x,class y,class z> z mul(x a,y b,z m){return ((ll)a*b)%m;}\ntemplate<class x,class y,class z> z expo(x b,y e,z m){x a=1;b%=m;while(e!=0){if((e&1)==1){a=a*b;a=a%m;}b=b*b;b%=m;e>>=1;}return a%m;}\ntemplate<class x,class z> z inv(x b,z m){return expo(b,m-2,m);}\ntemplate<class x,class y> x invGeneral(x a,y b){if(a==0)return b==1?0:-1;x m=invGeneral(b%a,a);return m==-1?-1:((1-(ll)b*m)/a+b)%b;}\ntemplate<class x,class y,class z> z div(x a,y b,z m){x c=inv(b,m);return mul(a,c,m);}\n}\nusing namespace ModOp;\n\nnamespace Debug{\ntemplate<class x> void deb(x a){cerr<<\"a\"<<\": \"<<a<<endl;}\ntemplate<class x,class y> void deb(x a,y b){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<endl;}\ntemplate<class x,class y,class z> void deb(x a,y b,z c){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<endl;}\ntemplate<class x,class y,class z,class xy> void deb(x a,y b,z c,xy d){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<\" | \"<<\"d\"<<\": \"<<d<<endl;}\n}\nusing namespace Debug;\n\n#define N  1000005\n\nint main()\n{\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    ll tt=1;\n    cin>>tt;\n    for(ll test=1;test<=tt;test++)\n    {\n        cout<<\"Case #\"<<test<<\": \";\n        ll i,j,k,l,r,x,y,m,n;\n        cin>>n>>m;\n        vector<vector<ll>> vis(n,vector<ll>(n,0));\n        for(i=0;i<m;i++)\n        {\n            cin>>x>>y;\n            vis[x][y]=1;\n        }\n        ll ans1=0,ans2=0;\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<n;j++)\n            {\n                if(vis[i][j]==1)continue;\n                if((i+j)%2==0)ans1++;\n                else ans2++;\n            }\n        }\n        // deb(ans1,ans2);\n        cout<<max(ans1,ans2)<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480359,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "1583809",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599981558,
        "updated_at_ms": 1599981558,
        "misc_notes": "[\"Success\",\"Segmentation Fault\",\"Abort Called\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T06:20:43.711Z",
        "__v": 0
    },
    {
        "_id": "5f605d46468ccc0964b0c29f",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n#define mod 1000000007\n\nunsigned long long power(int x,unsigned long long y)  \n{  \n    unsigned long long temp;  \n    if(y == 0)  \n        return 1;  \n    temp = power(x, y / 2)%mod;  \n    if (y % 2 == 0)  \n        return (temp * temp)%mod;  \n    else\n    {  \n        if(y > 0)  \n            return (x * temp * temp)%mod;  \n        else\n            return ((temp * temp) / x)%mod;  \n    }  \n}\nvoid fastscan(long long &x)\n    {\n        bool neg=false;\n        register int c;\n        x =0;\n        c=getchar();\n        if(c=='-')\n        {\n            neg = true;\n            c=getchar();\n        }\n        for(;(c>47 && c<58);c=getchar())\n            x = (x<<1) + (x<<3) +c -48;\n        if(neg)\n            x *=-1;\n    }\nint main() {\n    long long t,n,i,j,prime[1000001],c=0,cp[1000001];\n    fastscan(t);\n    for(i=1;i<1000001;i++){\n        prime[i]=1;\n    }\n    cp[1]=0;\n    for(i=2;i<1000001;i++){\n        if(prime[i]==1){\n            for(j=2*i;j<100001;j=j+i){\n                prime[j]++;\n            }\n            c++;\n        }\n        cp[i]=c;\n    }\n    while(t--){\n        fastscan(n);\n        c = cp[n];\n        printf(\"%llu\\n\",power(2,c-1));\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480354,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981551,
        "updated_at_ms": 1599992351,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:20:54.198Z",
        "__v": 0
    },
    {
        "_id": "5f605d4c468ccc0964b0c2a0",
        "submission_code": "def factors(x):\n    factor=[]\n    for i in range(1, x + 1):\n        if x%i==0:\n            factor.append(i)\n    return factor\n\ndef gcd(a, b):  \n    if (a == 0 or b == 0): \n        return False\n    if (a == b): \n        return a \n    if (a > b): \n        return gcd(a-b, b) \n    return gcd(a, b-a) \n       \ndef coprime(a, b) : \n    return (gcd(a, b) == 1) \n  \ndef numOfPairs(arr, n,res) : \n    count = 0\n    for i in range(0, n-1) : \n        for j in range(i+1, n) : \n            if (coprime(arr[i], arr[j]) and arr[i]*arr[j]==res) :\n                #print(\"prime pairs\",arr[i],arr[j]) \n                count = count + 1\n    return count\n\nfor _ in range(int(input())):\n    n=int(input())\n    fact=1\n    M = 1000000007\n    for i in range(1,n+1):\n        fact=(fact*i)%M\n    factor=factors(fact)\n    #print(factor)\n    ans=numOfPairs(factor,len(factor),fact)\n    print(ans)\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480341,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981532,
        "updated_at_ms": 1599992332,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:21:00.648Z",
        "__v": 0
    },
    {
        "_id": "5f605d52468ccc0964b0c2a1",
        "submission_code": "#include<bits/stdc++.h>\n#define ll           long long int\n#define pb           push_back\n#define F            first\n#define S            second\nusing namespace std;\nbool check(char **a,bool **b,int i,int j)\n{\n    pair<int,int> l,r;\n    l.F=i+1;\n    l.S=j;\n    r.F=i;\n    r.S=j+1;\n    while((r!=l)&&(a[l.F][l.S]==a[r.F][r.S]))\n    {\n        if(b[l.F][l.S])\n            ++(l.F);\n        else\n            ++(l.S);\n        if(b[r.F][r.S])\n            ++(r.F);\n        else\n            ++(r.S);\n    }\n    if(a[l.F][l.S]>a[r.F][r.S])\n        return 0;\n    return 1;  \n}\nvoid solve()\n{\n    int n,m;\n    cin>>n>>m;\n    char **a=new char*[n];\n    for(int i=0;i<n;++i)\n    {\n        a[i]=new char[m];\n        for(int j=0;j<m;++j)\n            cin>>a[i][j];\n    }\n    bool **b=new bool*[n];\n    for(int i=0;i<n;++i)\n        b[i]=new bool[m];\n    pair<int,int> c=make_pair(n-1,m-1);\n    pair<int,int> temp;\n    for(int i=n-1;i>-1;--i)\n    {\n        for(int j=m-1;j>-1;--j)\n        {\n            temp=make_pair(i,j);\n            if(temp==c)\n                continue;\n            if((i!=(n-1))&&(j!=(m-1)))\n            {\n                if(check(a,b,i,j))\n                {\n                    b[i][j]=1;\n                }\n                else\n                {\n                    b[i][j]=0;\n                }\n            }\n            else if(i!=(n-1))\n            {\n                b[i][j]=1;\n            }\n            else\n            {\n                b[i][j]=0;\n            }\n        }\n    }\n    temp=make_pair(0,0);\n    while(temp!=c)\n    {\n        if(b[temp.F][temp.S])\n        {\n            cout<<\"D\";\n            ++(temp.F);\n        }\n        else\n        {\n            cout<<\"R\";\n            ++(temp.S);\n        }\n    }\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin>>t;\n    for(int i=1;i<=t;++i)\n    {\n        cout<<\"Case #\"<<i<<\": \";\n        solve();\n        cout<<\"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480340,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9693257",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "sg0071729",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599981532,
        "updated_at_ms": 1599983932,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:21:06.376Z",
        "__v": 0
    },
    {
        "_id": "5f605d5b468ccc0964b0c2a2",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define mod 1000000007\n#define f(i,a,b) for(ll i=a;i<b;i++)\n#define rf(i,a,b) for(ll i=a;i>=b;i--)\n#define sf(i,s) for(ll i=0;s[i]!='\\0';i++)\n#define watch(x) cout << (#x) << \" is \" << (x) << \"\\n\"\n#define inf 1e18\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define all(v) v.begin(),v.end()\n#define rall(v) v.rbegin(),v.rend()\n#define tr(v,i) for(typeof(v).begin() i = v.begin(); i != v.end(); i++)\n#define pre(v,x) (v.find(x) != v.end())\n#define vpre(v,x) (find(all(v),x) != v.end())\n#define gcd(x,y) __gcd(x,y)\n#define bc(x) __builtin_popcountll(x)\n//cin.ignore(1, '\\n');\nll power(ll a, ll b)\n{\n    if (b == 0)\n        return 1;\n    if (b == 1)\n        return a % mod;\n    else\n    {\n        ll t = power(a, b / 2);\n        if (b % 2 == 0)\n            return ((t % mod) * (t % mod)) % mod;\n        else\n            return ((((t % mod) * (t % mod)) % mod) * ((a % mod) % mod)) % mod;\n    }\n}\nll fact[3000001],factinv[3000001],natinv[3000001],N=3000000;\nvoid precompute()\n{\n    ll i;\n    fact[0]=1;\n    fact[1]=1;\n    factinv[0]=factinv[1]=natinv[0]=natinv[1]=1;\n    for(i=2;i<=N;i++)\n    {\n        natinv[i]=((natinv[mod%i]%mod)*(mod-mod/i)%mod)%mod;\n    }\n    for(i=2;i<=N;i++)\n    {\n        fact[i]=((fact[i-1]%mod)*(i%mod))%mod;\n        factinv[i]=((natinv[i]%mod)*(factinv[i-1]%mod))%mod;\n    }\n}\nvoid solve()\n{\nll x,y,x1,y1,x2,y2,z2,z1,x11,y11,z11,x22,y22,z22,x33,y33,z33,ans1,ans2,ans11,ans22,ans33,ansmain,ansextra,z,ans;\n    cin>>x>>y>>x1>>y1>>x2>>y2;\n    z=x+y;\n //   watch(fact[z]);\n    ans=((fact[z]%mod)*(factinv[x]%mod))%mod;\n    ans=((ans%mod)*(factinv[y]%mod))%mod;\n    z1=x1+y1;\n    ans1=((fact[z1]%mod)*(factinv[x1]%mod))%mod;\n    ans1=((ans1%mod)*(factinv[y1]%mod))%mod;\n    x11=x-x1;\n    y11=y-y1;\n    z11=x11+y11;\n    ans11=((fact[z11]%mod)*(factinv[x11]%mod))%mod;\n    ans11=((ans11%mod)*(factinv[y11]%mod))%mod;\n    z2=x2+y2;\n    ans2=((fact[z2]%mod)*(factinv[x2]%mod))%mod;\n    ans2=((ans2%mod)*(factinv[y2]%mod))%mod;\n    x22=x-x2;\n    y22=y-y2;\n    z22=x22+y22;\n    ans22=((fact[z22]%mod)*(factinv[x22]%mod))%mod;\n    ans22=((ans22%mod)*(factinv[y22]%mod))%mod;\n    x33=x2-x1;\n    y33=y2-y1;\n    z33=x33+y33;\n    ans33=((fact[z33]%mod)*(factinv[x33]%mod))%mod;\n    ans33=((ans33%mod)*(factinv[y33]%mod))%mod;\n    ansextra=((ans1%mod)*(ans22%mod))%mod;\n    ansextra=((ansextra%mod)*(ans33%mod))%mod;\n    ans1=((ans1%mod)*(ans11%mod))%mod;\n    ans2=((ans2%mod)*(ans22%mod))%mod;\n   // watch(ans);\n   // watch(ans1);\n    ansmain=(ans-ans1-ans2+ansextra+mod)%mod;\n    ansmain=ansmain%mod;\n    cout<<ansmain<<\"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll t = 1;\n    precompute();\n    cin >> t;\n    while (t--)\n    {\n        solve();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480334,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9631447",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "bugs_overflow",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981524,
        "updated_at_ms": 1599985124,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:21:15.660Z",
        "__v": 0
    },
    {
        "_id": "5f605d63468ccc0964b0c2a3",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n \nint main() {\n    // your code goes here\n     ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t; cin>>t;\n    while(t--)\n    {\n    int n;cin>>n;\n    int ans;\n    vector<pair<int,int> >v(n);\n    vector<int>h(n);\n    for(int i=0;i<n;i++)\n    {\n        cin>>v[i].first>>v[i].second;\n    }\n    int mini=INT_MAX;\n    for(int i=0;i<n;i++)\n    {\n        int sum=0;\n        int a=v[i].first, b=v[i].second;\n        for(int j=0;i<n;j++)\n        {\n            int c=v[j].first,d=v[j].second;\n            sum+=(a-c)*(a-c) + (b-d)*(b-d);\n        }\n        mini=min(mini,sum);\n        h.push_back(sum);\n \n    }\n    for(int i=0;i<n;i++)\n    {\n        if(mini==h[i])\n        ans=i;\n    }\n    cout<<v[ans].first<<\" \"<<v[ans].second<<\"\\n\";\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480331,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6077224",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "18H51A04F3",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981522,
        "updated_at_ms": 1599981522,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:21:23.410Z",
        "__v": 0
    },
    {
        "_id": "5f605d69468ccc0964b0c2a4",
        "submission_code": "n=1000001\nsieve=[0]*(n+1)\nsieve[0]=1\nsieve[1]=1\nfor x in range(2,n+1):\n    if(sieve[x]):\n        continue\n    for u in range(2*x,n+1,x):\n        sieve[u]=1\na1=[]        \nfor i in range(n):\n    if(sieve[i]==0):\n        a1.append(i)\n#print(a1)    \ndef binarySearch (arr, l, r, x): \n    mid=0\n    if r >= l:\n        mid = l + (r - l) // 2\n        if arr[mid] == x: \n            return mid \n\n        elif arr[mid] > x: \n            return binarySearch(arr, l, mid-1, x) \n        else: \n            return binarySearch(arr, mid + 1, r, x) \n    else: \n        return mid\nfor i in range(int(input())):\n    m=1000000007\n    n=int(input())\n    if(n==1):\n        print(0)\n    elif(n==2):\n        print(1)\n    else:    \n        if n in a1:\n            d=binarySearch(a1,0,len(a1),n)\n            print((d+1)%m)\n        else:\n            c=0\n            for i in a1:\n                if(i>n):\n                    break\n                else:\n                    c=((c%m)+(1%m))%m\n            print(c%m)        \n    \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480329,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5796840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981518,
        "updated_at_ms": 1599989918,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:21:29.269Z",
        "__v": 0
    },
    {
        "_id": "5f605d6e468ccc0964b0c2a5",
        "submission_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define ar array\n#define ll long long\n#define int long long\n\nconst int MAX_N = 1e5 + 1;\nconst int MOD = 1e9 + 7;\nint n, m;\nint numberOfPaths(int m, int n)\n{\n    m++;\n    n++;\n    int path = 1;\n    for (int i = n; i < (m + n - 1); i++)\n    {\n        path *= i;\n        path /= (i - n + 1);\n    }\n    return path;\n}\nvoid solve()\n{\n    int x, y, x1, y1, x2, y2;\n    cin >> x >> y >> x1 >> y1 >> x2 >> y2;\n\n    // cout<<numberOfPaths(2,1)<<\" \";\n\n    ll ans = numberOfPaths(x, y);\n\n        ll temp= (numberOfPaths((x1),(y1))*numberOfPaths(x-x1,y-y1))%MOD;\n\n        ll anstwo =(numberOfPaths(x2,y2)-(numberOfPaths(x1,y1)*numberOfPaths(x2-x1,y2-y1)))%MOD;\n        ll sec=(numberOfPaths(x-x2,y-y2)*anstwo)%MOD;\n\n\n        ans=(ans-sec-temp)%MOD;\n   \n    cout << ans << \"\\n\";\n}\n\nint32_t main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    int tc = 1;\n    cin >> tc;\n    for (int t = 1; t <= tc; t++)\n    {\n        // cout << \"Case #\" << t  << \": \";\n        solve();\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480325,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "2892432",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "17H51A05M7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981516,
        "updated_at_ms": 1599981516,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:21:34.959Z",
        "__v": 0
    },
    {
        "_id": "5f605d77468ccc0964b0c2a6",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\nstring getLexiSmall(string& a,string& b)\n{\n    if(a.size()==0)\n        return b;\n    if(b.size()==0)\n        return a;\n    for(int i=0;i<a.size();i++)\n    {\n        if(a[i]<b[i])\n            return a;\n        else if(a[i]>b[i])\n            return b;\n    }\n    return a;\n}\nint main()\n{\n    int t;\n    cin>>t;\n    for(int cas=1;cas<=t;cas++)\n    {\n        int n,m;\n        cin>>n>>m;\n        vector<vector<char>> a(n,vector<char>(m));\n        for(int i=0;i<n;i++)\n            for(int j=0;j<m;j++)\n                cin>>a[i][j];\n        //\n//        for(int i=0;i<n;i++)\n//            for(int j=0;j<m;j++)\n//                cout<<a[i][j]<<'\\n';\n        //\n        string empt = \"\";\n        vector<vector<string>> b(n,vector<string>(m,empt));\n        vector<vector<char>> path(n,vector<char>(m));\n        for(int i=n-1;i>=0;i-=1)\n        {\n            for(int j=m-1;j>=0;j-=1)\n            {\n                string d,r;\n                if(i+1<=n-1)\n                    d = b[i+1][j];\n                if(j+1<=m-1)\n                    r = b[i][j+1];\n                string buff = getLexiSmall(d,r);\n                b[i][j] = string(1,a[i][j]) + getLexiSmall(d,r);\n                if(buff==d)\n                    path[i][j] = 'd';\n                else\n                    path[i][j] = 'r';\n            }\n        }\n        string ans;\n        int x = 0;\n        int y = 0;\n        while(!(x==n-1 and y==m-1))\n        {\n            if(path[x][y]=='d')\n            {\n                ans+=string(1,'D');\n                x+=1;    \n            }\n            else\n            {\n                ans+=string(1,'R');\n                y+=1;\n            }\n        }\n        cout<<\"Case #\"<<cas<<\": \"<<ans<<'\\n';\n    }    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480321,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "8391815",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "balasai2712",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599981509,
        "updated_at_ms": 1599981509,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:21:43.130Z",
        "__v": 0
    },
    {
        "_id": "5f605d81468ccc0964b0c2a7",
        "submission_code": "from sys import stdin,stdout\nfor _ in range(int(stdin.readline())):\n    n=int(stdin.readline())\n    count=0\n    for i in range(1,n+1):\n        if i%2!=0:\n            count+=1\n    print(count%((10**9)+7))\n    #stdout.flush()\n        \n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480314,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7783852",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "dineshreddyredd4",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981503,
        "updated_at_ms": 1599983903,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:21:53.093Z",
        "__v": 0
    },
    {
        "_id": "5f605d89468ccc0964b0c2a8",
        "submission_code": "a=int(input())\nx=[]\ny=[]\nz=[]\n   \n   \ndef argmin():\n   \n   \n    g=[]\n    a=0\n    d=[]\n    for i in range (0,N):\n        a=0\n        for j in range(0,N):\n            a=a+(x[i]-x[j])*(x[i]-x[j]) +(y[i]-y[j])*(y[i]-y[j])\n           \n        g.append(a)\n    b=min(g)\n    for i in range(0,N):\n        flag=0\n        c=0\n        for j in range(0,N):\n            c=c+(x[i]-x[j])*(x[i]-x[j]) +(y[i]-y[j])*(y[i]-y[j])\n           \n            if c==b:\n                flag=flag+1\n                d.append(x[i])\n                d.append(y[i])\n                return (d[:2])\n            if flag==1:\n                break\n\nfor i in range(0,a):\n    N=int(input())\n    x=[]\n    y=[]\n    for j in range(0,N):\n        e=input()\n        e=list(e.split())\n        f=list(map(int,e))\n        x.append(f[0])\n        y.append(f[1])\n    z.append(argmin())\n    print(*z[i],sep=\" \")",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480313,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6570364",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "bhargavikalyani2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981501,
        "updated_at_ms": 1599983901,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:22:01.633Z",
        "__v": 0
    },
    {
        "_id": "5f605d90468ccc0964b0c2a9",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nlong long int prime[1000001]={0},a[1000001],power[1000001]={0},m=1000000007;\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    long long int i,j,t,n;\n    power[0]=1;\n    for(i=1;i<1000000;i++)\n    {\n        power[i]=((power[i-1]%m)*(2%m))%m;\n    }\n    prime[1]=1;\n     for(i=2;i<=1000000;i++)\n     {\n        if(prime[i]==0)\n        {\n            for(j=2*i;j<=1000000;j+=i)\n            {\n                prime[j]=1;\n            }\n        }\n     }\n    a[0]=0;\n    a[1]=0;\n    for(i=2;i<=1000000;i++)\n    {\n        if(prime[i]==0)\n            a[i]=a[i-1]+1;\n        else\n            a[i]=a[i-1];\n    }\n    cin>>t;\n    while(t--){\n        cin>>n;\n        cout<<power[a[n]-1]<<endl;\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480297,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7133320",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "logicalcoder9908",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981474,
        "updated_at_ms": 1599983874,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:22:08.559Z",
        "__v": 0
    },
    {
        "_id": "5f605d97468ccc0964b0c2aa",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n\n// https://atcoder.jp/posts/518\n// #include <atcoder/convolution>\n// #include <atcoder/dsu>\n// #include <atcoder/fenwicktree>\n// #include <atcoder/lazysegtree>\n// #include <atcoder/math>\n// #include <atcoder/maxflow>\n// #include <atcoder/mincostflow>\n// #include <atcoder/modint>\n// #include <atcoder/scc>\n// #include <atcoder/segtree>\n// #include <atcoder/string>\n// #include <atcoder/twosat>\n// using namespace atcoder;\n\nusing ld = long double;\n#define int long long\n\n#define F first\n#define S second\n#define s(x) set<x>\n#define um(x, y) unordered_map<x, y>\n#define m(x, y) map<x, y>\n#define p(x, y) pair<x, y>\n#define v(x) vector<x>\n#define min_heap(t) priority_queue<t, vector<t>, greater<t>>\n#define max_heap(t) priority_queue<t>\n\n#define eb emplace_back\n#define mp make_pair\n#define bs binary_search\n#define lb lower_bound\n#define ub upper_bound\n\n#define all(v) v.begin(), v.end()\n#define ss(v) stable_sort(all(v))\n#define fori(i, a, b) for (int i = a; i <= b; i++)\n#define rofi(i, a, b) for (int i = a; i >= b; --i)\n#define scn(v1)        \\\n    for (auto &x : v1) \\\n        cin >> x;\n#define deb(x) cout << #x << \"=\" << x << endl;\n#define R(x) reverse(all(x));\n\n#define FILE_READ_IN freopen(\"input.txt\", \"r\", stdin);\n#define FILE_READ_OUT freopen(\"output.txt\", \"w\", stdout);\n\n#define fastio                    \\\n    ios_base::sync_with_stdio(0); \\\n    cin.tie(0);                   \\\n    cout.tie(0);\n#define stprs(x) cout << fixed << setprecision(x);\n\nconst char nl = '\\n';\nconst char sp = ' ';\nconst int mod1 = 1e9 + 7;\nconst int mod2 = 998244353;\nconst ld PI = acos(-1);\n\n#define debug cerr\n#define name(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\ntemplate<class A>\nostream& operator << (ostream& out, const set<A> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            out << \", \";\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<class A>\nostream& operator << (ostream& out, const vector<A> &a) {\n    // out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            // out << \", \";\n            out << ' ';\n        out << *it;\n    }\n    return out;\n    return out << \"]\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const pair<A, B> &a) {\n    return out <<  \"(\" << a.first << \", \" << a.second << \")\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\ntemplate<class A, class B>\nostream& operator << (ostream& out, const unordered_map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<typename... T>\nvoid read(T&... args) {\n    ((cin >> args), ...);\n}\n\ntemplate<typename... T>\nvoid print(T... args) {\n    ((cout << args), ...);\n}\n\n// variables and consts\n// -- variables and consts --\n\nstring ans = \"\";\n\nvoid dfs(int i, int j, s(p(int, int)) &vis, v(v(char)) &v1, string path) {\n    if(vis.count({i, j})) return;\n    int n = v1.size();\n    int m = v1[0].size();\n    if(i == n-1 and j == m-1) {\n        ans = min(ans, path);\n        return;\n    }\n    int ci = v1[i+1][j];\n    int cj = v1[i][j+1];\n    vis.emplace(i, j);\n    if(ci == cj) {\n        dfs(i+1, j, vis, v1, path+'D');\n        dfs(i, j+1, vis, v1, path+'R');\n    } else if(cj < ci) {\n        dfs(i, j+1, vis, v1, path+'R');\n    } else {\n        dfs(i+1, j, vis, v1, path+'D');\n    }\n}\n\nvoid solve(void) {\n    int n, m;\n    read(n, m);\n    v(v(char)) v1(n, v(char)(m));\n    fori(i, 0, n-1) scn(v1[i]);\n    s(p(int, int)) vis;\n    int i = 0, j = 0;\n    ans = \"\";\n    ans = \"z\";\n    dfs(i, j, vis, v1, \"\");\n    cout << ans << nl;\n}\n\nint32_t main(void) {\n    fastio\n    int __ = 1;\n    read(__);\n    int i = 1;\n    while (__--) {\n        cout << \"Case # \"<< i << \": \";\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480294,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "5078334",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp14",
        "site_user_handle": "the_pythor",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599981472,
        "updated_at_ms": 1599981472,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T06:22:15.866Z",
        "__v": 0
    },
    {
        "_id": "5f605d9e468ccc0964b0c2ab",
        "submission_code": "import math\ndef gcd(a, b):\n    if a == b:\n        return a\n    elif a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a & 1 == 0:\n        if b & 1 == 0:\n            return 2*gcd(a >> 1,b >> 1)\n        else:\n            return gcd(a >> 1, b)\n    elif a & 1 != 0:\n        if b & 1 == 0:\n            return gcd(a, b >> 1)\n        elif a > b and b & 1 != 0:\n            return gcd((a-b) >> 1, b)\n        else:\n            return gcd((b-a) >> 1, a)\nfor _ in range(int(input())):\n    N = int(input())\n    pair = 0\n    to = math.factorial(N)%1000000007\n    #print(to)\n    for i in range(1,math.floor(math.sqrt(to))+1):\n        #print(i,to//i)\n        if gcd(i,to//i) == 1:\n            pair += 1\n        N = N//i\n    print(pair)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480274,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3164622",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anshmaske743",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981450,
        "updated_at_ms": 1599981450,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:22:22.829Z",
        "__v": 0
    },
    {
        "_id": "5f605da4468ccc0964b0c2ac",
        "submission_code": "n=1000001\nsieve=[0]*(n+1)\nsieve[0]=1\nsieve[1]=1\nfor x in range(2,n+1):\n    if(sieve[x]):\n        continue\n    for u in range(2*x,n+1,x):\n        sieve[u]=1\na1=[]        \nfor i in range(n):\n    if(sieve[i]==0):\n        a1.append(i)\n#print(a1)    \ndef binarySearch (arr, l, r, x): \n    mid=0\n    if r >= l:\n        mid = l + (r - l) // 2\n        if arr[mid] == x: \n            return mid \n\n        elif arr[mid] > x: \n            return binarySearch(arr, l, mid-1, x) \n        else: \n            return binarySearch(arr, mid + 1, r, x) \n    else: \n        return mid\nfor i in range(int(input())):\n    m=1000000007\n    n=int(input())\n    if(n==1):\n        print(0)\n    elif(n==2):\n        print(1)\n    else:    \n        if n in a1:\n            d=binarySearch(a1,0,len(a1),n)\n            print(d+1)\n        else:\n            c=0\n            for i in a1:\n                if(i>n):\n                    break\n                else:\n                    c+=1\n            print(c)        \n    \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480272,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5796840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981449,
        "updated_at_ms": 1599988649,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:22:28.563Z",
        "__v": 0
    },
    {
        "_id": "5f605dab468ccc0964b0c2ad",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define mod 1000000007;\nlong long int gcd(int a,int b)\n{\nif(a==0)return b;\nif(b==0)return a;\nreturn gcd(b,a%b);\n}\nvector<int> div(int n)\n{\n    vector<int>v;\n    for (int i=1; i<=sqrt(n); i++) \n    { \n        if (n%i == 0) \n        { \n            if (n/i == i) \n                v.push_back(i);\n                else{\n               v.push_back(n);\n                    v.push_back(i);}\n        } \n    } \n    return v;\n}\nunsigned int factorial(unsigned int n) \n{ \n    if (n == 0) \n        return 1; \n    return n * factorial(n - 1); \n} \n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;cin>>t;\n    while(t--)\n    {\n        int n;cin>>n;\n        int c=0;\n        long long int k=factorial(n);\n        vector<int>q=div(n);\n        int j=q.size()-1;\n        for(auto i=0;i<=sqrt(n);i++)\n        {\n           j=q.size()-1;\n            while(i<j)\n            {\n            if(gcd(q[i],q[j])==1 && q[i]*q[j]==k)\n            {\n                c++;}\n                j--;\n            }\n            \n        }\n        cout<<c<<\"\\n\";\n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480263,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5087949",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "18H51A04G0",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981437,
        "updated_at_ms": 1599981437,
        "misc_notes": "[\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:22:35.731Z",
        "__v": 0
    },
    {
        "_id": "5f605db2468ccc0964b0c2ae",
        "submission_code": "import java.io.*;\n\n\n\npublic class Solution {\n\n    public static void main(String[] args)throws IOException  {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        \n        long inp=Long.parseLong(br.readLine());\n        for(long i=0;i<inp;i++)\n        {\n            long num=Long.parseLong(br.readLine());\n            long fact=1;\n            for(long j=1;j<=num;j++)\n            {\n             fact=fact*j;   \n            }\n            long count=0;\n            for(long o=1;o<=fact;o++)\n            {\n                for(long p=o;p<=fact;p++)\n                {\n                    if(o*p==fact)\n                    {\n                        if(o%p!=0 || o==1 ||p==1)\n                        {\n                        \n                            int counter=0;\n                            for(long k=2;k<p-1;k++)\n                            {\n                                if(o%k==0&&p%k==0)\n                                {\n                                  counter=1;\n                                    break;\n                                }\n                            }\n                            if(counter==1)\n                            {\n                                continue;\n                            }\n                            else\n                            {\n                                count=count+1;\n                            }\n                            \n                        }\n                        \n                    }\n                }\n            }\n            count=count;\n            System.out.println(count);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480255,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4698811",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "ashutosh_janrao1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981428,
        "updated_at_ms": 1599988628,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:22:42.080Z",
        "__v": 0
    },
    {
        "_id": "5f605db9468ccc0964b0c2af",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480238,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "3304597",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "moazumwani",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981409,
        "updated_at_ms": 1599981409,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:22:49.264Z",
        "__v": 0
    },
    {
        "_id": "5f605dc2468ccc0964b0c2b0",
        "submission_code": "#include <bits/stdc++.h> \nusing namespace std; \n  \nint max_knight(int n, int m) \n{ \n  \n    if (m == 1 || n == 1) { \n  \n        return max(m, n); \n    } \n  \n    else if (m == 2 || n == 2) { \n        int c = 0; \n        c = (max(m, n) / 4) * 4; \n  \n        if (max(m, n) % 4 == 1) { \n            c += 2; \n        } \n        else if (max(m, n) % 4 > 1) { \n            c += 4; \n        } ;\n        return c; \n    } \n    else { \n        return (((m * n) + 1) / 2); \n    } \n} \nint main() \n{ \n    int test;\n    cin >> test;\n    for(int i=0;i<test;i++)\n    {\n        int n,m;\n        cin >> n >> m;\n        cout << \"Case #\" << \"\";\n        cout << i+1 << \": \";\n        if(i==1)\n        cout << max_knight(n,n)+m-2 << \"\\n\";\n        else if (i==2)\n        cout << max_knight(n,n)+m+5 << \"\\n\";\n        else if (i==3)\n        cout << max_knight(n,n)+m+14 << \"\\n\";\n        else\n        cout << max_knight(n,n)+m << \"\\n\";\n    }\n    return 0; \n} \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480228,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "9699297",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "idiotman365",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599981396,
        "updated_at_ms": 1599981396,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:22:58.456Z",
        "__v": 0
    },
    {
        "_id": "5f605dcc468ccc0964b0c2b1",
        "submission_code": "a=int(input())\nx=[]\ny=[]\nz=[]\n   \n   \ndef argmin():\n   \n   \n    g=[]\n    a=0\n    d=[]\n    for i in range (0,N):\n        a=0\n        for j in range(0,N):\n            a=a+(x[i]-x[j])*(x[i]-x[j]) +(y[i]-y[j])*(y[i]-y[j])\n           \n        g.append(a)\n    b=min(g)\n    for i in range(0,N):\n        flag=0\n        c=0\n        for j in range(0,N):\n            c=c+(x[i]-x[j])*(x[i]-x[j]) +(y[i]-y[j])*(y[i]-y[j])\n           \n            if c==b:\n                flag=flag+1\n                d.append(x[i])\n                d.append(y[i])\n                return (d[:2])\n            if flag==1:\n                break\n\nfor i in range(0,a):\n    N=int(input())\n    x=[]\n    y=[]\n    for j in range(0,N):\n        e=input()\n        e=list(e.split())\n        f=list(map(int,e))\n        x.append(f[0])\n        y.append(f[1])\n    z.append(argmin())\n    print(*z[i],sep=\" \")\n\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480227,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6570364",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "bhargavikalyani2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981395,
        "updated_at_ms": 1599982595,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:23:08.256Z",
        "__v": 0
    },
    {
        "_id": "5f605dd5468ccc0964b0c2b2",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\n\npublic class Solution {\n\n    public static void main(String[] args)throws IOException  {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        \n        long inp=Long.parseLong(br.readLine());\n        for(long i=0;i<inp;i++)\n        {\n            long num=Long.parseLong(br.readLine());\n            long fact=1;\n            for(long j=1;j<=num;j++)\n            {\n             fact=fact*j;   \n            }\n            long count=0;\n            for(long o=1;o<=fact;o++)\n            {\n                for(long p=o;p<=fact;p++)\n                {\n                    if(o*p==fact)\n                    {\n                        if(o%p!=0 || o==1 ||p==1)\n                        {\n                        \n                            int counter=0;\n                            for(long k=2;k<p-1;k++)\n                            {\n                                if(o%k==0&&p%k==0)\n                                {\n                                  counter=1;\n                                    break;\n                                }\n                            }\n                            if(counter==1)\n                            {\n                                continue;\n                            }\n                            else\n                            {\n                                count=count+1;\n                            }\n                            \n                        }\n                        \n                    }\n                }\n            }\n            count=count;\n            System.out.println(count);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480216,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4698811",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "ashutosh_janrao1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981368,
        "updated_at_ms": 1599987368,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:23:17.608Z",
        "__v": 0
    },
    {
        "_id": "5f605ddc468ccc0964b0c2b3",
        "submission_code": "n=int(input())\nl=[]\nfor h in range(n):\n    m=int(input())\n    g,p=[],[]\n    for k in range(m):\n        w=list(map(int,input().split()))\n        p.append(w)\n    for i in p:\n        s=0\n        for j in p:\n            if(i!=j):\n                s+=((i[0]-j[0])**2) + ((i[1]-j[1])**2)\n        g.append(s)\n    minimum=min(g)\n    for o in range(len(g)):\n        if(g[o]==minimum):\n            l.append(p[o])\n            break\nfor q in l:\n    print(*q)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480210,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6503057",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "cpremgurumukh",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981362,
        "updated_at_ms": 1599981362,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:23:24.805Z",
        "__v": 0
    },
    {
        "_id": "5f605de2468ccc0964b0c2b4",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n#define mod 1000000007\n\nunsigned long long power(int x,unsigned long long y)  \n{  \n    unsigned long long temp;  \n    if(y == 0)  \n        return 1;  \n    temp = power(x, y / 2)%mod;  \n    if (y % 2 == 0)  \n        return (temp * temp)%mod;  \n    else\n    {  \n        if(y > 0)  \n            return (x * temp * temp)%mod;  \n        else\n            return ((temp * temp) / x)%mod;  \n    }  \n}\nvoid fastscan(long long &x)\n    {\n        bool neg=false;\n        register int c;\n        x =0;\n        c=getchar();\n        if(c=='-')\n        {\n            neg = true;\n            c=getchar();\n        }\n        for(;(c>47 && c<58);c=getchar())\n            x = (x<<1) + (x<<3) +c -48;\n        if(neg)\n            x *=-1;\n    }\nint main() {\n    long long t,n,i,j,prime[1000009],c=0,cp[1000009];\n    fastscan(t);\n    for(i=1;i<=1000005;i++){\n        prime[i]=1;\n    }\n    for(i=2;i<=1000005;i++){\n        if(prime[i]==1){\n            for(j=2*i;j<=1000005;j=j+i){\n                prime[j]++;\n            }\n            c++;\n        }\n        cp[i]=c;\n    }\n    while(t--){\n        fastscan(n);\n        c = 0;\n        for(i=2;i<=n;i++){\n            if(prime[i]==1){\n                c++;\n            }\n        }\n        \n        printf(\"%llu\\n\",power(2,c-1));\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480207,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981355,
        "updated_at_ms": 1599990955,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:23:30.858Z",
        "__v": 0
    },
    {
        "_id": "5f605dec468ccc0964b0c2b5",
        "submission_code": "n=int(input())\nfor _ in range(n):\n    k=int(input())\n    x_val=[]\n    y_val=[]\n    for p in range(k):\n        a,b=map(int,input().split())\n        x_val.append(a)\n        y_val.append(b)\n    score=50000000\n    ans_x=0\n    ans_y=0\n    for i in range(k):\n        s = 0\n        x=x_val[i]\n        y=y_val[i]\n        for j in range(k):\n            s=s+((x-x_val[j])**2)+((y-y_val[j])**2)\n            if s>score:\n                break\n        if s<score:\n                score=s\n                ans_x=x\n                ans_y=y\n    print(ans_x,ans_y)\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480202,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6619310",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "Rahul_Sripada",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981350,
        "updated_at_ms": 1599984950,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:23:40.055Z",
        "__v": 0
    },
    {
        "_id": "5f605df3468ccc0964b0c2b6",
        "submission_code": "def SieveOfEratosthenes(n): \n    prime = [True for i in range(n + 1)] \n    p = 2\n    while (p * p <= n):  \n        if (prime[p] == True):  \n            for i in range(p * 2, n + 1, p): \n                prime[i] = False\n        p += 1\n    all_primes =[0,0]\n    for p in range(2,n + 1): \n        if(prime[p]==True):\n            all_primes.append(all_primes[-1]+1)\n        else:\n            all_primes.append(all_primes[-1])\n    return all_primes\n\nt=  int(input())\nprimes = SieveOfEratosthenes(1000000)\nfor _ in range(t):\n    n = int(input())\n    p = (int)(1e9+7)\n    val = pow(2,primes[n]-1,p)\n    print(val) ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480195,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4312249",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981337,
        "updated_at_ms": 1599982537,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:23:47.656Z",
        "__v": 0
    },
    {
        "_id": "5f605dfb468ccc0964b0c2b7",
        "submission_code": "import math\ndef get_gcd(x, y):\n         while(y):\n                  x, y = y, x % y\n         return x\nm=int(input())\nwhile m>0:\n         n=math.factorial(int(input()))\n         count = 0\n         for i in range(1, int(n**0.5) + 1) : \n                  if n % i == 0 and get_gcd(i, n // i) == 1 :  \n                                    count += 1\n         count=count%1000000007\n         print( count) \n         m-=1 \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480190,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4544619",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vallalasaivishw1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981331,
        "updated_at_ms": 1599984931,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:23:55.403Z",
        "__v": 0
    },
    {
        "_id": "5f605e01468ccc0964b0c2b8",
        "submission_code": "t=int(input())\nfor i in range(t):\n  n=int(input())\nprint('1\\n2\\n2')",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480189,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3723415",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "manojkumarreddy4",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981331,
        "updated_at_ms": 1599981331,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:24:01.594Z",
        "__v": 0
    },
    {
        "_id": "5f605e0a468ccc0964b0c2b9",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n#define mod 1000000007\n\nunsigned long long power(int x,unsigned long long y)  \n{  \n    unsigned long long temp;  \n    if(y == 0)  \n        return 1;  \n    temp = power(x, y / 2)%mod;  \n    if (y % 2 == 0)  \n        return (temp * temp)%mod;  \n    else\n    {  \n        if(y > 0)  \n            return (x * temp * temp)%mod;  \n        else\n            return ((temp * temp) / x)%mod;  \n    }  \n}\nvoid fastscan(long long &x)\n    {\n        bool neg=false;\n        register int c;\n        x =0;\n        c=getchar();\n        if(c=='-')\n        {\n            neg = true;\n            c=getchar();\n        }\n        for(;(c>47 && c<58);c=getchar())\n            x = (x<<1) + (x<<3) +c -48;\n        if(neg)\n            x *=-1;\n    }\nint main() {\n    long long t,n,i,j,prime[1000009],c=0,cp[1000009];\n    fastscan(t);\n    for(i=1;i<=1000005;i++){\n        prime[i]=1;\n    }\n    for(i=2;i<=1000005;i++){\n        if(prime[i]==1){\n            for(j=2*i;j<=1000005;j=j+i){\n                prime[j]++;\n            }\n            c++;\n        }\n        cp[i]=c;\n    }\n    while(t--){\n        fastscan(n);\n        c = cp[n];\n        // for(i=2;i<=n;i++){\n        //     if(prime[i]==1){\n        //         c++;\n        //     }\n        // }\n        \n        printf(\"%llu\\n\",power(2,c-1));\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480172,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981318,
        "updated_at_ms": 1599989718,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:24:10.053Z",
        "__v": 0
    },
    {
        "_id": "5f605e13468ccc0964b0c2ba",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n   static int gcd(int a,int b){\n        if(b==0)return a;\n        a=a%b;\n        return gcd(b,a);\n    }\n     static int fac(int n){\n         int f=1;\n         if(n==0)\n             return 1;\n         else {\n             for(int i=1;i<=n;i++)\n                 f*=i;\n         }\n             return f;\n     }\n    static List<Integer> factor(int fac){\n        int count=0;\n        List<Integer> list=new ArrayList<Integer>();\n        for(int i=1;i<=fac;i++){\n            if(fac%i==0){\n                list.add(i);\n            }\n        }\n        return list;\n    }\n\n\n    \n    \n    \n    public static void main(String[] args) throws IOException{\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    BufferedReader sc =new BufferedReader(new InputStreamReader(System.in));\n      \n       int n=Integer.parseInt(sc.readLine());\n      while(n!=0){\n          int count=1;\n          int x=Integer.parseInt(sc.readLine());\n          int factorial=fac(x);\n         // System.out.println(factorial);\n          List<Integer> res;\n          res=factor(factorial);\n          for(int i:res){\n                                int a=i;\n                  int b=(int)factorial/a;\n                  int result=gcd(a,b);\n               //  System.out.println(result+\" \"+a+\" \"+b+\" \"+x);\n                  if(result==1){\n                      count++;\n                  }\n          }\n          //System.out.println(factors);\n         /* for(int i=2;i<factorial/factors;i++){\n              if(factorial%i==0){\n                  int a=i;\n                  int b=(int)factorial/a;\n                  int result=gcd(a,b);\n               //  System.out.println(result+\" \"+a+\" \"+b+\" \"+x);\n                  if(result==1){\n                      count++;\n                  }\n              }\n          }*/\n\n          System.out.println(count/2);\n          n--;\n      }\n\n    \n    \n    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480168,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6547357",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "ashrithareddy8",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981312,
        "updated_at_ms": 1599987312,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:24:19.806Z",
        "__v": 0
    },
    {
        "_id": "5f605e1d468ccc0964b0c2bb",
        "submission_code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll =long long int;\nvector<pair<ll,ll>>v;\nll xs,xsu,ys,ysu,mini;\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    ll t,n,p,q,x,y;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        p=INT_MAX;q=INT_MAX;\n        v.clear();\n        //s=0;\n        xs=0;\n        ys=0;\n        xsu=0;\n        ll w;\n        ysu=0;\n        mini=INT_MAX;\n        mini+=mini;\n        for(int i=0;i<n;i++)\n        {\n            cin>>x>>y;\n            v.push_back({x,y});\n            xs+=x;\n            ys+=y;\n            xsu+=(x*x);\n            ysu+=(y*y);\n        }\n        //cout<<xs<<' '<< ' '<<ys<< ' '<<xsu<<' '<<ysu<<\"\\n\";\n        for(int i=0;i<n;i++)\n        {\n           // cout<<\" p  \"<<v[i].first<<' '<<v[i].second<<\"\\n\";\n            w=n*v[i].first*v[i].first;\n            ll k=2*v[i].first;\n            k*=xs;\n            w-=k;\n            w+=xsu;\n            \n            w+=(n*v[i].second*v[i].second);\n            k=(2*v[i].second);\n            k*=ys;\n            w-=k;\n            w+=ysu;\n            \n            if(w<mini)\n            {\n                mini=w;\n                p=v[i].first;\n                q=v[i].second;\n            }\n            else if(w==mini)\n            {\n                if((v[i].first<p) || (v[i].first==p && v[i].second<q))\n                {\n                    p=v[i].first;\n                    q=v[i].second;\n                }\n            }\n           // cout<<' '<< w<<\"\\n\";\n        }\n        cout<<p<<' '<<q<<\"\\n\";\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480163,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2892432",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "17H51A05M7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981307,
        "updated_at_ms": 1599983707,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:24:29.702Z",
        "__v": 0
    },
    {
        "_id": "5f605e25468ccc0964b0c2bc",
        "submission_code": "#include <bits/stdc++.h> \nusing namespace std; \n  \n\nvoid countCoprimePairs(int n) \n{ \n    int count = 0; \n  \n   \n  \n\n    for (int i = 2; i <= sqrt(n); i++) { \n  \n\n        if (n % i == 0) { \n  \n\n            if (__gcd(i, (n / i)) == 1) { \n  \n\n\n                \n                count++; \n            } \n        } \n    } \n  \n    cout<<count+1 <<\"\\n\"; \n} \n  \nint main() \n{ \n    int t,b=1;\n    cin >> t;\n     while (t--)\n    {\n  int N;\n  cin >> N;\n  for(int i=1;i<=N;i++)\n  {\n      b=b*i;\n  }\n    countCoprimePairs(b); \n  \n    }\n   \n} ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480154,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9675923",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "manivardhanredd4",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981299,
        "updated_at_ms": 1599983699,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:24:37.802Z",
        "__v": 0
    },
    {
        "_id": "5f605e2c468ccc0964b0c2bd",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define sz(x) (int)(x).size()\n#define all(x) x.begin(), x.end()\n#define itn int\n \nll powmod(ll a,ll b) {ll res=1; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n\nconst int MX = 2e5+5; \nconst int N = 10001;\nint n,m;\n\nint getit(vector<pair<int,ll>> v[],int p, vector<int>& vis, ll z){\n    if(p+1 == n*m) return 1;\n    int ans = 0;\n    vis[p] = 1;\n    for(int i=0;i<v[p].size();++i){\n        if((v[p][i].S&z) == z && !vis[v[p][i].F]){\n            ans |= getit(v, v[p][i].F, vis, z);\n        }\n    }\n    return ans;\n}\n\nvoid kd(vector<pair<int,ll>> v[], int p, vector<int> &vis, ll z){\n    vis[p] = 1;\n    for(auto q : v[p]) {\n        if((q.S&z)<=0) q.S=0;\n        if(vis[q.F]) kd(v,q.F,vis,z);\n    }\n}\n\nll getans(vector< pair< int , ll > > v[], ll cb)\n{\n    ll a = 0;\n    if(cb == -1)  return  0;\n    ll ans = 0;\n    ll p = 0;\n    for(int i = cb;i;i--) {\n        vector<int> x(n*m);\n          p = ans|1ll<<i;\n          if(getit(v, 0, x, p)){\n            ans = ans|(1ll<<i);\n            p = ans;\n        }\n    }\n    return ans;\n}\nint main()\n{\n\n    int t;\n    cin>>t;\n    while(t--) {\n        cin>>m>>n;\n        vector<pair<int,ll>> v[n*m];\n        for(int i =0; i < m;++i) {\n            for(int j =0;j< n;j++) {\n                ll l;\n                if(i < m -1) {\n                    cin>>l;\n                    v[i*n + j].pb({i*n+j+n, l});\n                    v[(i+1)*n+j].pb({i*n+j, l});\n                }\n                if(j < n -1) {\n                    cin>>l;\n                    v[i*n + j].pb({(i)*n+j+1, l});\n                    v[(i)*n+j+1].pb({(i)*n+j, l});    \n                }\n            }\n        }\n        cout<<getans(v, 63)<<\"\\n\";\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480150,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "6937721",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "ak821",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599981294,
        "updated_at_ms": 1599981294,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\",\"Success\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:24:44.451Z",
        "__v": 0
    },
    {
        "_id": "5f605e33468ccc0964b0c2be",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int[] a=new int[n];\n            int[] b=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[j]=sc.nextInt();\n            }\n            double f1=0;\n            int x=0,y=0;\n            for(int k=0;k<n;k++)\n            {\n                double f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+(Math.pow((a[k]-a[j]),2))+(Math.pow((b[k]-b[j]),2));\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            System.out.println(x+\" \"+y);\n        }\n        \n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480136,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981280,
        "updated_at_ms": 1599989680,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:24:51.952Z",
        "__v": 0
    },
    {
        "_id": "5f605e3d468ccc0964b0c2bf",
        "submission_code": "/* ****Ragnar7 _Lawliet_**** */\n/* First, solve the problem.Then write the code. */\n#include<bits/stdc++.h>\n#define ll          long long\n#define ld             long double\n#define hell        1000000007\n#define time        cerr << \"\\nTime elapsed: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\nstd::mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());\nusing namespace std;\n\nll check(string &a,string &b)\n{\n    if(a.size()==0)\n        return 1;\n    if(b.size()==0)\n        return 0;\n    for(ll i =0;i<a.size();i++)\n    {\n        if(a[i]<b[i])\n            return 0;\n        else if(a[i]>b[i])\n            return 1;\n    }\n    return 2;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    // #ifndef ONLINE_JUDGE\n    // freopen (\"input.txt\",\"r\",stdin);\n    // // freopen (\"output.txt\",\"w\",stdout);\n    // #endif\n    ll t = 1;\n    cin>>t;\n    for(ll tt=1;tt<=t;tt++)\n    {\n        ll n,m;\n        cin>>n>>m;\n        char arr[n][m];\n        for(ll i=0;i<n;i++)\n            for(ll j=0;j<m;j++)\n                cin>>arr[i][j];\n\n        ll x = 0,y=0;\n        ll cnt = 0;\n        cout<<\"Case #\"<<tt<<\": \";\n        while((x!=n-1 or y!=m-1))\n        {\n            string a = \"\",b=\"\";\n            for(ll i = y+1; i<=m-1; i++)\n                a+=arr[x][i];\n            for(ll i = x+1; i<=n-1; i++ )\n            {\n                a+=arr[i][m-1];\n            }\n\n            for(ll i = x+1;i<=n-1;i++)\n                b+=arr[i][y];\n            for(ll i = y+1;i<=m-1;i++)\n                b+=arr[n-1][i];\n            // cout<<a<<\" \"<<b<<endl;\n            if(check(a,b)==0 and y<m-1)\n            {\n                string tmp = \"\";\n                if(x<n-1)\n                {\n                    tmp+=arr[x+1][y];\n                    for(ll i=y+1;i<=m-1;i++)\n                        tmp+=arr[x+1][i];\n                    for(ll i=x+2;i<=n-1;i++)\n                        tmp+=arr[i][m-1];\n                    // cout<<tmp<<\" \"<<a<<endl;\n                    if(tmp==a)\n                    {\n                        cout<<\"D\";\n                        x++;\n                        cnt++;\n                        continue;\n                    }\n                    // if(cnt>20)\n                    //     break;\n                    \n                }\n                cout<<\"R\";\n                    y++;\n            }\n            else if(check(a,b)==1 and x<n-1)\n            {\n                cout<<\"D\";\n                x++;\n            }\n            else if(check(a,b)==2)\n            {\n                if(x<n-1)\n                {\n                   cout<<\"D\";\n                    x++; \n                }\n                else\n                {\n                   cout<<\"R\";\n                    y++;  \n                }\n            }\n            else if(x<n-1)\n            {\n               cout<<\"D\";\n                    x++;  \n            }\n            else\n            {\n                cout<<\"R\";\n                    y++; \n            }\n            // cnt++;\n            // if(cnt>20)\n            //     break;\n        }\n        cout<<'\\n';\n        \n    }\n\n    \n    time\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480132,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3583145",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "Ragnar_7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599981272,
        "updated_at_ms": 1599984872,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:25:01.952Z",
        "__v": 0
    },
    {
        "_id": "5f605e48468ccc0964b0c2c0",
        "submission_code": "#include <bits/stdc++.h>\n#define FIO                      \\\n    ios::sync_with_stdio(false); \\\n    cin.tie(0);                  \\\n    cout.tie(0);\n#define OJ \\\n    freopen(\"input1.txt\", \"r\", stdin); \\\n    freopen(\"output1.txt\", \"w\", stdout);\n#define ll long long\nusing namespace std;\n\nfloat distance(int x1, int y1, int x2, int y2) {\n    return (pow(x2 - x1, 2) +  pow(y2 - y1, 2) * 1.0);\n}\n\nint main() {\n    FIO;\n    int t;\n    cin >> t;\n    while(t--) {\n        int n, x, y;\n        cin >> n;\n        vector<pair<int, int> > cii;\n        vector<vector<float> > mat(n, vector<float>(n, 0));\n\n        for(int i=0; i<n; ++i) {\n            cin >> x >> y;\n            cii.push_back(make_pair(x, y));\n        }\n\n        \n        for(int i=0; i<n; ++i) {\n            for(int j=0; j<n && j<i; ++j) {\n                mat[i][j] = distance(cii[i].first, cii[i].second, cii[j].first, cii[j].second);\n                mat[j][i] = mat[i][j];\n            }\n        }\n\n        float minSum = INT_MAX;\n        int minX=0, minY=0;\n\n        for(int i=0; i<n; ++i) {\n            int sum = 0;\n            for(int j=0; j<n; ++j) {\n                sum += mat[i][j];\n            }\n            if(sum < minSum) {\n                minSum = sum;\n                minX = cii[i].first;\n                minY = cii[i].second;\n            }\n        }\n        cout << minX << \" \" << minY << endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480125,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4557538",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "prashanth_007",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981265,
        "updated_at_ms": 1599982465,
        "misc_notes": "[\"Terminated due to timeout\",\"Abort Called\",\"Abort Called\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Abort Called\",\"Abort Called\",\"Abort Called\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:25:12.200Z",
        "__v": 0
    },
    {
        "_id": "5f605e4f468ccc0964b0c2c1",
        "submission_code": "#from sys import stdin,stdout\nfor _ in range(int(input())):\n    n=int(input())\n    count=0\n    for i in range(1,n+1):\n        if i%2!=0:\n            count+=1\n    print((count%((10**9)+7)))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480119,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7783852",
        "submission_status": "Terminated due to timeout",
        "submission_language": "pypy3",
        "site_user_handle": "dineshreddyredd4",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981247,
        "updated_at_ms": 1599982447,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:25:19.869Z",
        "__v": 0
    },
    {
        "_id": "5f605e59468ccc0964b0c2c2",
        "submission_code": "/*\n _     _                             \n| |__ | |__   __ _  __ _ _   _  __ _ \n| '_ \\| '_ \\ / _` |/ _` | | | |/ _` |\n| |_) | | | | (_| | (_| | |_| | (_| |\n|_.__/|_| |_|\\__,_|\\__, |\\__, |\\__,_|\n                   |___/ |___/       \n*/\n#include<bits/stdc++.h>\n\n#define ll          long long\n#define pb          push_back\n#define ppb         pop_back\n#define BigInt      __int128\n#define endl        '\\n'\n#define mii         map<ll int,ll int>\n#define pii         pair<ll int,ll int>\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define hell        1000000007\n#define sim         template < class c\n#define ris         return * this\n#define dor         > debug & operator <<\n#define eni(x)      sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\n\nusing namespace std;\n\nsim > struct rge {c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cout << *x, 0);\nsim > char dud(...);\nstruct debug \n{\n    ~debug() \n    { \n        cout<<endl; \n    }\n    eni(!=) cout << boolalpha << i; ris; }\n    eni(==) ris << range(begin(i), end(i)); }\n    sim, class b dor(pair < b, c > d) \n    {\n        ris << \"(\" << d.first << \", \" << d.second << \")\";\n    }\n    sim dor(rge<c> d) \n    {\n          *this << \"[\";\n          for (auto it = d.b; it != d.e; ++it)\n            *this << \", \" + 2 * (it == d.b) << *it;\n          ris << \"]\";\n    }\n};\n#define fuck(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define N  205\n\nstruct BipartiteMatcher {\n  vector<vector<int>> G;\n  vector<int> L, R, Viz;\n  \n  BipartiteMatcher(int n, int m) :\n  G(n), L(n, -1), R(m, -1), Viz(n) {}\n  \n  void AddEdge(int a, int b) {\n    G[a].push_back(b);\n  }\n  \n  bool Match(int node) {\n    if (Viz[node])\n      return false;\n    Viz[node] = true;\n    \n    for (auto vec : G[node]) {\n      if (R[vec] == -1) {\n        L[node] = vec;\n        R[vec] = node;\n        return true;\n      }\n    }\n    \n    for (auto vec : G[node]) {\n      if (Match(R[vec])) {\n        L[node] = vec;\n        R[vec] = node;\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  int Solve() {\n    int ok = true;\n    while (ok--) {\n      fill(Viz.begin(), Viz.end(), 0);\n      for (int i = 0; i < (int)L.size(); ++i)\n        if (L[i] == -1)\n          ok |= Match(i);\n    }\n    \n    int ret = 0;\n    for (int i = 0; i < L.size(); ++i)\n      ret += (L[i] != -1);\n    return ret;\n  }\n};\n\nint n, m;\n\nbool vis[N][N];\n\nint id[N][N];\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int TESTS=1;\n    cin>>TESTS;\n    ll int tt = 0;\n    while(TESTS--)\n    {\n        cout << \"Case #\" << ++tt << \": \";\n        cin >> n >> m;\n        for(int i = 0; i < N; i++)\n        {\n            for(int j = 0; j < N; j++)\n            {\n                vis[i][j] = false;\n                id[i][j] = -1;\n            }\n        }\n        for(int i = 1; i <= m; i++)\n        {\n            int x, y;\n            cin >> x >> y;\n            vis[x][y] = true;\n        }\n        int cnt1 = 0, cnt2 = 0;\n        for(ll int i = 1; i <= n; i++)\n        {\n            for(ll int j = 1; j <= n; j++)\n            {\n                if(!vis[i][j])\n                {\n                    if((i + j) % 2 == 0)\n                    {\n                        id[i][j] = cnt1++;\n                    }\n                    else\n                    {\n                        id[i][j] = cnt2++;\n                    }\n                }\n            }\n        }\n        vector<pii> edges;\n        for(int i = 1; i <= n; i++)\n        {\n            for(int j = 1; j <= n; j++)\n            {\n                if((i + j) % 2 == 0 && id[i][j] != -1)\n                {\n                    if(i + 2 <= n && j + 1 <= n && id[i + 2][j + 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 2][j + 1]});\n                    }\n                    if(i - 2 >= 1 && j + 1 <= n && id[i - 2][j + 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 2][j + 1]});\n                    }\n                    if(i + 2 <= n && j - 1 >= 1 && id[i + 2][j - 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 2][j - 1]});\n                    }\n                    if(i - 2 >= 1 && j - 1 >= 1 && id[i - 2][j - 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 2][j - 1]});\n                    }\n\n                    if(i + 1 <= n && j + 2 <= n && id[i + 1][j + 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 1][j + 2]});\n                    }\n                    if(i - 1 >= 1 && j + 2 <= n && id[i - 1][j + 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 1][j + 2]});\n                    }\n                    if(i + 1 <= n && j - 2 >= 1 && id[i + 1][j - 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 1][j - 2]});\n                    }\n                    if(i - 1 >= 1 && j - 2 >= 1 && id[i - 1][j - 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 1][j - 2]});\n                    }\n                }\n            }\n        }\n        if(cnt1 + cnt2 == 0)\n        {\n            cout << 0 << endl;\n            continue;\n        }\n        BipartiteMatcher bm(cnt1, cnt2);\n        for(auto it : edges)\n        {\n            bm.AddEdge(it.F, it.S);\n        }\n        int MaximumMatching = bm.Solve();\n        int MinimumVertexCover = MaximumMatching;\n        int MaximumIndependentSet = cnt1 + cnt2 - MinimumVertexCover;\n        cout << MaximumIndependentSet << endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480103,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "2968720",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599981226,
        "updated_at_ms": 1599984826,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:25:29.907Z",
        "__v": 0
    },
    {
        "_id": "5f605e61468ccc0964b0c2c3",
        "submission_code": "a=int(input())\nx=[]\ny=[]\nz=[]\n   \n   \ndef argmin():\n   \n   \n    g=[]\n    a=0\n    d=[]\n    for i in range (0,N):\n        a=0\n        for j in range(0,N):\n            a=a+(x[i]-x[j])*(x[i]-x[j]) +(y[i]-y[j])*(y[i]-y[j])\n           \n        g.append(a)\n    b=min(g)\n    for i in range(0,N):\n        flag=0\n        c=0\n        for j in range(0,N):\n            c=c+(x[i]-x[j])*(x[i]-x[j]) +(y[i]-y[j])*(y[i]-y[j])\n           \n            if c==b:\n                flag=flag+1\n                d.append(x[i])\n                d.append(y[i])\n                return (d[:2])\n            if flag==1:\n                break\n\nfor i in range(0,a):\n    N=int(input())\n    x=[]\n    y=[]\n    for j in range(0,N):\n        e=input()\n        e=list(e.split())\n        f=list(map(int,e))\n        x.append(f[0])\n        y.append(f[1])\n    z.append(argmin())\n   \nfor i in range(0,a):\n    print(*z[i],sep=\" \")",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480089,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6570364",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "bhargavikalyani2",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981210,
        "updated_at_ms": 1599981210,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:25:37.199Z",
        "__v": 0
    },
    {
        "_id": "5f605e69468ccc0964b0c2c4",
        "submission_code": "def gcd(a,b):\n    if (a == 0 or b == 0): return 0\n    if (a == b): return a\n    if (a > b):  \n        return gcd(a - b, b)\n    return gcd(a, b - a)\ndef isco(x,y):\n    return gcd(x,y) == 1\n    \nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    fact=1\n    if n>1:\n        for i in range (1,int(n)+1):\n            fact = fact * i\n    n=fact\n    c=0\n    arr=[0]*10000000\n    for i in range(1,n+1):\n        if n%i==0:\n            a=i\n            b=n//i\n            if (arr[b-1]!=1 and arr[a-1]!=1) and isco(a,b):\n                c=c+1\n            arr[a-1]=1\n            arr[b-1]=1\n    if c>(10**9)+7:\n        print(c//((10**9)+7))\n    else:\n        print(c)\n    \n    \n    \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480086,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4787734",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "user_200",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981208,
        "updated_at_ms": 1599981208,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:25:45.499Z",
        "__v": 0
    },
    {
        "_id": "5f605e6f468ccc0964b0c2c5",
        "submission_code": "n=int(input())\nfor _ in range(n):\n    k=int(input())\n    x_val=[]\n    y_val=[]\n    for p in range(k):\n        a,b=map(int,input().split())\n        x_val.append(a)\n        y_val.append(b)\n    score=50000000\n\n    ans_x=0\n    ans_y=0\n    for i in range(k):\n        s = 0\n        x=x_val[i]\n        y=y_val[i]\n        for j in range(k):\n            # ((x - x1[j]) ** 2) + ((y - y1[j]) ** 2)\n            s=s+((x-x_val[j])**2)+((y-y_val[j])**2)\n        if s<score:\n                score=s\n                ans_x=x\n                ans_y=y\n    print(ans_x,ans_y)\n    # print(ans_y)\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480081,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6619310",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Rahul_Sripada",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981202,
        "updated_at_ms": 1599983602,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:25:51.699Z",
        "__v": 0
    },
    {
        "_id": "5f605e78468ccc0964b0c2c6",
        "submission_code": "def gcd(a,b):\n    while b != 0:\n        a, b = b, a%b\n    return a\n\ndef is_coprime(x, y):\n    return gcd(x, y) == 1\n\ndef factors(num):\n    f=[]\n    for i in range(1,num+1):\n        if num%i==0:\n            f.append(i)\n    return f\n\nT = int(input(\"\"))\nfor i in range(T):\n    num = int(input(\"\"))\n    factorial = 1\n    for k in range(1, num + 1):\n        factorial = factorial * k\n    final_list = []\n    fac_list = factors(factorial)\n    fac_list_rev = fac_list\n    for j in range(0, int(len(fac_list) / 2)):\n        temp = []\n        x = fac_list[j]\n        y = fac_list[(len(fac_list)-j - 1)]\n        if is_coprime(x,y):\n            temp.append(x)\n            temp.append(y)\n            final_list.append(temp)\n    print(len(final_list))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480039,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9633653",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "geetikaagarwal22",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981157,
        "updated_at_ms": 1599984757,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:26:00.948Z",
        "__v": 0
    },
    {
        "_id": "5f605e81468ccc0964b0c2c7",
        "submission_code": "#include <bits/stdc++.h>\n// #include <boost/multiprecision/cpp_int.hpp>\nusing namespace std;\n\n#define int long long\n#define all(v) v.begin(), v.end()\n#define endl   '\\n'\n\nconst int mod = 1e9 + 7;\n\nconst int N = 1000005;\n\nint _fNI[N + 1] = {1, 1};\nint _nNI[N + 1] = {1, 1};\nint fact[N + 1] = {1, 1};\n\nint nCr(int n, int r) {\n    return ((fact[n] * _fNI[r]) % mod * _fNI[n - r]) % mod;\n}\n\nsigned main() {\n    for (int i = 2; i <= N; i++) {\n        _nNI[i] = _nNI[mod % i] * (mod - mod / i) % mod;\n        _fNI[i] = (_nNI[i] * _fNI[i - 1]) % mod;\n        fact[i] = (fact[i - 1] * i) % mod;\n    }\n\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    // if (fopen(\"in.txt\", \"r\"))\n    //     freopen(\"in.txt\", \"r\", stdin);\n\n    int t;\n    cin >> t;\n    while (t--) {\n        int x, y, x1, y1, x2, y2;\n        cin >> x >> y >> x1 >> y1 >> x2 >> y2;\n\n        auto a1 = nCr(x1 + y1, x1), b1 = nCr(x - x1 + y - y1, x - x1),\n             a2 = nCr(x2 + y2, x2), b2 = nCr(x - x2 + y - y2, x - x2);\n\n        int ans = (((nCr(x + y, x) - (a1 * b1) % mod + mod) % mod -\n                    (a2 * b2) % mod + mod) %\n                       mod +\n                   (((min(a1, b1) * min(a2, b2)) % mod) *\n                    nCr(x2 - x1 + y2 - y1, x2 - x1)) %\n                       mod) %\n                  mod;\n\n        cout << ans << endl;\n    }\n\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480023,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4669945",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "160218733078CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981126,
        "updated_at_ms": 1599982326,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:26:09.853Z",
        "__v": 0
    },
    {
        "_id": "5f605e88468ccc0964b0c2c8",
        "submission_code": "def f(x_arr,y_arr,n):\n    z= []\n    for i in range(n):\n        s = 0\n        for j in range(n):\n            s += (x_arr[i]-x_arr[j])**2 + (y_arr[i]-y_arr[j])**2\n        z.append(s)\n    ind = z.index(min(z))\n    return [x_arr[ind],y_arr[ind]]\n             \n\nt = int(input())\nwhile(t>0):\n    t-=1\n    n = int(input())\n    x_arr = []\n    y_arr = []\n    for i in range(n):\n        x,y = map(int, input().split(' '))\n        x_arr.append(x)\n        y_arr.append(y)\n    res = (f(x_arr,y_arr,n))\n    print(res[0],end=' ')\n    print(res[1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480009,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9686060",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "kedharnathsonu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981105,
        "updated_at_ms": 1599988305,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:26:16.250Z",
        "__v": 0
    },
    {
        "_id": "5f605e8f468ccc0964b0c2c9",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int[] a=new int[n];\n            int[] b=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[j]=sc.nextInt();\n            }\n            double f1=0;\n            int x=0,y=0;\n            for(int k=0;k<n;k++)\n            {\n                double f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+(Math.pow((a[k]-a[j]),2))+(Math.pow((b[k]-b[j]),2));\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            System.out.println(x+\" \"+y);\n        }\n        \n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480008,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981103,
        "updated_at_ms": 1599988303,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:26:23.805Z",
        "__v": 0
    },
    {
        "_id": "5f605e95468ccc0964b0c2ca",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    static int way=0;\n    static int arr[];\n    static boolean valid(int i,int j){\n        if(i>arr[0] || j>arr[1] || (i==arr[2] && j==arr[3]) || (i==arr[4] && j==arr[5])){\n            return false;\n        }\n        return true;\n    }\n    static void track(int x,int y){\n        if(x==arr[0] && y==arr[1]){\n            way+=1;\n            return;\n        }\n        if(valid(x+1,y))\n            track(x+1,y);\n        if(valid(x,y+1))\n            track(x,y+1);\n        return;\n        \n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner s=new Scanner(System.in);\n        int t=s.nextInt();\n        while(t>0){\n            arr=new int[6];\n            for(int i=0;i<6;i++){\n                arr[i]=s.nextInt();\n            }\n            way=0;\n            track(0,0);\n            System.out.println(way);\n            t--;\n        }\n    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326480004,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "5598553",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "manmeet02012001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599981098,
        "updated_at_ms": 1599981098,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:26:29.499Z",
        "__v": 0
    },
    {
        "_id": "5f605e9d468ccc0964b0c2cb",
        "submission_code": "import math as mt\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    lx=[]\n    ly=[]\n    s=0\n    qw=0\n    for i in range(n):\n        x,y=map(int,input().split())\n        lx.append((x,y))\n        s+=x\n        qw+=y\n    lx.sort()\n    s=s/n\n    qw=qw/n\n    m=10**20\n    for i in range(len(lx)):\n        ans=(lx[i][0]-s)**2+(lx[i][1]-qw)**2\n        if(ans<m):\n            ans1=lx[i][0]\n            ans2=lx[i][1]\n            m=ans\n    print(ans1,ans2)\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479997,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2801145",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981089,
        "updated_at_ms": 1599983489,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:26:37.998Z",
        "__v": 0
    },
    {
        "_id": "5f605ea8468ccc0964b0c2cc",
        "submission_code": "// C++ program to print all primes smaller than or equal to \n// n using Sieve of Eratosthenes \n// https://www.geeksforgeeks.org/sieve-of-eratosthenes/\nconst int MOD = 1e9+7;\n#include <bits/stdc++.h> \nusing namespace std; \nint sieve(int n) \n{ \n    // Create a boolean array \"prime[0..n]\" and initialize \n    // all entries it as true. A value in prime[i] will \n    // finally be false if i is Not a prime, else true. \n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n\n    for (int p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        { \n            // Update all multiples of p greater than or \n            // equal to the square of it \n            // numbers which are multiple of p and are \n            // less than p^2 are already been marked. \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n    int count=0;\n    // Print all prime numbers \n    for (int p=2; p<=n; p++) \n    if (prime[p]) \n        count++; \n    return count%MOD;\n} \n\n// Driver Program to test above function \nint main() \n{ \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin>>t;\n    while(t--){\n        int n;\n        cin>>n;\n        cout << pow(2,sieve(n)%MOD-1) <<endl;\n    }\n    return 0; \n} \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479963,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4669945",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "160218733078CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981040,
        "updated_at_ms": 1599982240,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:26:48.647Z",
        "__v": 0
    },
    {
        "_id": "5f605eb1468ccc0964b0c2cd",
        "submission_code": "#include <bits/stdc++.h>\n#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)\n#define nl cout<<\"\\n\"\n#define pb push_back\n#define max(a,b) ((a)>(b) ? (a) : (b))\n#define min(a,b) ((a)<(b) ? (a) : (b))\n#define REP(i,a,b) for(li i=a; i<=b ;++i)\n#define RREP(i,b,a) for(li i=b ; i>=a ; --i)\nusing namespace std;\nusing ui=unsigned int;\nusing li=long int;\nusing uli=unsigned long int;\nusing lli=long long int;\nusing ulli=unsigned long long int;\n\ntypedef struct {\n    li x, y;\n}data;\n\nvoid solve()\n{\n    li n;\n    cin >> n;\n    vector< data > v(n);\n    lli xsum = 0, ysum = 0;\n    for(data&j: v){\n        cin >> j.x >> j.y; \n        xsum+=j.x;\n        ysum+=j.y;\n    }\n\n    // for(auto i : v)\n    // {\n    //     cout <<i.x << \" \"<<i.y ;\n    //     nl;\n    // }\n\n    // vector<vector<lli>> arr;\n    // arr.assign(n,vector<lli>(n));\n\n    // for(li i = 0 ; i < n ; ++i){\n    //     for(li j = 0 ; j < n ; ++j){\n    //         arr[i][j]= (v[i].x * v[j].x  + v[i].y * v[j].y);\n    //     }\n    // }\n\n    li fsum = n*(v[0].x*v[0].x + v[0].y*v[0].y) - 2 * v[0].x * xsum - 2* v[0].y* ysum;\n    \n    // for(li j = 0 ; j < n ; ++j ){\n    //     fsum+= -2*(arr[0][j] ) + (arr[j][j]);\n    // } \n    // cout << fsum;nl;\n\n    li mnm = fsum;\n    li mnmind = 0; \n    for(li i = 1 ; i < n ; ++i){\n        li sum = n*(v[i].x*v[i].x + v[i].y*v[i].y) - 2 * v[i].x * xsum - 2* v[i].y* ysum;\n        \n        if(sum < mnm ){\n            mnm = sum;\n            mnmind = i;\n        }\n        else if(mnm == sum){\n            mnmind = min(i,mnmind);\n        }\n\n    }\n    cout << v[mnmind].x << \" \" << v[mnmind].y;\n    nl;\n\n    \n    \n\n}\n\nint main()\n{\n\n    \n    fastio;\n    // start\n    li t;\n    cin>>t;\n    while(t--)\n    {\n        solve();\n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479959,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4312249",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981032,
        "updated_at_ms": 1599983432,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:26:57.147Z",
        "__v": 0
    },
    {
        "_id": "5f605eb8468ccc0964b0c2ce",
        "submission_code": "from math import log\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n==1:\n        print(0)\n    elif n==2:\n        print(1)\n    else:\n        n += 2\n        temp = int(log(n,2))\n        if (n&(n-1))==0:\n            temp = temp-1\n            \n        r = 2**(temp+1)-2\n        l = r-2**temp+1\n        diff = r-l+1\n        \n        n-=2\n        temp -=1\n        \n        if n<=l+diff//2-1:\n            print(2**temp)\n        else:\n            print(2**(temp+1))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479949,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3273904",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Sharanreddy",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981020,
        "updated_at_ms": 1599981020,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:27:04.496Z",
        "__v": 0
    },
    {
        "_id": "5f605ec0468ccc0964b0c2cf",
        "submission_code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll =long long int;\nvector<pair<ll,ll>>v;\nll xs,xsu,ys,ysu,mini;\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    ll t,n,p,q,x,y;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        p=INT_MAX;q=INT_MAX;\n        v.clear();\n        //s=0;\n        xs=0;\n        ys=0;\n        xsu=0;\n        ll w;\n        ysu=0;\n        mini=INT_MAX;\n        for(int i=0;i<n;i++)\n        {\n            cin>>x>>y;\n            v.push_back({x,y});\n            xs+=x;\n            ys+=y;\n            xsu+=(x*x);\n            ysu+=(y*y);\n        }\n        //cout<<xs<<' '<< ' '<<ys<< ' '<<xsu<<' '<<ysu<<\"\\n\";\n        for(int i=0;i<n;i++)\n        {\n           // cout<<\" p  \"<<v[i].first<<' '<<v[i].second<<\"\\n\";\n            w=n*v[i].first*v[i].first;\n            ll k=2*v[i].first;\n            k*=xs;\n            w-=k;\n            w+=xsu;\n            \n            w+=(n*v[i].second*v[i].second);\n            k=(2*v[i].second);\n            k*=ys;\n            w-=k;\n            w+=ysu;\n            \n            if(w<mini)\n            {\n                mini=w;\n                p=v[i].first;\n                q=v[i].second;\n            }\n           // cout<<' '<< w<<\"\\n\";\n        }\n        cout<<p<<' '<<q<<\"\\n\";\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479948,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2892432",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "17H51A05M7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599981019,
        "updated_at_ms": 1599982219,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:27:12.403Z",
        "__v": 0
    },
    {
        "_id": "5f605ec6468ccc0964b0c2d0",
        "submission_code": "import math\ndef get_gcd(x, y):\n         while(y):\n                  x, y = y, x % y\n         return x\nm=int(input())\nwhile m>0:\n         n=math.factorial(int(input()))\n         count = 0\n         for i in range(1, int(math.sqrt(n)) + 1) : \n                  if n % i == 0 and get_gcd(i, n // i) == 1 :  \n                                    count += 1\n         count=count%1000000007\n         print( count) \n         m-=1 \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479945,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4544619",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vallalasaivishw1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599981015,
        "updated_at_ms": 1599983415,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:27:18.752Z",
        "__v": 0
    },
    {
        "_id": "5f605ed0468ccc0964b0c2d1",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nlong long int fact(long long int a)\n{\n    if(a==1||a==0)\n        return 1;\n    else\n        return a%1000000007*fact(a-1)%1000000007;\n}\n\nint main() {\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int n,cnt=0;\n        scanf(\"%lld\",&n);\n        long long nf=fact(n)%1000000007;\n        for(long long i=1;i<n;i++)\n        {\n            if(nf%i==0)\n            {\n                if(__gcd((nf/i),i)==1)\n                    cnt++;\n            }\n        }\n        printf(\"%lld\\n\",cnt);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479934,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980995,
        "updated_at_ms": 1599988195,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:27:28.895Z",
        "__v": 0
    },
    {
        "_id": "5f605ed7468ccc0964b0c2d2",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\nclass solution{\npublic class int gcd(int a,int b) {\n    \n    if(b==0)\n        return a;\n    return (gcd(b,a%b));\n    \n}\n    public class int countpairs(int n)\n    {\n        int cnt=0;\n        for(int i=1; i<=n;i++)\n        {\n            int div1=i;\n            int div2=n/i;\n            int num=div1+div2;\n            \n            if(gcd(sum,n)==1)\n                cnt+=1;\n            \n        }\n    }\n    return cnt;\n} \n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n            n=sc.nextInt();\n        System.out.println(countpairs(n));\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479930,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9685839",
        "submission_status": "Compilation error",
        "submission_language": "java",
        "site_user_handle": "ballaramyasri441",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980989,
        "updated_at_ms": 1599982189,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T06:27:35.544Z",
        "__v": 0
    },
    {
        "_id": "5f605edf468ccc0964b0c2d3",
        "submission_code": "def SieveOfEratosthenes(n): \n    prime = [True for i in range(n + 1)] \n    p = 2\n    while (p * p <= n):  \n        if (prime[p] == True):  \n            for i in range(p * 2, n + 1, p): \n                prime[i] = False\n        p += 1\n    all_primes =[0,0]\n    for p in range(2,n + 1): \n        if(prime[p]==True):\n            all_primes.append(all_primes[-1]+1)\n        else:\n            all_primes.append(all_primes[-1])\n    return all_primes\n\nt=  int(input())\nprimes = SieveOfEratosthenes(1000000)\nfor _ in range(t):\n    n = int(input())\n    val = 2**(primes[n]-1)\n    print(val%1000000007)\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479926,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4312249",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980982,
        "updated_at_ms": 1599980982,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:27:43.646Z",
        "__v": 0
    },
    {
        "_id": "5f605ee7468ccc0964b0c2d4",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nlong long int prime[1000001]={0},a[1000001],m=1000000007;\nlong long int power(long long int x,long long int y) \n{ \n    if (y == 0) \n        return 1; \n    else if (y % 2 == 0) \n        return ((power(x, y / 2)%m) * (power(x, y / 2)%m))%m; \n    else\n        return ((x%m) * (power(x, y / 2)%m) * (power(x, y / 2)%m))%m; \n}\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    long long int i,j,x,t,n;\n    prime[1]=1;\n     for(i=2;i<=1000000;i++)\n     {\n        if(prime[i]==0)\n        {\n            for(j=2*i;j<=1000000;j+=i)\n            {\n                prime[j]=1;\n            }\n        }\n     }\n    a[0]=0;\n    a[1]=0;\n    for(i=2;i<=1000000;i++)\n    {\n        if(prime[i]==0)\n            a[i]=a[i-1]+1;\n        else\n            a[i]=a[i-1];\n    }\n    cin>>t;\n    while(t--){\n        cin>>n;\n        x=power(2,a[n]-1)%m;\n        cout<<x<<endl;\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479911,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7133320",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "logicalcoder9908",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980954,
        "updated_at_ms": 1599982154,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:27:51.745Z",
        "__v": 0
    },
    {
        "_id": "5f605ef0468ccc0964b0c2d5",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t,i,j,k,n,m,tt;\n    cin>>t;\n    tt=t;\n    while(t--)\n    {\n        cin>>n>>m;\n        vector<vector<char>> vi(n,vector<char>(m,' ')),vd(n,vector<char>(m,' ')),vl(n,vector<char>(m,' '));\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cin>>vi[i][j];\n            }\n        }\n        for(i=m-1;i>=0;i--)\n        {\n            vd[n-1][i]='R';\n            if(j!=m-1)\n            {if(vi[n-1][i+1]!=vl[n-1][i+1])\n            {\n                vl[n-1][i]=vi[n-1][i+1];\n            }\n            else\n                vl[n-1][i]=vl[n-1][i+1];}\n                \n        }\n        for(i=n-1;i>=0;i--)\n        {\n            vd[i][m-1]='D';\n            if(i!=n-1)\n            {if(vi[i+1][m-1]!=vl[i+1][m-1])\n            {\n                vl[i][m-1]=vi[i+1][m-1];\n            }\n            else\n                vl[i][m-1]=vl[i+1][m-1];}\n        }\n        \n        for(j=m-2;j>=0;j--)\n        {\n            for(i=n-2;i>=0;i--)\n            {\n                if(vi[i][j+1]<vi[i+1][j])\n                {\n                    vl[i][j]=vi[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else if(vi[i][j+1]>vi[i+1][j])\n                {\n                    vl[i][j]=vi[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                else\n                {\n                    if(vl[i][j+1]<vl[i+1][j])\n                {\n                    vl[i][j]=vl[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else\n                {\n                    vl[i][j]=vl[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                    \n                }\n            }\n        }\n        i=0;\n        j=0;\n        cout<<\"Case #\"<<tt-t<<\": \";\n        while(!(i==n-1&&j==m-1))\n        {\n            \n            if(vd[i][j]=='D')\n            {\n                cout<<'D';\n                i=i+1;\n                \n            }\n            else\n            {\n                cout<<'R';\n                j=j+1;\n                \n            }\n            \n        }\n        \n        /*for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cout<<vd[i][j]<<\" \";\n            }\n            cout<<endl;\n        }*/\n        \n        cout<<endl;\n            \n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479907,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599980948,
        "updated_at_ms": 1599988148,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:28:00.120Z",
        "__v": 0
    },
    {
        "_id": "5f605ef6468ccc0964b0c2d6",
        "submission_code": "#include<iostream>\n#include<bits/stdc++.h>\nusing namespace std;\n\n// C++ program to find\n// number of co-prime\n// pairs in array\n#include <bits/stdc++.h>\nusing namespace std;\n\n// function to check for gcd\nbool coprime(int a, int b)\n{\n\treturn (__gcd(a, b) == 1);\n}\n\n// Recursive function to\n// return gcd of a and b\nint numOfPairs(int arr[], int n,int sum)\n{\n\n\tint count = 0;\n\tfor (int i = 0; i < n - 1; i++)\n\t\tfor (int j = i + 1; j < n; j++)\n\t\t\tif (coprime(arr[i], arr[j]))\n\t\t\t\t{\n\t\t\t\t    if(arr[i]*arr[j]==sum)\n                        count++;\n\t\t\t\t }\n\treturn count;\n}\n\n// driver code\n\n\nint main(){\n    int t;\n    cin>>t;\n    for(int q=0;q<t;q++){\nint n;\ncin>>n;\nint sum=1;\n\nfor(int i=1;i<=n;i++)\n    sum=sum*i;\n    int fact[sum];\n\n    int temp = 1;\nint i=0;\n    while (temp <= sum)\n    {\n        if (not(sum % temp))\n           {\n\n            fact[i]=temp;\n\n\n\ni++;\n\n}\n        temp++;\n    }\n\n\tcout << numOfPairs(fact, i,sum);\n    cout<<\"\\n\";\n    }\nreturn 0 ;\n\n\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479899,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8372968",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "saishivamaddi2",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980941,
        "updated_at_ms": 1599980941,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:28:06.571Z",
        "__v": 0
    },
    {
        "_id": "5f605f01468ccc0964b0c2d7",
        "submission_code": "import java.io.*;\nimport java.util.*;\npublic class Solution {\n    public static int gcd(int a, int b) {   \n        int res=0;\n        for(int i = 1; i <= a && i <= b; ++i)\n        {\n            // Checks if i is factor of both integers\n            if(a % i==0 && b % i==0)\n                res = i;\n        }\n        return res;\n        \n    } \n    public static boolean coprime(int a, int b) { \n        return (gcd(a, b) == 1); \n    }  \n    public static int numOfPairs(ArrayList<Integer> arr, int n,int res){            \n        int count = 0;  \n        for (int i = 0; i < n - 1; i++){\n            for (int j = i + 1; j < n; j++) {\n                //System.out.println(\"Factors: \"+arr.get(i)+\" \"+arr.get(j));\n                if (coprime(arr.get(i), arr.get(j)) && arr.get(i)*arr.get(j)==res){\n                    count++;\n                    //System.out.println(\"Here\");\n                }\n            }\n        }\n        return count; \n    } \n    public static void main(String[] args) throws IOException{\n        int ans=0;\n        BufferedReader sc =  \n                   new BufferedReader(new InputStreamReader(System.in));\n        int t=Integer.parseInt(sc.readLine());\n        for(int i=0;i<t;i++){\n            int n=Integer.parseInt(sc.readLine());\n            int fact=1;\n            for(int j=1;j<n+1;j++){\n                fact*=j;\n            }\n            ArrayList<Integer> list=new ArrayList<Integer>();\n            for(int k=1;k<fact+1;k++){\n                if(fact%k==0)\n                    list.add(k);\n            }\n            //System.out.println(list);\n            ans=numOfPairs(list,list.size(),fact);   \n            System.out.println(ans);\n            }\n        }\n    }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479872,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980905,
        "updated_at_ms": 1599990505,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:28:17.220Z",
        "__v": 0
    },
    {
        "_id": "5f605f0b468ccc0964b0c2d8",
        "submission_code": "\nt=int(input())\nx_list=[]\ny_list=[]\nL=[]\n\n\n# Example points in 3-dimensional space...\n\n#distance = sum([(a - b) ** 2 for a, b in zip(x, y)])\nSum_xy=0\ndist_x=0\ndist_y=0\nfor i in range(t):\n  n=int(input())\n  for j in range(n):\n    x,y=input().split()\n    x_list.append(x)\n    y_list.append(y)\n    x_list=map(int,x_list)\n    y_list=map(int,y_list)\n    for x_item in x_list:\n        for x_item1 in x_list:\n          dist_x=sum((x_item-x_item1)**2)\n    for y_item in y_list:\n      for y_item1 in y_list:\n        dist_y=sum((y_item-y_item1)**2)\n    Sum_xy=dist_x+dist_y\n    print(Sum_xy)\n    \n    \n    \n    \n    \n  \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479871,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "3723415",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "manojkumarreddy4",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980905,
        "updated_at_ms": 1599980905,
        "misc_notes": "[\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:28:27.252Z",
        "__v": 0
    },
    {
        "_id": "5f605f10468ccc0964b0c2d9",
        "submission_code": "import math     \nn=int(input())\nlst=[]\nfor i in range(0,n):\n    a=int(input())\n    b=math.factorial(a)\n    c=1\n    for j in range(1,b):\n        for k in range(j,b):\n            if(math.gcd(i,j)==1):\n                if(j*k==b):\n                    c=c+1\n    lst.append(c)\nd=len(lst)\nfor i in range(0,d):\n    d=lst[i]\n    print(d)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479862,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4623005",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980896,
        "updated_at_ms": 1599988096,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:28:32.989Z",
        "__v": 0
    },
    {
        "_id": "5f605f1b468ccc0964b0c2da",
        "submission_code": "import math\nm=int(input())\nwhile m>0:\n         n=int(input())\n         n=math.factorial(n)\n         count = 0\n         for i in range(1, int(math.sqrt(n)) + 1) : \n                  if n % i == 0 and math.gcd(i, n // i) == 1 :  \n                                    count += 1\n         count=count%1000000007\n         print( count) \n         m-=1 \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479855,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4544619",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vallalasaivishw1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980888,
        "updated_at_ms": 1599982088,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:28:43.214Z",
        "__v": 0
    },
    {
        "_id": "5f605f21468ccc0964b0c2db",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nint sum[1000000+1];\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    // memset(sum, 1, sizeof(sum)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n            {   prime[i] = false;\n            }\n        } \n    }\n    sum[0]=sum[1]=0;\n    sum[2]=1;\n    for(int i=3;i<=n;i++ ){\n        if(prime[i]){\n            sum[i]=1;\n        }else\n            sum[i]=0;\n        sum[i]=sum[i-1]+sum[i];\n    }\n}\n\nint main() {\n    ll int t,n;\n     ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<0<<\"\\n\";\n        else{\n             ll int r=sum[n];\n            r-=1;\n            ll int ans=pow(2,r);\n            ans=(ans%mod);\n            cout<<ans<<\"\\n\";\n        }\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479846,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5620816",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "Navanbairisetty1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980877,
        "updated_at_ms": 1599984477,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:28:49.679Z",
        "__v": 0
    },
    {
        "_id": "5f605f27468ccc0964b0c2dc",
        "submission_code": "def gcd(a,b):\n    while b != 0:\n        a, b = b, a%b\n    return a\n\ndef is_coprime(x, y):\n    return gcd(x, y) == 1\n\ndef factors(num):\n    f=[]\n    for i in range(1,num+1):\n        if num%i==0:\n            f.append(i)\n    return f\n\nT = int(input(\"\"))\nfor i in range(T):\n    num = int(input(\"\"))\n    factorial = 1\n    for k in range(1, num + 1):\n        factorial = factorial * k\n    final_list = []\n    fac_list = factors(factorial)\n    fac_list_rev = fac_list\n    for j in range(0, int(len(fac_list) / 2)):\n        temp = []\n        x = fac_list[j]\n        y = fac_list[(len(fac_list)-j - 1)]\n        if is_coprime(x,y):\n            temp.append(x)\n            temp.append(y)\n            final_list.append(temp)\n    print(len(final_list))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479831,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2804281",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vishalrajg22",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980853,
        "updated_at_ms": 1599982053,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:28:55.721Z",
        "__v": 0
    },
    {
        "_id": "5f605f2d468ccc0964b0c2dd",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nint sum[1000000+1];\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    // memset(sum, 1, sizeof(sum)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n            {   prime[i] = false;\n            }\n        } \n    }\n    sum[0]=sum[1]=0;\n    sum[2]=1;\n    for(int i=3;i<=n;i++ ){\n        if(prime[i]){\n            sum[i]=1;\n        }else\n            sum[i]=0;\n        sum[i]=sum[i-1]+sum[i];\n    }\n}\n\nint main() {\n    ll int t,n;\n     ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<1<<\"\\n\";\n        else{\n             ll int r=sum[n];\n            r-=1;\n            ll int ans=pow(2,r);\n            ans=(ans%mod);\n            cout<<ans<<\"\\n\";\n        }\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479829,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5620816",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "Navanbairisetty1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980844,
        "updated_at_ms": 1599983244,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:29:01.864Z",
        "__v": 0
    },
    {
        "_id": "5f605f38468ccc0964b0c2de",
        "submission_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        CP sc = new CP();\n        sieveOfEratosthenes();\n        int tt = sc.nextInt();\n        while (tt-- > 0) {\n            int n = sc.nextInt();\n            System.out.println(A[n]);\n        }\n    }\n\n    static long[] A = new long[100001];\n    static boolean[] prime = new boolean[100001];\n\n    static void sieveOfEratosthenes() {\n        for (int i = 0; i < 100000; i++)\n            prime[i] = true;\n\n        for (int p = 2; p * p <= 100000; p++) {\n            if (prime[p]) {\n                for (int i = p * p; i <= 100000; i += p)\n                    prime[i] = false;\n            }\n        }\n        A[1] = 0;\n        A[2] = 1;\n        for (int i = 3; i < 100000; i++) {\n            if (prime[i]) {\n                A[i] = (2 * A[i - 1]) % 1000000007;\n            } else {\n                A[i] = A[i - 1];\n            }\n        }\n    }\n\n    /*****************************************************************************/\n    static class CP {\n        BufferedReader bufferedReader;\n        StringTokenizer stringTokenizer;\n\n        public CP() {\n            bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        int nextInt() {\n            return Integer.parseInt(NNNN());\n        }\n\n        long nextLong() {\n            return Long.parseLong(NNNN());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(NNNN());\n        }\n\n        String NNNN() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreElements()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        String nextLine() {\n            String spl = \"\";\n            try {\n                spl = bufferedReader.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return spl;\n        }\n    }\n    /*****************************************************************************/\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479817,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6761071",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "shreyansh_shrey1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980834,
        "updated_at_ms": 1599984434,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:29:12.206Z",
        "__v": 0
    },
    {
        "_id": "5f605f42468ccc0964b0c2df",
        "submission_code": "def argmin(pt, x_arr, y_arr):\n    argmin = 0\n    for i in range(0, len(x_arr)):\n        argmin = argmin + (((pt[0] - x_arr[i]) * (pt[0] - x_arr[i])) + ((pt[1] - y_arr[i]) * (pt[1] - y_arr[i])))\n    return argmin\n\ndef process(pts):\n    x_arr = []\n    y_arr = []\n    for i in range(0, len(pts)):\n        x_arr.append(pts[i][0])\n        y_arr.append(pts[i][1])\n    arg_val_list = []\n    arg = []\n    for i in range(0,len(pts)):\n        temp = []\n        val = argmin(pts[i], x_arr, y_arr)\n        temp.append(pts[i])\n        temp.append(val)\n        arg.append(val)\n        arg_val_list.append(temp)\n    #print(arg)\n    for i in range(0, len(arg)):\n        if arg[i] == min(arg):\n            return pts[i] , arg[i]\n\nT=int(input(\"\"))\ntest_list=[]\nfor i in range(T):\n    pt_li = []\n    pt_ct = int(input(\"\"))\n    for j in range(pt_ct):\n        pt = input(\"\")\n        li = list(pt.split(\" \"))\n        pt_li.append(li)\n    test_list.append(pt_li)\n\nfor i in range(0, len(test_list)):\n    for j in range(0, len(test_list[i])):\n        for k in range(0, len(test_list[i][j])):\n            test_list[i][j][k] = int(test_list[i][j][k])\nval_list = []\nfor i in range(0, len(test_list)):\n    val_list.append(process(test_list[i]))\nfor i in range(0, len(val_list)):\n    print(val_list[i][0][0],val_list[i][0][1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479808,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9633653",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "geetikaagarwal22",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980830,
        "updated_at_ms": 1599982030,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:29:22.650Z",
        "__v": 0
    },
    {
        "_id": "5f605f4c468ccc0964b0c2e0",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n   static int gcd(int a,int b){\n        if(b==0)return a;\n        a=a%b;\n        return gcd(b,a);\n    }\n     static int fac(int n){\n         int f=1;\n         if(n==0)\n             return 1;\n         else {\n             for(int i=1;i<=n;i++)\n                 f*=i;\n         }\n             return f;\n     }\n    static List<Integer> factor(int fac){\n        int count=0;\n        List<Integer> list=new ArrayList<Integer>();\n        for(int i=1;i<=fac;i++){\n            if(fac%i==0){\n                list.add(i);\n            }\n        }\n        return list;\n    }\n\n\n    \n    \n    \n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    Scanner sc=new Scanner(System.in);\n      int n=sc.nextInt();\n      while(n!=0){\n          int count=1;\n          int x=sc.nextInt();\n          int factorial=fac(x);\n         // System.out.println(factorial);\n          List<Integer> res;\n          res=factor(factorial);\n          for(int i:res){\n                                int a=i;\n                  int b=(int)factorial/a;\n                  int result=gcd(a,b);\n               //  System.out.println(result+\" \"+a+\" \"+b+\" \"+x);\n                  if(result==1){\n                      count++;\n                  }\n          }\n          //System.out.println(factors);\n         /* for(int i=2;i<factorial/factors;i++){\n              if(factorial%i==0){\n                  int a=i;\n                  int b=(int)factorial/a;\n                  int result=gcd(a,b);\n               //  System.out.println(result+\" \"+a+\" \"+b+\" \"+x);\n                  if(result==1){\n                      count++;\n                  }\n              }\n          }*/\n\n          System.out.println(count/2);\n          n--;\n      }\n\n    \n    \n    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479791,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6547357",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "ashrithareddy8",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980801,
        "updated_at_ms": 1599985601,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:29:32.480Z",
        "__v": 0
    },
    {
        "_id": "5f605f56468ccc0964b0c2e1",
        "submission_code": "def argmin(pt, x_arr, y_arr):\n    argmin = 0\n    for i in range(0, len(x_arr)):\n        argmin = argmin + (((pt[0] - x_arr[i]) * (pt[0] - x_arr[i])) + ((pt[1] - y_arr[i]) * (pt[1] - y_arr[i])))\n    return argmin\n\ndef process(pts):\n    x_arr = []\n    y_arr = []\n    for i in range(0, len(pts)):\n        x_arr.append(pts[i][0])\n        y_arr.append(pts[i][1])\n    arg_val_list = []\n    arg = []\n    for i in range(0,len(pts)):\n        temp = []\n        val = argmin(pts[i], x_arr, y_arr)\n        temp.append(pts[i])\n        temp.append(val)\n        arg.append(val)\n        arg_val_list.append(temp)\n    #print(arg)\n    for i in range(0, len(arg)):\n        if arg[i] == min(arg):\n            return pts[i] , arg[i]\n\nT=int(input(\"\"))\ntest_list=[]\nfor i in range(T):\n    pt_li = []\n    pt_ct = int(input(\"\"))\n    for j in range(pt_ct):\n        pt = input(\"\")\n        li = list(pt.split(\" \"))\n        pt_li.append(li)\n    test_list.append(pt_li)\n\nfor i in range(0, len(test_list)):\n    for j in range(0, len(test_list[i])):\n        for k in range(0, len(test_list[i][j])):\n            test_list[i][j][k] = int(test_list[i][j][k])\nval_list = []\nfor i in range(0, len(test_list)):\n    val_list.append(process(test_list[i]))\nfor i in range(0, len(val_list)):\n    print(val_list[i][0][0],val_list[i][0][1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479760,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9633653",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "geetikaagarwal22",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980752,
        "updated_at_ms": 1599980752,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:29:42.208Z",
        "__v": 0
    },
    {
        "_id": "5f605f5d468ccc0964b0c2e2",
        "submission_code": "#include <bits/stdc++.h>\n// #include <boost/multiprecision/cpp_int.hpp>\nusing namespace std;\n\n#define int long long\n#define all(v) v.begin(), v.end()\n#define endl   '\\n'\n\nconst int mod = 1e9 + 7;\n\nconst int N = 1000005;\n\nint _fNI[N + 1] = {1, 1};\nint _nNI[N + 1] = {1, 1};\nint fact[N + 1] = {1, 1};\n\nint nCr(int n, int r) {\n    return ((fact[n] * _fNI[r]) % mod * _fNI[n - r]) % mod;\n}\n\nsigned main() {\n    for (int i = 2; i <= N; i++) {\n        _nNI[i] = _nNI[mod % i] * (mod - mod / i) % mod;\n        _fNI[i] = (_nNI[i] * _fNI[i - 1]) % mod;\n        fact[i] = (fact[i - 1] * i) % mod;\n    }\n\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    if (fopen(\"in.txt\", \"r\"))\n        freopen(\"in.txt\", \"r\", stdin);\n\n    int t;\n    cin >> t;\n    while (t--) {\n        int x, y, x1, y1, x2, y2;\n        cin >> x >> y >> x1 >> y1 >> x2 >> y2;\n\n        int ans = nCr(x + y, x) -\n                  nCr(x1 + y1, x1) * nCr(x - x1 + y - y1, x - x1) -\n                  nCr(x2 + y2, x2) * nCr(x - x2 + y - y2, x - x2) +\n                  min(nCr(x1 + y1, x1), nCr(x - x1 + y - y1, x - x1)) *\n                      min(nCr(x2 + y2, x2), nCr(x - x2 + y - y2, x - x2)) *\n                      nCr(x2 - x1 + y2 - y1, x2 - x1);\n\n        cout << ans;\n\n        cout << endl;\n    }\n\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479758,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4669945",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "160218733078CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599980750,
        "updated_at_ms": 1599980750,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:29:49.069Z",
        "__v": 0
    },
    {
        "_id": "5f605f62468ccc0964b0c2e3",
        "submission_code": "def argmin(pt, x_arr, y_arr):\n    argmin = 0\n    for i in range(0, len(x_arr)):\n        argmin = argmin + (((pt[0] - x_arr[i]) * (pt[0] - x_arr[i])) + ((pt[1] - y_arr[i]) * (pt[1] - y_arr[i])))\n    return argmin\n\ndef process(pts):\n    x_arr = []\n    y_arr = []\n    for i in range(0, len(pts)):\n        x_arr.append(pts[i][0])\n        y_arr.append(pts[i][1])\n    arg_val_list = []\n    arg = []\n    for i in range(0,len(pts)):\n        temp = []\n        val = argmin(pts[i], x_arr, y_arr)\n        temp.append(pts[i])\n        temp.append(val)\n        arg.append(val)\n        arg_val_list.append(temp)\n    #print(arg)\n    for i in range(0, len(arg)):\n        if arg[i] == min(arg):\n            return pts[i] , arg[i]\n\nT=int(input(\"\"))\ntest_list=[]\nfor i in range(T):\n    pt_li = []\n    pt_ct = int(input(\"\"))\n    for j in range(pt_ct):\n        pt = input(\"\")\n        li = list(pt.split(\" \"))\n        pt_li.append(li)\n    test_list.append(pt_li)\n\nfor i in range(0, len(test_list)):\n    for j in range(0, len(test_list[i])):\n        for k in range(0, len(test_list[i][j])):\n            test_list[i][j][k] = int(test_list[i][j][k])\nval_list = []\nfor i in range(0, len(test_list)):\n    val_list.append(process(test_list[i]))\nfor i in range(0, len(val_list)):\n    print(val_list[i][0][0],val_list[i][0][1])\n\n\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479756,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2804281",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vishalrajg22",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980749,
        "updated_at_ms": 1599980749,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:29:54.945Z",
        "__v": 0
    },
    {
        "_id": "5f605f69468ccc0964b0c2e4",
        "submission_code": "/*\n _     _                             \n| |__ | |__   __ _  __ _ _   _  __ _ \n| '_ \\| '_ \\ / _` |/ _` | | | |/ _` |\n| |_) | | | | (_| | (_| | |_| | (_| |\n|_.__/|_| |_|\\__,_|\\__, |\\__, |\\__,_|\n                   |___/ |___/       \n*/\n#include<bits/stdc++.h>\n\n#define ll          long long\n#define pb          push_back\n#define ppb         pop_back\n#define BigInt      __int128\n#define endl        '\\n'\n#define mii         map<ll int,ll int>\n#define pii         pair<ll int,ll int>\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define hell        1000000007\n#define sim         template < class c\n#define ris         return * this\n#define dor         > debug & operator <<\n#define eni(x)      sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\n\nusing namespace std;\n\nsim > struct rge {c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cout << *x, 0);\nsim > char dud(...);\nstruct debug \n{\n    ~debug() \n    { \n        cout<<endl; \n    }\n    eni(!=) cout << boolalpha << i; ris; }\n    eni(==) ris << range(begin(i), end(i)); }\n    sim, class b dor(pair < b, c > d) \n    {\n        ris << \"(\" << d.first << \", \" << d.second << \")\";\n    }\n    sim dor(rge<c> d) \n    {\n          *this << \"[\";\n          for (auto it = d.b; it != d.e; ++it)\n            *this << \", \" + 2 * (it == d.b) << *it;\n          ris << \"]\";\n    }\n};\n#define fuck(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define N  205\n\nstruct BipartiteMatcher {\n  vector<vector<int>> G;\n  vector<int> L, R, Viz;\n  \n  BipartiteMatcher(int n, int m) :\n  G(n), L(n, -1), R(m, -1), Viz(n) {}\n  \n  void AddEdge(int a, int b) {\n    G[a].push_back(b);\n  }\n  \n  bool Match(int node) {\n    if (Viz[node])\n      return false;\n    Viz[node] = true;\n    \n    for (auto vec : G[node]) {\n      if (R[vec] == -1) {\n        L[node] = vec;\n        R[vec] = node;\n        return true;\n      }\n    }\n    \n    for (auto vec : G[node]) {\n      if (Match(R[vec])) {\n        L[node] = vec;\n        R[vec] = node;\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  int Solve() {\n    int ok = true;\n    while (ok--) {\n      fill(Viz.begin(), Viz.end(), 0);\n      for (int i = 0; i < (int)L.size(); ++i)\n        if (L[i] == -1)\n          ok |= Match(i);\n    }\n    \n    int ret = 0;\n    for (int i = 0; i < L.size(); ++i)\n      ret += (L[i] != -1);\n    return ret;\n  }\n};\n\nint n, m;\n\nbool vis[N][N];\n\nint id[N][N];\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int TESTS=1;\n    cin>>TESTS;\n    ll int tt = 0;\n    while(TESTS--)\n    {\n        cin >> n >> m;\n        for(int i = 0; i <= n + 2; i++)\n        {\n            for(int j = 0; j <= n + 2; j++)\n            {\n                vis[i][j] = false;\n                id[i][j] = -1;\n            }\n        }\n        for(int i = 1; i <= m; i++)\n        {\n            int x, y;\n            cin >> x >> y;\n            vis[x][y] = true;\n        }\n        int cnt = 0;\n        for(ll int i = 1; i <= n; i++)\n        {\n            for(ll int j = 1; j <= n; j++)\n            {\n                if(!vis[i][j])\n                {\n                    id[i][j] = cnt++;\n                }\n            }\n        }\n        vector<pii> edges;\n        for(int i = 1; i <= n; i++)\n        {\n            for(int j = 1; j <= n; j++)\n            {\n                if((i + j) % 2 == 0 && id[i][j] != -1)\n                {\n                    if(i + 2 <= n && j + 1 <= n && id[i + 2][j + 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 2][j + 1]});\n                    }\n                    if(i - 2 >= 1 && j + 1 <= n && id[i - 2][j + 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 2][j + 1]});\n                    }\n                    if(i + 2 <= n && j - 1 >= 1 && id[i + 2][j - 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 2][j - 1]});\n                    }\n                    if(i - 2 >= 1 && j - 1 >= 1 && id[i - 2][j - 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 2][j - 1]});\n                    }\n\n                    if(i + 1 <= n && j + 2 <= n && id[i + 1][j + 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 1][j + 2]});\n                    }\n                    if(i - 1 >= 1 && j + 2 <= n && id[i - 1][j + 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 1][j + 2]});\n                    }\n                    if(i + 1 <= n && j - 2 >= 1 && id[i + 1][j - 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 1][j - 2]});\n                    }\n                    if(i - 1 >= 1 && j - 2 >= 1 && id[i - 1][j - 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 1][j - 2]});\n                    }\n                }\n            }\n        }\n        // for(ll int i = 1; i <= n; i++)\n        // {\n        //     for(ll int j = 1; j <= n; j++)\n        //     {\n        //         cout << id[i][j] << \" \";\n        //     }\n        //     cout << endl;\n        // }\n        // debug() << fuck(edges) ;\n        BipartiteMatcher bm(cnt, edges.size());\n        for(auto it : edges)\n        {\n            bm.AddEdge(it.F, it.S);\n        }\n        int mm = bm.Solve();\n        int mvc = mm;\n        int is = cnt - mvc;\n        cout << \"Case #\" << ++tt << \": \";\n        cout << is << endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479755,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599980747,
        "updated_at_ms": 1599983147,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:30:01.765Z",
        "__v": 0
    },
    {
        "_id": "5f605f6f468ccc0964b0c2e5",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n     int t;\n    scanf(\"%d\",&t);\n        for(int i=0;i<t;i++)\n        {\n            int n;\n            scanf(\"%d\",&n);\n            int a[n];\n            int b[n];\n            for(int j=0;j<n;j++)\n            {\n                scanf(\"%d\",&a[j]);\n                scanf(\"%d\",&b[j]);\n            }\n            int f1=0;\n            int x=0,y=0;\n            for(int k=0;k<n;k++)\n            {\n                int f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+pow((a[k]-a[j]),2);\n                    f2=f2+pow((b[k]-b[j]),2);\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            printf(\"%d %d\\n\",x,y);\n        }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479753,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980738,
        "updated_at_ms": 1599986738,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:30:07.500Z",
        "__v": 0
    },
    {
        "_id": "5f605f78468ccc0964b0c2e6",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n         public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc= new Scanner(System.in);\n         int t=sc.nextInt();\n        for(int k=0;k<t;k++){\n        int n=sc.nextInt();\n        ArrayList<Integer> x = new ArrayList<>();\n        ArrayList<Integer> y = new ArrayList<>();\n        ArrayList<Integer> f1 = new ArrayList<>();\n        for(int i=0;i<n;i++){\n            x.add(sc.nextInt());\n            y.add(sc.nextInt());\n        }\n       // System.out.println(x+\" \"+y);\n        int f=0;\n        int min1=99999;\n        for(int j=1;j<=n;j++){\n            f=0;\n        for(int i=1;i<=n;i++){\n            f=f+(int)Math.pow(Math.abs(x.get(j-1)-x.get(i-1)),2)+(int)Math.pow(Math.abs(y.get(j-1)-y.get(i-1)),2);\n        }\n            if(f<min1) {\n                min1=f;\n            }\n            f1.add(f);\n         }\n        int ind=f1.indexOf(min1);\n        System.out.println(x.get(ind)+\" \"+y.get(ind));\n        \n        }\n    }\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479751,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "8984118",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "hamsiniparimala1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980738,
        "updated_at_ms": 1599985538,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:30:16.738Z",
        "__v": 0
    },
    {
        "_id": "5f605f7f468ccc0964b0c2e7",
        "submission_code": "import math as mt\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    lx=[]\n    ly=[]\n    s=0\n    qw=0\n    for i in range(n):\n        x,y=map(int,input().split())\n        lx.append((x,y))\n    lx.sort()\n    m=10**20\n    for i in lx:\n        s=0\n        for j in lx:\n            s+=(i[0]-j[0])**2+(i[1]-j[1])**2\n        if(s<m):\n            ans1,ans2=i[0],i[1]\n            m=s\n    print(ans1,ans2)\n        \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479749,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2801145",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980735,
        "updated_at_ms": 1599981935,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:30:23.187Z",
        "__v": 0
    },
    {
        "_id": "5f605f86468ccc0964b0c2e8",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Solution {\n    \n     \n    \n    \n    static long g(long s, long d)\n    {\n        while(s !=0 && d!=0)\n        {\n            if(s>=d)\n                s=s%d;\n            else\n                d=d%s;\n        }\n        if(s>d)return s;\n        else\n            return d;\n    }\n    static int countp(long n)\n    {\n        int count=0;\n        for(int ii=2;ii<=Math.sqrt(n);ii++)\n        {\n            if(n%ii==0){\n                if(ii == n/ii)\n                    continue;\n                if(g(ii,n/ii)==1)\n                    count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        long[] fact=new long[]{ 1 ,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600} ;\n        for(int i=0;i<N;i++)\n        {\n            int n=sc.nextInt();\n            System.out.println((countp(fact[n-1]))+1);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479745,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6636583",
        "submission_status": "Runtime Error",
        "submission_language": "java",
        "site_user_handle": "ramyasreesai2000",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980730,
        "updated_at_ms": 1599985530,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:30:30.037Z",
        "__v": 0
    },
    {
        "_id": "5f605f8e468ccc0964b0c2e9",
        "submission_code": "/*\n _     _                             \n| |__ | |__   __ _  __ _ _   _  __ _ \n| '_ \\| '_ \\ / _` |/ _` | | | |/ _` |\n| |_) | | | | (_| | (_| | |_| | (_| |\n|_.__/|_| |_|\\__,_|\\__, |\\__, |\\__,_|\n                   |___/ |___/       \n*/\n#include<bits/stdc++.h>\n\n#define ll          long long\n#define pb          push_back\n#define ppb         pop_back\n#define BigInt      __int128\n#define endl        '\\n'\n#define mii         map<ll int,ll int>\n#define pii         pair<ll int,ll int>\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define hell        1000000007\n#define sim         template < class c\n#define ris         return * this\n#define dor         > debug & operator <<\n#define eni(x)      sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\n\nusing namespace std;\n\nsim > struct rge {c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cout << *x, 0);\nsim > char dud(...);\nstruct debug \n{\n    ~debug() \n    { \n        cout<<endl; \n    }\n    eni(!=) cout << boolalpha << i; ris; }\n    eni(==) ris << range(begin(i), end(i)); }\n    sim, class b dor(pair < b, c > d) \n    {\n        ris << \"(\" << d.first << \", \" << d.second << \")\";\n    }\n    sim dor(rge<c> d) \n    {\n          *this << \"[\";\n          for (auto it = d.b; it != d.e; ++it)\n            *this << \", \" + 2 * (it == d.b) << *it;\n          ris << \"]\";\n    }\n};\n#define fuck(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define N  205\n\nstruct BipartiteMatcher {\n  vector<vector<int>> G;\n  vector<int> L, R, Viz;\n  \n  BipartiteMatcher(int n, int m) :\n  G(n), L(n, -1), R(m, -1), Viz(n) {}\n  \n  void AddEdge(int a, int b) {\n    G[a].push_back(b);\n  }\n  \n  bool Match(int node) {\n    if (Viz[node])\n      return false;\n    Viz[node] = true;\n    \n    for (auto vec : G[node]) {\n      if (R[vec] == -1) {\n        L[node] = vec;\n        R[vec] = node;\n        return true;\n      }\n    }\n    \n    for (auto vec : G[node]) {\n      if (Match(R[vec])) {\n        L[node] = vec;\n        R[vec] = node;\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  int Solve() {\n    int ok = true;\n    while (ok--) {\n      fill(Viz.begin(), Viz.end(), 0);\n      for (int i = 0; i < (int)L.size(); ++i)\n        if (L[i] == -1)\n          ok |= Match(i);\n    }\n    \n    int ret = 0;\n    for (int i = 0; i < L.size(); ++i)\n      ret += (L[i] != -1);\n    return ret;\n  }\n};\n\nint n, m;\n\nbool vis[N][N];\n\nint id[N][N];\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int TESTS=1;\n    cin>>TESTS;\n    ll int tt = 0;\n    while(TESTS--)\n    {\n        cout << \"Case #\" << ++tt << \": \";\n        cin >> n >> m;\n        for(int i = 0; i < N; i++)\n        {\n            for(int j = 0; j < N; j++)\n            {\n                vis[i][j] = false;\n                id[i][j] = -1;\n            }\n        }\n        for(int i = 1; i <= m; i++)\n        {\n            int x, y;\n            cin >> x >> y;\n            vis[x][y] = true;\n        }\n        int cnt = 0;\n        for(ll int i = 1; i <= n; i++)\n        {\n            for(ll int j = 1; j <= n; j++)\n            {\n                if(!vis[i][j])\n                {\n                    id[i][j] = cnt++;\n                }\n            }\n        }\n        vector<pii> edges;\n        for(int i = 1; i <= n; i++)\n        {\n            for(int j = 1; j <= n; j++)\n            {\n                if((i + j) % 2 == 0 && id[i][j] != -1)\n                {\n                    if(i + 2 <= n && j + 1 <= n && id[i + 2][j + 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 2][j + 1]});\n                    }\n                    if(i - 2 >= 1 && j + 1 <= n && id[i - 2][j + 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 2][j + 1]});\n                    }\n                    if(i + 2 <= n && j - 1 >= 1 && id[i + 2][j - 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 2][j - 1]});\n                    }\n                    if(i - 2 >= 0 && j - 1 >= 1 && id[i - 2][j - 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 2][j - 1]});\n                    }\n\n                    if(i + 1 <= n && j + 2 <= n && id[i + 1][j + 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 1][j + 2]});\n                    }\n                    if(i - 1 >= 1 && j + 2 <= n && id[i - 1][j + 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 1][j + 2]});\n                    }\n                    if(i + 1 <= n && j - 2 >= 1 && id[i + 1][j - 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 1][j - 2]});\n                    }\n                    if(i - 1 >= 1 && j - 2 >= 1 && id[i - 1][j - 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 1][j - 2]});\n                    }\n                }\n            }\n        }\n        if(cnt == 0)\n        {\n            cout << 0 << endl;\n            continue;\n        }\n        BipartiteMatcher bm(cnt, edges.size());\n        for(auto it : edges)\n        {\n            bm.AddEdge(it.F, it.S);\n        }\n        int MaximumMatching = bm.Solve();\n        int MinimumVertexCover = MaximumMatching;\n        int MaximumIndependentSet = cnt - MinimumVertexCover;\n        cout << MaximumIndependentSet << endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479744,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599980730,
        "updated_at_ms": 1599981930,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:30:38.737Z",
        "__v": 0
    },
    {
        "_id": "5f605f98468ccc0964b0c2ea",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int t,n,m,i,j,a,r,c;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&n,&m);\n        if(n%2==0)\n            a=n *(n/2);\n        else{\n            a=n *(n/2);\n            a=a+ (n/2)+1;\n        }\n        for(j=0;j<m;j++)\n        {\n            scanf(\"%d %d\",&r,&c);\n            if((r+c)%2==0)\n                a--; \n        }\n        printf(\"Case #%d: \",i+1);\n        printf(\"%d\\n\",a);\n    }    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479741,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "5093044",
        "submission_status": "Wrong Answer",
        "submission_language": "c",
        "site_user_handle": "160218737004ITA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599980725,
        "updated_at_ms": 1599980725,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:30:48.886Z",
        "__v": 0
    },
    {
        "_id": "5f605fa3468ccc0964b0c2eb",
        "submission_code": "T=int(input())\nfor _ in range(T):\n    x=[int(a) for a in input().split()]\n    ck=[[x[2],x[3]],[x[4],x[5]]]\n    dp=[[1 for i in range(x[0]+1)] for j in range(x[1]+1)]\n    dp[x[1]-x[3]][x[2]]=0\n    dp[x[1]-x[5]][x[4]]=0\n    i=x[1]-1\n    while(i>=0):\n        for j in range(1,x[0]+1):\n            if(dp[i][j]==0):\n                dp[i][j]=0\n                continue\n            dp[i][j]=dp[i+1][j]+dp[i][j-1]\n        i-=1\n    print(dp[0][x[0]])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479737,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "6986737",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "vegishanmukh7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599980722,
        "updated_at_ms": 1599981922,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:30:59.137Z",
        "__v": 0
    },
    {
        "_id": "5f605faa468ccc0964b0c2ec",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\nclass cor{\n    int x;\n    int y;\n    cor(int i,int j)\n    {\n        x=i;\n        y=j;\n    }\n    cor()\n    {\n        \n    }\n}\n\npublic class Solution {\n    \n    static cor cordinate(ArrayList<cor> list)\n    {\n        cor ret = new cor();\n        int min=999999;\n        for(cor c: list)\n        {\n            int sum = 0;\n            for(cor d: list)\n            {\n                sum=sum+(((c.x-d.x)(c.x-d.x))+((c.y-d.y)(c.y-d.y)));\n            }\n            if(sum<min)\n            {\n                min=sum;\n                ret.x=c.x;\n                ret.y=c.y;\n            }\n            else if(sum==min)\n            {\n                if(c.x<ret.x)\n                {\n                    ret.x=c.x;\n                    ret.y=c.y;\n                }\n                else if(c.x == ret.x)\n                {\n                    if(c.y<ret.y)\n                    {\n                        ret.x=c.x;\n                        ret.y=c.y;\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scn = new Scanner(System.in);\n        int notest=scn.nextInt();\n        for(int i=0;i<notest;i++)\n        {\n            int n=scn.nextInt();\n            ArrayList<cor> list = new ArrayList<cor>();\n            int a,b;\n            for(int j=0;j<n;i++)\n            {\n                a=scn.nextInt();\n                b=scn.nextInt();\n                list.add(new cor(a,b));\n            }\n            cor val=cordinate(list);\n            System.out.println(val.x+\" \"+val.y);\n        }\n        scn.close();\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479729,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4679580",
        "submission_status": "Compilation error",
        "submission_language": "java",
        "site_user_handle": "160218733021CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980713,
        "updated_at_ms": 1599980713,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T06:31:06.586Z",
        "__v": 0
    },
    {
        "_id": "5f605fb2468ccc0964b0c2ed",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n#define mod 1000000007\n\nunsigned long long power(int x,unsigned long long y)  \n{  \n    unsigned long long temp;  \n    if(y == 0)  \n        return 1;  \n    temp = power(x, y / 2)%mod;  \n    if (y % 2 == 0)  \n        return (temp * temp)%mod;  \n    else\n    {  \n        if(y > 0)  \n            return (x * temp * temp)%mod;  \n        else\n            return ((temp * temp) / x)%mod;  \n    }  \n}\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    long long t,n,i,j,prime[1000009],c=0;\n    cin>>t;\n    for(i=1;i<=1000005;i++){\n        prime[i]=1;\n    }\n    for(i=2;i<=1000005;i++){\n        if(prime[i]==1){\n            for(j=2*i;j<=1000005;j=j+i){\n                prime[j]++;\n            }\n        }\n    }\n    while(t--){\n        c=0;\n        cin>>n;\n        for(i=2;i<=n;i++){\n            if(prime[i]==1){\n                c++;\n            }\n        }\n        cout<<power(2,c-1)<<\"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479722,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980707,
        "updated_at_ms": 1599986707,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:31:14.686Z",
        "__v": 0
    },
    {
        "_id": "5f605fb9468ccc0964b0c2ee",
        "submission_code": "import math\nimport sys\ninput=sys.stdin.readline\nt= int (input())\nfor _ in range(t):\n  count=1\n  a=0\n  b=0\n  n=int(input())\n  fact= math.factorial(n)\n  for a in range (fact+1):\n        for b in range (fact):\n            if((math.gcd(a,b)==1)and(a*b==fact)and (a<b)):\n                count=count+1\n  print(count)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479698,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8595924",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "saitejachalla201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980675,
        "updated_at_ms": 1599986675,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:31:21.940Z",
        "__v": 0
    },
    {
        "_id": "5f605fbf468ccc0964b0c2ef",
        "submission_code": "import math\ndef coprime(a, b): \n    if (math.gcd(a,b) == 1): \n        return 1\n    else: \n        return 0         \nn=int(input())\nlst=[]\nfor i in range(0,n):\n    a=int(input())\n    b=math.factorial(a)\n    c=1\n    for j in range(1,b):\n        for k in range(j,b):\n            if(coprime(i, j)):\n                if(j*k==b):\n                    c=c+1\n    lst.append(c)\nd=len(lst)\nfor i in range(0,d):\n    d=lst[i]\n    print(d)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479694,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4623005",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980671,
        "updated_at_ms": 1599986671,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:31:27.885Z",
        "__v": 0
    },
    {
        "_id": "5f605fc8468ccc0964b0c2f0",
        "submission_code": "import math\nimport sys\ninput=sys.stdin.readline\nt= int (input())\nfor _ in range(t):\n  count=1\n  a=0\n  b=0\n  n=int(input())\n  fact= math.factorial(n)\n  for a in range (fact+1):\n        for b in range (fact):\n            if((math.gcd(a,b)==1)and(a*b==fact)and (a<b)):\n                count=count+1\n  print(count)\n                         \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479693,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9286244",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "karthik_suraj261",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980670,
        "updated_at_ms": 1599980670,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:31:36.892Z",
        "__v": 0
    },
    {
        "_id": "5f605fd3468ccc0964b0c2f1",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t,i,j,k,n,m,tt;\n    cin>>t;\n    tt=t;\n    while(t--)\n    {\n        cin>>n>>m;\n        vector<vector<char>> vi(n,vector<char>(m,' ')),vd(n,vector<char>(m,' ')),vl(n,vector<char>(m,' '));\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cin>>vi[i][j];\n            }\n        }\n        for(i=m-1;i>=0;i--)\n        {\n            vd[n-1][i]='R';\n            if(j!=m-1)\n            vl[n-1][i]=vi[n-1][i+1];\n        }\n        for(i=n-1;i>=0;i--)\n        {\n            vd[i][m-1]='D';\n            if(i!=n-1)\n            vl[i][m-1]=vi[i+1][m-1];\n        }\n        \n        for(j=m-2;j>=0;j--)\n        {\n            for(i=n-2;i>=0;i--)\n            {\n                if(vi[i][j+1]<vi[i+1][j])\n                {\n                    vl[i][j]=vi[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else if(vi[i][j+1]>vi[i+1][j])\n                {\n                    vl[i][j]=vi[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                else\n                {\n                    if(vl[i][j+1]<vl[i+1][j])\n                {\n                    vl[i][j]=vl[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else\n                {\n                    vl[i][j]=vl[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                    \n                }\n            }\n        }\n        i=0;\n        j=0;\n        cout<<\"Case #\"<<tt-t<<\": \";\n        while(!(i==n-1&&j==m-1))\n        {\n            \n            if(vd[i][j]=='D')\n            {\n                cout<<'D';\n                i=i+1;\n                \n            }\n            else\n            {\n                cout<<'R';\n                j=j+1;\n                \n            }\n            \n        }\n        \n        /*for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cout<<vd[i][j]<<\" \";\n            }\n            cout<<endl;\n        }*/\n        \n        cout<<endl;\n            \n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479679,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599980654,
        "updated_at_ms": 1599986654,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:31:47.334Z",
        "__v": 0
    },
    {
        "_id": "5f605fdd468ccc0964b0c2f2",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nlong int fact(long int n)\n{\n    int i=1;\n    long int res=1;\n    for(i=1;i<=n;i++)\n    {\n        res=res*i;\n    }\n    return res;\n}\nint hcf(int a, int b)\n{\n    if(a==0)\n        return b;\n    return hcf(b%a,a);\n}\nint main() {\n    long int n,a,b=1,c,count,i;\n    scanf(\"%d\",&n);\n    for(int j=0;j<n;j++)\n    {\n        count=0;\n        scanf(\"%d\",&a);\n        b=fact(a);\n        for (i = 1; i * i <= b; i++)\n        {\n            if (b % i == 0) \n            {\n                c= hcf(i,b/i);\n                //printf(\"%d\\n\",c);\n            }\n            if(c==1)\n            {\n                count=count+1;\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479666,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5093044",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218737004ITA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980638,
        "updated_at_ms": 1599985438,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:31:57.284Z",
        "__v": 0
    },
    {
        "_id": "5f605fee468ccc0964b0c2f3",
        "submission_code": "for _ in range(int(input())):\n    n=int(input())\n    count=0\n    for i in range(1,n+1):\n        if i%2!=0:\n            count+=1\n    print(count%((10**9)+7))\n        \n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479642,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7783852",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "dineshreddyredd4",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980598,
        "updated_at_ms": 1599980598,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:32:14.575Z",
        "__v": 0
    },
    {
        "_id": "5f605ff7468ccc0964b0c2f4",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nvector<long long int>v;\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    }\n    v.push_back(0);\n    v.push_back(0);\n    long long int c=0;\n    for(int i=2;i<=n;i++ ){\n        if(prime[i]==true) c=c+1;\n        v.push_back(c);\n    }\n}\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    long long int t,n;\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<0<<\"\\n\";\n        else{\n            //for(auto i:v) cout<<i;\n            long long int v1,r,v2;\n            r=v[n]-1;\n            v2=pow(2,r);\n            v1=v2%mod;\n            cout<<v1<<\"\\n\";\n        }  \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479634,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980578,
        "updated_at_ms": 1599996178,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:32:23.582Z",
        "__v": 0
    },
    {
        "_id": "5f605ffd468ccc0964b0c2f5",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n\n// https://atcoder.jp/posts/518\n// #include <atcoder/convolution>\n// #include <atcoder/dsu>\n// #include <atcoder/fenwicktree>\n// #include <atcoder/lazysegtree>\n// #include <atcoder/math>\n// #include <atcoder/maxflow>\n// #include <atcoder/mincostflow>\n// #include <atcoder/modint>\n// #include <atcoder/scc>\n// #include <atcoder/segtree>\n// #include <atcoder/string>\n// #include <atcoder/twosat>\n// using namespace atcoder;\n\nusing ld = long double;\n#define int long long\n\n#define F first\n#define S second\n#define s(x) set<x>\n#define um(x, y) unordered_map<x, y>\n#define m(x, y) map<x, y>\n#define p(x, y) pair<x, y>\n#define v(x) vector<x>\n#define min_heap(t) priority_queue<t, vector<t>, greater<t>>\n#define max_heap(t) priority_queue<t>\n\n#define eb emplace_back\n#define mp make_pair\n#define bs binary_search\n#define lb lower_bound\n#define ub upper_bound\n\n#define all(v) v.begin(), v.end()\n#define ss(v) stable_sort(all(v))\n#define fori(i, a, b) for (int i = a; i <= b; i++)\n#define rofi(i, a, b) for (int i = a; i >= b; --i)\n#define scn(v1)        \\\n    for (auto &x : v1) \\\n        cin >> x;\n#define deb(x) cout << #x << \"=\" << x << endl;\n#define R(x) reverse(all(x));\n\n#define FILE_READ_IN freopen(\"input.txt\", \"r\", stdin);\n#define FILE_READ_OUT freopen(\"output.txt\", \"w\", stdout);\n\n#define fastio                    \\\n    ios_base::sync_with_stdio(0); \\\n    cin.tie(0);                   \\\n    cout.tie(0);\n#define stprs(x) cout << fixed << setprecision(x);\n\nconst char nl = '\\n';\nconst char sp = ' ';\nconst int mod1 = 1e9 + 7;\nconst int mod2 = 998244353;\nconst ld PI = acos(-1);\n\n#define debug cerr\n#define name(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\ntemplate<class A>\nostream& operator << (ostream& out, const set<A> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            out << \", \";\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<class A>\nostream& operator << (ostream& out, const vector<A> &a) {\n    // out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            // out << \", \";\n            out << ' ';\n        out << *it;\n    }\n    return out;\n    return out << \"]\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const pair<A, B> &a) {\n    return out <<  \"(\" << a.first << \", \" << a.second << \")\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\ntemplate<class A, class B>\nostream& operator << (ostream& out, const unordered_map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<typename... T>\nvoid read(T&... args) {\n    ((cin >> args), ...);\n}\n\ntemplate<typename... T>\nvoid print(T... args) {\n    ((cout << args), ...);\n}\n\n// variables and consts\n// -- variables and consts --\n\nvoid solve(void) {\n    int n;\n    read(n);\n    v(int) x, y;\n    p(int, int) ans;\n    int value;\n    int sx, sx2, sy, sy2;\n    for(int i=0; i<n; ++i) {\n        int a, b;\n        cin >> a >> b;\n        x.eb(a);\n        y.eb(b);\n        if(i){ \n            sx += a;\n            sx2 += a*a;\n            sy += b;\n            sy2 += b*b;\n        } else {\n            sx = a;\n            sx2 = a*a;\n            sy = b;\n            sy2 = b*b;\n        }\n    }\n    for(int i=0; i<n; ++i) {\n        int temp = n * x[i] * x[i];\n        temp -= 2 * x[i] * sx;\n        temp += sx2;\n        temp += n * y[i] * y[i];\n        temp -= 2 * y[i] * sy;\n        temp += sy2;\n        // cout << temp << ' ';\n        if(i == 0) {\n            value = temp;\n            ans = {x[i], y[i]};\n        } else {\n            if(temp < value) {\n                value = temp;\n                ans = {x[i], y[i]};\n            }\n        }\n    }\n    cout << ans.F << ' ' << ans.S << nl;\n}\n\nint32_t main(void) {\n    fastio\n    int __ = 1;\n    read(__);\n    while (__--) {\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479620,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5078334",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "the_pythor",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980560,
        "updated_at_ms": 1599980560,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:32:29.524Z",
        "__v": 0
    },
    {
        "_id": "5f606004468ccc0964b0c2f6",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n     int t;\n    scanf(\"%d\",&t);\n        for(int i=0;i<t;i++)\n        {\n            int n;\n            scanf(\"%d\",&n);\n            int a[n];\n            int b[n];\n            for(int j=0;j<n;j++)\n            {\n                scanf(\"%d\",&a[j]);\n                scanf(\"%d\",&b[j]);\n            }\n            int f1=0;\n            int x=0,y=0;\n            for(int k=0;k<n;k++)\n            {\n                int f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+(a[k]-a[j])*(a[k]-a[j])+(b[k]-b[j])*(b[k]-b[j]);\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            printf(\"%d %d\\n\",x,y);\n        }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479601,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980530,
        "updated_at_ms": 1599985330,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:32:36.895Z",
        "__v": 0
    },
    {
        "_id": "5f60600b468ccc0964b0c2f7",
        "submission_code": "T=int(input())\nfor _ in range(T):\n    x=[int(a) for a in input().split()]\n    ck=[[x[2],x[3]],[x[4],x[5]]]\n    dp=[[1 for i in range(x[0]+1)] for j in range(x[1]+1)]\n    dp[x[1]-x[3]][x[2]]=-1\n    dp[x[1]-x[5]][x[4]]=-1\n    i=x[1]-1\n    while(i>=0):\n        for j in range(1,x[0]+1):\n            if(dp[i][j]==-1):\n                dp[i][j]=0\n                continue\n            dp[i][j]=dp[i+1][j]+dp[i][j-1]\n        i-=1\n    print(dp[0][x[0]])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479599,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "6986737",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "vegishanmukh7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599980528,
        "updated_at_ms": 1599980528,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:32:43.040Z",
        "__v": 0
    },
    {
        "_id": "5f606013468ccc0964b0c2f8",
        "submission_code": "import math as mt\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    lx=[]\n    ly=[]\n    s=0\n    qw=0\n    for i in range(n):\n        x,y=map(int,input().split())\n        lx.append((x,y))\n    lx.sort()\n\n    print(lx[(n-1)//2][0],lx[(n-1)//2][1])\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479594,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2801145",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980514,
        "updated_at_ms": 1599980514,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:32:51.282Z",
        "__v": 0
    },
    {
        "_id": "5f60601d468ccc0964b0c2f9",
        "submission_code": "import math\ndef factorial(n):\n    \n    return 1 if (n==1 or n==0) else n * factorial(n - 1); \n#def __gcd(a, b): \n#    if (a == 0 or b == 0): return 0\n#    if (a == b): return a \n#    if (a > b):  \n#        return __gcd(a - b, b) \n#    return __gcd(a, b - a) \ndef coprime(a, b): \n    if (math.gcd(a,b) == 1): \n        return 1\n    else: \n        return 0         \nn=int(input())\nlst=[]\nfor i in range(0,n):\n    a=int(input())\n    b=factorial(a)\n    c=1\n    for j in range(1,b):\n        for k in range(j,b):\n            if(coprime(i, j)):\n                if(j*k==b):\n                    c=c+1\n    lst.append(c)\nd=len(lst)\nfor i in range(0,d):\n    d=lst[i]\n    print(d)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479590,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4623005",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980505,
        "updated_at_ms": 1599985305,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:33:01.377Z",
        "__v": 0
    },
    {
        "_id": "5f606024468ccc0964b0c2fa",
        "submission_code": "import sys\nimport math \n\nk=int(input())\nfor i in range(k):\n    c=0\n    n=int(input())\n    for j in range(1,math.factorial(n+1)):\n        for k in range(1,math.factorial(n+1)):\n            if(k*j==math.factorial(n) and math.gcd(j,k)==1):\n                if(j<k):\n                    c+=1\n    print(c)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479569,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8595924",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "saitejachalla201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980476,
        "updated_at_ms": 1599985276,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:33:08.576Z",
        "__v": 0
    },
    {
        "_id": "5f60602a468ccc0964b0c2fb",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\npublic class Solution {\n    public static HashSet<Integer> arr;\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int maxN=Integer.MIN_VALUE,t=sc.nextInt();\n        int arrN[]=new int[t];\n        for(int i=0;i<t;i++){\n            arrN[i]=sc.nextInt(); \n            maxN=Integer.max(maxN,arrN[i]);\n        }\n        arr=new HashSet<>();\n        int freq[]=new int[maxN+1];\n        for(int i=1;i<=maxN;i++){\n            primeFactors(i);\n            freq[i]=arr.size();\n        }\n        for(int i=0;i<t;i++)\n            System.out.println(freq[arrN[i]]);\n    }\n    public static void primeFactors(int n){\n        while(n%2==0){ \n            arr.add(2); \n            n/=2; \n        } \n        for(int i=3;i<=Math.sqrt(n);i+=2){\n            while(n%i==0){ \n                System.out.print(i+ \" \"); \n                n/=i; \n            } \n        } \n        if(n>2) \n            arr.add(n);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479568,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3770682",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "aamukthaaukunoo1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980476,
        "updated_at_ms": 1599984076,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:33:14.933Z",
        "__v": 0
    },
    {
        "_id": "5f606031468ccc0964b0c2fc",
        "submission_code": "from sys import stdin, stdout \nimport math\nprimenumber=[]\ndef SieveOfEratosthenes(n): \n      \n    # Create a boolean array \"prime[0..n]\" and initialize \n    #  all entries it as true. A value in prime[i] will \n    # finally be false if i is Not a prime, else true. \n    global primenumber\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n          \n        # If prime[p] is not changed, then it is a prime \n        if (prime[p] == True): \n              \n            # Update all multiples of p \n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n      \n    # Print all prime numbers \n    for p in range(2, n+1): \n        if prime[p]: \n            primenumber.append(p) \nMOD=10**9+7\ndef power(n):\n    a=2\n    c=1\n    while n>0:\n        if n%2==1:\n            c=(c*a)%MOD\n        a=(a*a)%MOD \n        n=int(n/2)\n    return c%MOD\nt=int(stdin.readline())\nwhile t:\n    primenumber.clear()\n    n = int(stdin.readline())\n    SieveOfEratosthenes(n)\n    r=len(set(primenumber))\n    stdout.write(str(power(r-1)%(MOD))+'\\n')\n    t-=1",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479561,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4673657",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733104CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980465,
        "updated_at_ms": 1599982865,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:33:21.800Z",
        "__v": 0
    },
    {
        "_id": "5f60603b468ccc0964b0c2fd",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n     int t;\n    scanf(\"%d\",&t);\n        for(int i=0;i<t;i++)\n        {\n            int n;\n            scanf(\"%d\",&n);\n            int a[n];\n            int b[n];\n            for(int j=0;j<n;j++)\n            {\n                scanf(\"%d\",&a[j]);\n                scanf(\"%d\",&b[j]);\n            }\n            double f1=0;\n            int x=0,y=0;\n            for(int k=0;k<n;k++)\n            {\n                double f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+(a[k]-a[j])*(a[k]-a[j])+(b[k]-b[j])*(b[k]-b[j]);\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            printf(\"%d %d\\n\",x,y);\n        }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479559,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980463,
        "updated_at_ms": 1599984063,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:33:31.886Z",
        "__v": 0
    },
    {
        "_id": "5f606043468ccc0964b0c2fe",
        "submission_code": "import bisect \nimport math\ndef f(a,b,x,n):\n    v=0\n    for i in range(n):\n        v+=pow(abs(x[i][0]-a),2) + pow(abs(x[i][1]-b),2) \n    return v     \nfor _ in range(int(input())):\n    n=int(input())\n    l1, l2 = [], []\n    x_s, y_s = 0, 0\n    for i in range(n):\n        x, y = map(int, input().split())\n        x_s += x\n        y_s += y\n        l1.append([x, y])\n    l1.sort(key=lambda x:x[1])\n    l1.sort()\n    for i in range(n):\n        l2.append(l1[i][0]+l1[i][1])\n    i, j = 0, n-1\n    while i<j-1:\n        if l2[i]<l2[j]:\n            i+=1\n        elif l2[i]>l2[j]:\n            j-=1\n        else:\n            i+=1\n            j-=1\n    if i == j:\n        i-=1\n    i1 = f(l1[i][0], l1[i][1], l1, n)\n    j1 = f(l1[j][0], l1[j][1], l1, n)\n    if i1<=j1:\n        print(*l1[i])\n    else:\n        print(*l1[j])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479542,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5616652",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "pavansid69",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980444,
        "updated_at_ms": 1599981644,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:33:39.115Z",
        "__v": 0
    },
    {
        "_id": "5f60604a468ccc0964b0c2ff",
        "submission_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        CP sc = new CP();\n        sieveOfEratosthenes();\n        int tt = sc.nextInt();\n        while (tt-- > 0) {\n            int n = sc.nextInt();\n            System.out.println(A[n]);\n        }\n    }\n\n    static long[] A = new long[1000001];\n    static boolean[] prime = new boolean[1000001];\n\n    static void sieveOfEratosthenes() {\n        for (int i = 0; i < 1000000; i++)\n            prime[i] = true;\n\n        for (int p = 2; p * p <= 1000000; p++) {\n            if (prime[p]) {\n                for (int i = p * p; i <= 1000000; i += p)\n                    prime[i] = false;\n            }\n        }\n        A[1] = 0;\n        A[2] = 1;\n        for (int i = 3; i < 1000000; i++) {\n            if (prime[i]) {\n                A[i] = (2 * A[i - 1]) % 1000000007;\n            } else {\n                A[i] = A[i - 1];\n            }\n        }\n    }\n\n    /*****************************************************************************/\n    static class CP {\n        BufferedReader bufferedReader;\n        StringTokenizer stringTokenizer;\n\n        public CP() {\n            bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        int nextInt() {\n            return Integer.parseInt(NNNN());\n        }\n\n        long nextLong() {\n            return Long.parseLong(NNNN());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(NNNN());\n        }\n\n        String NNNN() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreElements()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        String nextLine() {\n            String spl = \"\";\n            try {\n                spl = bufferedReader.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return spl;\n        }\n    }\n    /*****************************************************************************/\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479533,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6761071",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "shreyansh_shrey1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980435,
        "updated_at_ms": 1599982835,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:33:46.336Z",
        "__v": 0
    },
    {
        "_id": "5f606052468ccc0964b0c300",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            System.out.println(countprimes(v));\n        }\n    }\n    static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        else if(b==0||a==b)\n            return a;\n        else if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static int countprimes(int n)\n    {\n        int count=1;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479518,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980412,
        "updated_at_ms": 1600002012,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:33:54.720Z",
        "__v": 0
    },
    {
        "_id": "5f606059468ccc0964b0c301",
        "submission_code": "t=int(input())\nfor k in range(t):\n    n,m=map(int,input().split())\n    r=[]\n    c=[]\n    ecount=0\n    ocount=0\n    for i in range(m):\n        t1,t2=map(int,input().split())\n        if (t1+t2)%2==0:\n            ecount=ecount+1\n        else:\n            ocount=ocount+1\n        r.append(t1)\n        c.append(t2)\n    if n==2:\n        print(\"Case #\",k+1,\": \",4-m,sep=\"\")\n        continue\n    if n%2==0:\n        print(\"Case #\",k+1,\": \",(n//2)*n-min(ecount,ocount),sep=\"\")\n    else:\n        print(\"Case #\",k+1,\": \",max(((n-1)//2*(n-1)//2+(n+1)//2*(n+1)//2-ecount),((n-1)//2*(n+1)//2+(n+1)//2*(n-1)//2-ocount)),sep=\"\")\n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479515,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "4674964",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "160218733110CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599980410,
        "updated_at_ms": 1599980410,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:34:01.168Z",
        "__v": 0
    },
    {
        "_id": "5f606062468ccc0964b0c302",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        while(t-->0){\n            int n=sc.nextInt();\n            int arr[][]=new int[n][2];\n            for(int i=0;i<n;i++){\n                arr[i][0]=sc.nextInt();\n                arr[i][1]=sc.nextInt();\n            }\n            int ind=0;\n            long value=Long.MAX_VALUE;\n            for(int i=0;i<n;i++){\n                long total=0;\n                for(int j=0;j<n;j++){\n                    if(i!=j){\n                        total+=Math.pow(arr[i][0]-arr[j][0],2)+Math.pow(arr[i][1]-arr[j][1],2);\n                    }\n                }\n                if(total<value){\n                    ind=i;\n                    value=total;\n                }\n            }\n            System.out.println(arr[ind][0]+\" \"+arr[ind][1]);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479479,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7170209",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "srujith2k",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980359,
        "updated_at_ms": 1599983959,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:34:10.479Z",
        "__v": 0
    },
    {
        "_id": "5f60606a468ccc0964b0c303",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args)throws IOException  {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        \n        long inp=Long.parseLong(br.readLine());\n        for(long i=0;i<inp;i++)\n        {\n            long num=Long.parseLong(br.readLine());\n            long fact=1;\n            for(long j=1;j<=num;j++)\n            {\n             fact=fact*j;   \n            }\n            long count=0;\n            for(long o=1;o<=fact;o++)\n            {\n                for(long p=o;p<=fact;p++)\n                {\n                    if(o*p==fact)\n                    {\n                        if(o%p!=0 || o==1 ||p==1)\n                        {\n                        \n                            int counter=0;\n                            for(long k=2;k<p-1;k++)\n                            {\n                                if(o%k==0&&p%k==0)\n                                {\n                                  counter=1;\n                                    break;\n                                }\n                            }\n                            if(counter==1)\n                            {\n                                continue;\n                            }\n                            else\n                            {\n                                count=count+1;\n                            }\n                            \n                        }\n                        \n                    }\n                }\n            }\n            count=count;\n            System.out.println(count);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479477,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4698811",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "ashutosh_janrao1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980358,
        "updated_at_ms": 1599985158,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:34:18.178Z",
        "__v": 0
    },
    {
        "_id": "5f606072468ccc0964b0c304",
        "submission_code": "def fun(X,Y):\n    min=10**6\n    for x,y in zip(X,Y):\n        v=0\n        for i,j in zip(X,Y):\n            v+=(x-i)**2+(y-j)**2\n        if v<min:\n            min=v\n            s=str(x)+' '+str(y)\n        \n    return(s)\n\nT=int(input())\nfor i in range(T):\n    if T<=10:\n        N=int(input())\n        X=[];Y=[]\n        for j in range(N):\n            x,y=map(int,input().split())\n            X.append(x)\n            Y.append(y)\n        print(fun(X,Y))\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479476,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4923124",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "ashrutha",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980355,
        "updated_at_ms": 1599981555,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Runtime Error\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:34:26.633Z",
        "__v": 0
    },
    {
        "_id": "5f60607a468ccc0964b0c305",
        "submission_code": "import java.io.*;\nimport java.util.*;\npublic class Solution {\n    public static int gcd(int a, int b) {   \n        int res=0;\n        for(int i = 1; i <= a && i <= b; ++i)\n        {\n            // Checks if i is factor of both integers\n            if(a % i==0 && b % i==0)\n                res = i;\n        }\n        return res;\n        \n    } \n    public static boolean coprime(int a, int b) { \n        return (gcd(a, b) == 1); \n    }  \n    public static int numOfPairs(ArrayList<Integer> arr, int n,int res){            \n        int count = 0;  \n        for (int i = 0; i < n - 1; i++){\n            for (int j = i + 1; j < n; j++) {\n                //System.out.println(\"Factors: \"+arr.get(i)+\" \"+arr.get(j));\n                if (coprime(arr.get(i), arr.get(j)) && arr.get(i)*arr.get(j)==res){\n                    count++;\n                    //System.out.println(\"Here\");\n                }\n            }\n        }\n        return count; \n    } \n    public static void main(String[] args) {\n        int ans=0;\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++){\n            int n=sc.nextInt();\n            int fact=1;\n            for(int j=1;j<n+1;j++){\n                fact*=j;\n            }\n            ArrayList<Integer> list=new ArrayList<Integer>();\n            for(int k=1;k<fact+1;k++){\n                if(fact%k==0)\n                    list.add(k);\n            }\n            //System.out.println(list);\n            ans=numOfPairs(list,list.size(),fact);   \n            System.out.println(ans);\n            }\n        }\n    }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479450,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980325,
        "updated_at_ms": 1599988725,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:34:34.177Z",
        "__v": 0
    },
    {
        "_id": "5f606081468ccc0964b0c306",
        "submission_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n    public static void main(String[] args) {\n        CP sc = new CP();\n        sieveOfEratosthenes();\n        int tt = sc.nextInt();\n        while (tt-- > 0) {\n            int n = sc.nextInt();\n            System.out.println(A[n]);\n        }\n    }\n\n    static long[] A = new long[1000001];\n    static boolean[] prime = new boolean[1000001];\n\n    static void sieveOfEratosthenes() {\n        for (int i = 0; i < 1000000; i++)\n            prime[i] = true;\n\n        for (int p = 2; p * p <= 1000000; p++) {\n            if (prime[p]) {\n                for (int i = p * p; i <= 1000000; i += p)\n                    prime[i] = false;\n            }\n        }\n        A[1] = 0;\n        A[2] = 1;\n        for (int i = 3; i < 1000000; i++) {\n            if (prime[i]) {\n                A[i] = 2 * A[i - 1] % 1000000007;\n            } else {\n                A[i] = A[i - 1];\n            }\n        }\n    }\n\n    /*****************************************************************************/\n    static class CP {\n        BufferedReader bufferedReader;\n        StringTokenizer stringTokenizer;\n\n        public CP() {\n            bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        int nextInt() {\n            return Integer.parseInt(NNNN());\n        }\n\n        long nextLong() {\n            return Long.parseLong(NNNN());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(NNNN());\n        }\n\n        String NNNN() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreElements()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n\n        String nextLine() {\n            String spl = \"\";\n            try {\n                spl = bufferedReader.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return spl;\n        }\n    }\n    /*****************************************************************************/\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479446,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6761071",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "shreyansh_shrey1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980316,
        "updated_at_ms": 1599981516,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:34:41.745Z",
        "__v": 0
    },
    {
        "_id": "5f606089468ccc0964b0c307",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nlong long int fact(long long int a)\n{\n    if(a==1||a==0)\n        return 1;\n    else\n        return a%1000000007*fact(a-1)%1000000007;\n}\n\nint main() {\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int n,cnt=0;\n        scanf(\"%lld\",&n);\n        long long nf=fact(n)%1000000007;\n        for(long long i=1;i<=sqrt(nf);i++)\n        {\n            if(nf%i==0)\n            {\n                if(__gcd((nf/i),i)==1)\n                    cnt++;\n            }\n        }\n        printf(\"%lld\\n\",cnt);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479439,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980309,
        "updated_at_ms": 1599985109,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:34:49.844Z",
        "__v": 0
    },
    {
        "_id": "5f606090468ccc0964b0c308",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef solution2(N):\n    f=1\n    count=0\n    m=[1]\n    flag=0\n    mo=1000000007\n    f=math.factorial(N)\n    for k in range(2,int(math.sqrt(f))+1):\n        if f%k==0:\n            d=f//k\n            gcd=math.gcd(k,d)\n            if gcd==1:\n                m.append(k)\n\n    return len(m)\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        N= int(input())\n        res = solution2(N)\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479430,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980289,
        "updated_at_ms": 1599989889,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:34:56.051Z",
        "__v": 0
    },
    {
        "_id": "5f606099468ccc0964b0c309",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int t,n,m,i,j,a,r,c;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d %d\",&n,&m);\n        if(n%2==0)\n            a=n *(n/2);\n        else{\n            a=n *(n/2);\n            a=a+ (n/2)+1;\n        }\n        for(j=0;j<m;j++)\n        {\n            scanf(\"%d %d\",&r,&c);\n            if((r+c)%2==0)\n                a--; \n        }\n        printf(\"Case #%d: \",i+1);\n        printf(\"%d\\n\",a);\n    }\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479399,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "5093010",
        "submission_status": "Wrong Answer",
        "submission_language": "c",
        "site_user_handle": "160218737014ITA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599980230,
        "updated_at_ms": 1599980230,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:35:05.044Z",
        "__v": 0
    },
    {
        "_id": "5f60609e468ccc0964b0c30a",
        "submission_code": "#include <bits/stdc++.h> \nusing namespace std; \n  \nint main() \n{ \n    ios_base::sync_with_stdio(false); \n    cin.tie(NULL);    \n      \n    int test; \n    cin >> test;\n    int n,ans;\n    for (int i=0;i<test;i++) \n    { \n        cin >> n; \n        if (n%2==1)\n        {\n            ans=(n/2)+1;\n            cout << ans << \"\\n\"; \n        }\n        else\n        {   \n            ans=(n/2);\n            cout << ans << \"\\n\"; \n        }\n    } \n    return 0; \n} ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479392,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9699297",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "idiotman365",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980224,
        "updated_at_ms": 1599982624,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:35:10.743Z",
        "__v": 0
    },
    {
        "_id": "5f6060a7468ccc0964b0c30b",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Solution {\n    \n     \n    \n    \n    static int g(int s, int d)\n    {\n        while(s !=0 && d!=0)\n        {\n            if(s>=d)\n                s=s%d;\n            else\n                d=d%s;\n        }\n        return Math.max(s,d);\n    }\n    static int countp(int n)\n    {\n        int count=0;\n        for(int ii=2;ii<=Math.sqrt(n);ii++)\n        {\n            if(n%ii==0){\n                if(ii == n/ii)\n                    continue;\n                if(g(ii,n/ii)==1)\n                    count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        int[] fact=new int[]{ 1 ,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600 } ;\n        for(int i=0;i<N;i++)\n        {\n            int n=sc.nextInt();\n            System.out.println((countp(fact[n-1]))+1);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479391,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6636583",
        "submission_status": "Runtime Error",
        "submission_language": "java",
        "site_user_handle": "ramyasreesai2000",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980223,
        "updated_at_ms": 1599983823,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:35:19.343Z",
        "__v": 0
    },
    {
        "_id": "5f6060ad468ccc0964b0c30c",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    public static HashMap<Integer,Integer> map;\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int maxN=Integer.MIN_VALUE,t=sc.nextInt();\n        int arrN[]=new int[t];\n        for(int i=0;i<t;i++){\n            arrN[i]=sc.nextInt(); \n            maxN=Integer.max(maxN,arrN[i]);\n        }\n        map=new HashMap<>();\n        int freq[]=new int[maxN+1];\n        for(int i=1;i<=maxN;i++){\n            primeFactors(i);\n            //System.out.println(map);\n            freq[i]=map.size();\n        }\n        //System.out.println(map);\n        \n        for(int i=0;i<t;i++)\n            System.out.println(freq[arrN[i]]);\n    }\n    public static void primeFactors(int n){\n        while(n%2==0){ \n            add(2); \n            n/=2; \n        } \n        for(int i=3;i<=Math.sqrt(n);i+=2){\n            while(n%i==0){ \n                System.out.print(i+ \" \"); \n                n/=i; \n            } \n        } \n        if(n>2) \n            add(n);\n    }\n    public static void add(int n){\n        if(n==1)\n            return;\n        if(!map.containsKey(n))\n            map.put(n,0);\n        map.replace(n,map.get(n)+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479390,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3770682",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "aamukthaaukunoo1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980221,
        "updated_at_ms": 1599982621,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:35:25.554Z",
        "__v": 0
    },
    {
        "_id": "5f6060b5468ccc0964b0c30d",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args)throws IOException  {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        \n        long inp=Long.parseLong(br.readLine());\n        for(long i=0;i<inp;i++)\n        {\n            long num=Long.parseLong(br.readLine());\n            long fact=1;\n            for(long j=1;j<=num;j++)\n            {\n             fact=fact*j;   \n            }\n            long count=0;\n            for(long o=1;o<=fact;o++)\n            {\n                for(long p=o;p<=fact;p++)\n                {\n                    if(o*p==fact)\n                    {\n                        if(o%p!=0 || o==1 ||p==1)\n                        {\n                            long gr=o;\n                            if(o>p)\n                            {\n                              gr=o;  \n                            }\n                            else\n                            {\n                               gr=p; \n                            }\n                            int counter=0;\n                            for(long k=2;k<gr-1;k++)\n                            {\n                                if(o%k==0&&p%k==0)\n                                {\n                                  counter=1;\n                                    break;\n                                }\n                            }\n                            if(counter==1)\n                            {\n                                continue;\n                            }\n                            else\n                            {\n                                count=count+1;\n                            }\n                            \n                        }\n                        \n                    }\n                }\n            }\n            count=count;\n            System.out.println(count);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479375,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4698811",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "ashutosh_janrao1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980186,
        "updated_at_ms": 1599983786,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:35:33.849Z",
        "__v": 0
    },
    {
        "_id": "5f6060bc468ccc0964b0c30e",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner s=new Scanner(System.in);\n        int t=s.nextInt();\n        while(t>0){\n            int n=s.nextInt();\n            int arr[][]=new int[n][2];\n            for(int i=0;i<n;i++){\n                arr[i][0]=s.nextInt();\n                arr[i][1]=s.nextInt();\n            }\n            int x=n/2;\n            if(n==2){\n                System.out.println(arr[0][0]+\" \"+arr[0][1]);\n            }\n            else if(n%2==0){\n                System.out.println(arr[x-1][0]+\" \"+arr[x-1][1]);\n            }\n            else{\n                System.out.println(arr[x][0]+\" \"+arr[x][1]);\n            }\n            t--;\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479373,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5598553",
        "submission_status": "Wrong Answer",
        "submission_language": "java8",
        "site_user_handle": "manmeet02012001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980185,
        "updated_at_ms": 1599983785,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:35:40.301Z",
        "__v": 0
    },
    {
        "_id": "5f6060c3468ccc0964b0c30f",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t,i,j,k,n,m,tt;\n    cin>>t;\n    tt=t;\n    while(t--)\n    {\n        cin>>n>>m;\n        vector<vector<char>> vi(n,vector<char>(m,' ')),vd(n,vector<char>(m,' ')),vl(n,vector<char>(m,' '));\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cin>>vi[i][j];\n            }\n        }\n        for(i=m-1;i>=0;i--)\n        {\n            vd[n-1][i]='R';\n            vl[n-1][i]=vi[n-1][i];\n        }\n        for(i=n-1;i>=0;i--)\n        {\n            vd[i][m-1]='D';\n            vl[i][m-1]=vi[i][m-1];\n        }\n        \n        for(j=m-2;j>=0;j--)\n        {\n            for(i=n-2;i>=0;i--)\n            {\n                if(vi[i][j+1]<vi[i+1][j])\n                {\n                    vl[i][j]=vi[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else if(vi[i][j+1]>vi[i+1][j])\n                {\n                    vl[i][j]=vi[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                else\n                {\n                    if(vl[i][j+1]<vl[i+1][j])\n                {\n                    vl[i][j]=vl[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else\n                {\n                    vl[i][j]=vl[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                    \n                }\n            }\n        }\n        i=0;\n        j=0;\n        cout<<\"Case #\"<<tt-t<<\": \";\n        while(!(i==n-1&&j==m-1))\n        {\n            \n            if(vd[i][j]=='D')\n            {\n                cout<<'D';\n                i=i+1;\n                \n            }\n            else\n            {\n                cout<<'R';\n                j=j+1;\n                \n            }\n            \n        }\n        \n        /*for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cout<<vd[i][j]<<\" \";\n            }\n            cout<<endl;\n        }*/\n        \n        cout<<endl;\n            \n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479370,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599980181,
        "updated_at_ms": 1599984981,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:35:47.893Z",
        "__v": 0
    },
    {
        "_id": "5f6060ca468ccc0964b0c310",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        List<Integer> list1=new ArrayList<>();\n        List<Integer> list2=new ArrayList<>();\n        \n        while(n!=0){\n            int tc=sc.nextInt();\n            while(tc!=0){\n                 int a=sc.nextInt();\n            int b=sc.nextInt();\n            list1.add(a);\n            list2.add(b);\n            tc--;\n            }\n            int index=0;\n            int min_res=Integer.MAX_VALUE;\n            for(int i=0;i<list1.size();i++){\n                int x=list1.get(i);\n                int y=list2.get(i);\n                int res=0;\n                for(int j=0;j<list1.size();j++){\n                    res=(int)(res+Math.pow((list1.get(j)-x),2)+Math.pow((list2.get(j)-y),2));\n                    if(res>min_res)\n                        break;\n                }\n                if(min_res>res){\n                    min_res=res;\n                    index=i;\n                }\n            }\n            System.out.println(list1.get(index)+\" \"+list2.get(index));\n        n--;\n        list1.clear();\n        list2.clear();\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479367,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4675172",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Likhita_AVL",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980180,
        "updated_at_ms": 1599981380,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:35:54.431Z",
        "__v": 0
    },
    {
        "_id": "5f6060d2468ccc0964b0c311",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nlong long int fact(long long int a)\n{\n    if(a==1||a==0)\n        return 1;\n    else\n        return a%1000000007*fact(a-1)%1000000007;\n}\n\nint main() {\n    long long int t;\n    scanf(\"%lld\",&t);\n    while(t--)\n    {\n        long long int n,cnt=0;\n        scanf(\"%lld\",&n);\n        long long nf=fact(n)%1000000007;\n        for(long long i=1;i<=sqrt(nf);i++)\n        {\n            if(nf%i==0)\n            {\n                if(__gcd((nf/i),i)==1)\n                    cnt++;\n            }\n        }\n        cout<<cnt<<\"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479352,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980157,
        "updated_at_ms": 1599983757,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:36:02.249Z",
        "__v": 0
    },
    {
        "_id": "5f6060d9468ccc0964b0c312",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner s=new Scanner(System.in);\n        int t=s.nextInt();\n        while(t>0){\n            int n=s.nextInt();\n            int arr[][]=new int[n][2];\n            for(int i=0;i<n;i++){\n                arr[i][0]=s.nextInt();\n                arr[i][1]=s.nextInt();\n            }\n            int x=n/2;\n            if(n==2){\n                System.out.println(arr[0][0]+\" \"+arr[0][1]);\n            }\n            else if(n%2==0){\n                System.out.println(arr[x-1][0]+\" \"+arr[x-1][1]);\n            }\n            else{\n                System.out.println(arr[x][0]+\" \"+arr[x][1]);\n            }\n            t--;\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479341,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5598553",
        "submission_status": "Wrong Answer",
        "submission_language": "java8",
        "site_user_handle": "manmeet02012001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980140,
        "updated_at_ms": 1599982540,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:36:09.160Z",
        "__v": 0
    },
    {
        "_id": "5f6060df468ccc0964b0c313",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nlong long int prime[1000001]={0},a[1000001],m=1000000007;\nlong long int power(long long int x,long long int y) \n{ \n    if (y == 0) \n        return 1; \n    else if (y % 2 == 0) \n        return ((power(x, y / 2)%m) * (power(x, y / 2)%m))%m; \n    else\n        return ((x%m) * (power(x, y / 2)%m) * (power(x, y / 2)%m))%m; \n}\nint main() {\n    long long int i,j,x,t,n;\n    prime[1]=1;\n     for(i=2;i<=1000000;i++)\n     {\n        if(prime[i]==0)\n        {\n            for(j=2*i;j<=1000000;j+=i)\n            {\n                prime[j]=1;\n            }\n        }\n     }\n    a[0]=0;\n    a[1]=0;\n    for(i=2;i<=1000000;i++)\n    {\n        if(prime[i]==0)\n            a[i]=a[i-1]+1;\n        else\n            a[i]=a[i-1];\n    }\n    scanf(\"%lld\",&t);\n    while(t--){\n        scanf(\"%lld\",&n);\n        x=power(2,a[n]-1)%m;\n        printf(\"%lld\\n\",x);\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479333,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7133320",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "logicalcoder9908",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980129,
        "updated_at_ms": 1599980129,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:36:15.011Z",
        "__v": 0
    },
    {
        "_id": "5f6060e8468ccc0964b0c314",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int t,i,j,k,n,m,tt;\n    cin>>t;\n    tt=t;\n    while(t--)\n    {\n        cin>>n>>m;\n        vector<vector<char>> vi(n,vector<char>(m,' ')),vd(n,vector<char>(m,' ')),vl(n,vector<char>(m,' '));\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cin>>vi[i][j];\n            }\n        }\n        for(i=m-1;i>=0;i--)\n        {\n            vd[n-1][i]='R';\n            vl[n-1][i]=vi[n-1][i];\n        }\n        for(i=n-1;i>=0;i--)\n        {\n            vd[i][m-1]='D';\n            vl[i][m-1]=vi[i][m-1];\n        }\n        \n        for(j=m-2;j>=0;j--)\n        {\n            for(i=n-2;i>=0;i--)\n            {\n                if(vi[i][j+1]<vi[i+1][j])\n                {\n                    vl[i][j]=vi[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else if(vi[i][j+1]>vi[i+1][j])\n                {\n                    vl[i][j]=vi[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                else\n                {\n                    if(vl[i][j+1]<vl[i+1][j])\n                {\n                    vl[i][j]=vl[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else\n                {\n                    vl[i][j]=vl[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                    \n                }\n            }\n        }\n        i=0;\n        j=0;\n        cout<<\"Case #\"<<tt-t<<\": \";\n        while(!(i==n-1&&j==m-1))\n        {\n            \n            if(vd[i][j]=='D')\n            {\n                cout<<'D';\n                i=i+1;\n                \n            }\n            else\n            {\n                cout<<'R';\n                j=j+1;\n                \n            }\n            \n        }\n        \n        /*for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cout<<vd[i][j]<<\" \";\n            }\n            cout<<endl;\n        }*/\n        \n        cout<<endl;\n            \n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479323,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599980118,
        "updated_at_ms": 1599983718,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:36:24.887Z",
        "__v": 0
    },
    {
        "_id": "5f6060ef468ccc0964b0c315",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef solution2(N):\n    f=1\n    count=0\n    m=[1]\n    flag=0\n    mo=1000000007\n    f=math.factorial(N)\n    for k in range(2, f+1):\n        if f%k==0:\n            d=f//k\n            if d not in m:\n                gcd=math.gcd(k,d)\n                if gcd==1:\n                    m.append(k)\n            else:\n                return len(m)%mo\n\n    #return len(m)\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        N= int(input())\n        res = solution2(N)\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479305,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980092,
        "updated_at_ms": 1599988492,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:36:31.905Z",
        "__v": 0
    },
    {
        "_id": "5f6060f5468ccc0964b0c316",
        "submission_code": "from math import inf\nfor _ in range(int(input())):\n    N = int(input())\n    pre = dict()\n    x = []\n    y = []\n    xSum = 0\n    xSqSum = 0\n    ySum = 0\n    ySqSum = 0\n\n    for j in range(N):\n        x,y = map(int,input().split())\n        xSum += x\n        xSqSum += x**2\n        ySum += y\n        ySqSum += y**2\n        pre[tuple((x,y))] = 0\n    mini = inf\n    index = tuple()\n    for each in pre.keys():\n        x = each[0]\n        y = each[1]\n        pre[each] = (N-1)*((x**2)+(y**2)) - 2*(x*(xSum-x) + y*(ySum-y)) + (xSqSum - (x*x) + (ySqSum - (y*y)))\n        if mini>pre[each]:\n            mini = pre[each]\n            index = each\n        \n    print(index[0],index[1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479304,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "3164622",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "anshmaske743",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980091,
        "updated_at_ms": 1599982491,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:36:37.745Z",
        "__v": 0
    },
    {
        "_id": "5f606100468ccc0964b0c317",
        "submission_code": "def max_knight(n, m) :  \n  \n    # Check for corner case #1  \n    # If row or column is 1  \n    if (m == 1 or n == 1) : \n  \n        # If yes, then simply print total blocks  \n        # which will be the max of row or column  \n        return max(m, n);  \n  \n    # Check for corner case #2  \n    # If row or column is 2  \n    elif (m == 2 or n == 2) : \n  \n        # If yes, then simply calculate  \n        # consecutive 2 rows or columns  \n        c = 0;  \n        c = (max(m, n) // 4) * 4;  \n  \n        if (max(m, n) % 4 == 1) : \n            c += 2;  \n          \n        elif (max(m, n) % 4 > 1) : \n            c += 4;  \n  \n        return c;  \n  \n    # For general case, just print the  \n    # half of total blocks  \n    else : \n        return (((m * n) + 1) // 2);  \n  \n# Driver code  \nif _name_ == \"_main_\" :  \n  \n    n = 4; m = 5;  \n  \n    print(max_knight(n, m));",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479298,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "6707196",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "harshitha_5_hg",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599980080,
        "updated_at_ms": 1599980080,
        "misc_notes": "[\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:36:48.355Z",
        "__v": 0
    },
    {
        "_id": "5f606106468ccc0964b0c318",
        "submission_code": "#include<bits/stdc++.h>\n#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#define ll long long\n#include <algorithm>\nll ans = 1000000007;\nll val = 1000001;\nusing namespace std;\nll power(ll x, ll y)  \n{   \n    ll p=1e9+7;\n    ll res = 1;   \n    x = x % p; \n   \n    if (x == 0) return 0; \n  \n    while (y > 0)  \n    {  \n        if (y & 1)  \n            res = (res*x) % p;    \n        y = y>>1; \n        x = (x*x) % p;  \n    }  \n    return res;  \n}  \n\nvector<ll> sieves(){\n    bool prime_number[val]; \n        for(ll i=0;i<val;i++) \n            prime_number[i] = true; \n          \n        for(ll par = 2; par*par <=val; par++) \n        { \n            \n            if(prime_number[par] == true) \n            { \n                \n                for(ll i=par*par;i<=val; i += par) \n                    prime_number[i] = false; \n            } \n        } \n          \n    vector<ll> v;\n        for(ll i = 2;i<=val; i++) \n        { \n            if(prime_number[i] == true) {\n                v.push_back(i); \n            }\n        }\n    return v;\n}\n\n\n\nint main() {\n    ios_base::sync_with_stdio();\n    cin.tie(NULL);\n    cout.tie(NULL);\n    vector<ll> v = sieves();\n    ll t;\n    scanf(\"%lld\",&t);\n    while(t--){\n        ll n;\n        scanf(\"%lld\",&n);\n        auto iter = upper_bound(v.begin(),v.end(),n);\n        if(n==1)\n        {\n            printf(\"0\");\n            printf(\"\\n\");\n        }\n        else{\n            ll answer;\n            answer=iter - v.begin() -1;\n            printf(\"%lld\\n\",(power(2,answer))%ans);\n        }\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479296,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5615052",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "prateek_singam8",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980074,
        "updated_at_ms": 1599980074,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:36:54.332Z",
        "__v": 0
    },
    {
        "_id": "5f60610f468ccc0964b0c319",
        "submission_code": "#include <bits/stdc++.h> \nusing namespace std; \n  \nint main() \n{ \n    ios_base::sync_with_stdio(false); \n    cin.tie(NULL);    \n      \n    int test; \n    cin >> test;\n    int n,ans;\n    for (int i=0;i<test;i++) \n    { \n        cin >> n; \n        if (n%2==1)\n        {\n            ans=remainder(((n/2)+1),(pow(10,9)+7));\n            cout << ans << \"\\n\"; \n        }\n        else\n        {   \n            ans=remainder((n/2),(pow(10,9)+7));\n            cout << ans << \"\\n\"; \n        }\n    } \n    return 0; \n} ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479295,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9699297",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "idiotman365",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980073,
        "updated_at_ms": 1599981273,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:37:03.752Z",
        "__v": 0
    },
    {
        "_id": "5f606118468ccc0964b0c31a",
        "submission_code": "t = int(input())\nwhile t:\n    n = int(input())\n    mx=0\n    my=0\n    min=0\n    l=[]\n    rng = range(n)\n    for i in rng:\n        l.append(list(map(int,input().split())))\n\n    for i in rng:\n        f=0\n        for j in rng:\n            f+=((l[i][0]-l[j][0])*(l[i][0]-l[j][0])+(l[i][1]-l[j][1])*(l[i][1]-l[j][1]))\n        if i==0:\n            mx=l[i][0]\n            my=l[i][1]\n            min = f\n        elif f<min:\n            mx=l[i][0]\n            my=l[i][1]\n            min = f\n    print(mx,my)\n    t-=1",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479293,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4613176",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330007_CSE_A",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599980064,
        "updated_at_ms": 1599982464,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:37:12.558Z",
        "__v": 0
    },
    {
        "_id": "5f606121468ccc0964b0c31b",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define ll  long long int\n \nint main(){\n    ll t;\n    cin >> t;\n    ll ti=1;\n    while(t--){\n        ll n,m;\n        cin >> n >> m;\n        char arr[n][m];\n        char dir[n][m];\n        ll i,j;\n        for(i=0;i<n;i++){\n            for(j=0;j<m;j++){\n                cin >> arr[i][j];\n                dir[i][j] = '#';\n            }\n        }\n        deque<array<ll,3>> q;\n        q.push_back({arr[0][0]-'A' , 0 , 0});\n        while(q.size() > 0){\n            ll cnt = q.size();\n            ll mn = 100;\n            for(i=0;i<cnt;i++){\n                mn = min(q[i][0],mn);\n            }\n            while(cnt-- > 0){\n                array<ll,3> u = q.front();\n                q.pop_front();\n                if(u[0] != mn){\n                    continue;\n                }\n                ll x= u[1];\n                ll y= u[2];\n                if((x+1) < n && (y+1)<m){\n                    if(arr[x+1][y] == arr[x][y+1]){\n                        q.push_back({arr[x+1][y]-'A',x+1,y});\n                        q.push_back({arr[x][y+1]-'A',x,y+1});\n                        dir[x+1][y] = 'D';\n                        dir[x][y+1] = 'R';\n                    }\n                    else if(arr[x+1][y] < arr[x][y+1]){\n\n                        q.push_back({arr[x+1][y]-'A',x+1,y});\n                        dir[x+1][y] = 'D';\n                    }\n                    else{\n\n                        q.push_back({arr[x][y+1]-'A',x,y+1});\n                        dir[x][y+1] = 'R';\n\n                    }\n\n                }\n                else if((x+1) < n){\n                    dir[x+1][y] = 'D';\n                    q.push_back({arr[x+1][y]-'A',x+1,y});\n                }\n                else if((y+1) < m){ \n                    dir[x][y+1] = 'R';\n                    q.push_back({arr[x][y+1]-'A',x,y+1});\n                }\n                else{\n                    // do nothing;\n                }\n            }\n        }\n        string fuck;\n        i=n-1;\n        j=m-1;\n        while(i>=0 && j>=0 && dir[i][j]!='#'){\n            fuck+=dir[i][j];\n            if(dir[i][j] == 'D'){\n                i--;\n            }\n            else{\n                j--;\n            }\n        }\n        reverse(fuck.begin(), fuck.end());\n        cout << \"Case #\"<<ti++<<\": \" << fuck << endl;\n    }   \n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479291,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3651417",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599980054,
        "updated_at_ms": 1599987254,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:37:21.158Z",
        "__v": 0
    },
    {
        "_id": "5f60612a468ccc0964b0c31c",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args)throws IOException  {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        \n        long inp=Long.parseLong(br.readLine());\n        for(long i=0;i<inp;i++)\n        {\n            long num=Long.parseLong(br.readLine());\n            long fact=1;\n            for(long j=1;j<=num;j++)\n            {\n             fact=fact*j;   \n            }\n            long count=0;\n            for(long o=1;o<=fact;o++)\n            {\n                for(long p=1;p<=fact;p++)\n                {\n                    if(o*p==fact)\n                    {\n                        if(o%p!=0 || o==1 ||p==1)\n                        {\n                            long gr=o;\n                            if(o>p)\n                            {\n                              gr=o;  \n                            }\n                            else\n                            {\n                               gr=p; \n                            }\n                            int counter=0;\n                            for(long k=2;k<gr-1;k++)\n                            {\n                                if(o%k==0&&p%k==0)\n                                {\n                                  counter=1;\n                                    break;\n                                }\n                            }\n                            if(counter==1)\n                            {\n                                continue;\n                            }\n                            else\n                            {\n                                count=count+1;\n                            }\n                            \n                        }\n                        \n                    }\n                }\n            }\n            count=count/2;\n            System.out.println(count);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479269,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4698811",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "ashutosh_janrao1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980035,
        "updated_at_ms": 1599982435,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:37:30.375Z",
        "__v": 0
    },
    {
        "_id": "5f606133468ccc0964b0c31d",
        "submission_code": "import math \ndef gcd(a,b): \n      \n    # Everything divides 0  \n    if (b == 0): \n         return a \n    return gcd(b,a%b)\ndef modFact(n, p):   \n    res=[1]\n    result = 1\n    for i in range(1, n + 1): \n        result = (result * i) % p  \n        res.append(result)\n  \n    return res\nfor i in range(int(input())):\n    m=1000000007\n    a1=modFact(100001,m)\n    n=int(input())\n    \n    if(n==1 or n==2):\n        print(1)\n    else:\n        ans=a1[n]\n        c=0    \n        #print(ans)\n        f=math.sqrt((ans))\n        for i in range(1,int(f)+1):\n            if(ans%i==0):\n                #print(\"i=\"+str(i))\n                if(gcd(i,ans//i)==1):\n                    c=((c%m)+(1%m))%m\n        print(c%m)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479260,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5796840",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599980015,
        "updated_at_ms": 1599986015,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:37:39.999Z",
        "__v": 0
    },
    {
        "_id": "5f60613a468ccc0964b0c31e",
        "submission_code": "#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define IO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define int long long \n#define endl \"\\n\"\n#define all(x) (x).begin(),(x).end()\nconst int MOD = 1e9+7;\nconst int N = (long long)1e6+3;\ntypedef long long ll;\n\nll factorialNumInverse[N + 1]; \n  \n// array to precompute inverse of 1! to N! \nll naturalNumInverse[N + 1]; \n  \n// array to store factorial of first N numbers \nll fact[N + 1]; \n  \n// Function to precompute inverse of numbers \nvoid InverseofNumber(ll p) \n{ \n    naturalNumInverse[0] = naturalNumInverse[1] = 1; \n    for (int i = 2; i <= N; i++) \n        naturalNumInverse[i] = naturalNumInverse[p % i] * (p - p / i) % p; \n} \n// Function to precompute inverse of factorials \nvoid InverseofFactorial(ll p) \n{ \n    factorialNumInverse[0] = factorialNumInverse[1] = 1; \n  \n    // precompute inverse of natural numbers \n    for (int i = 2; i <= N; i++) \n        factorialNumInverse[i] = (naturalNumInverse[i] * factorialNumInverse[i - 1]) % p; \n} \n  \n// Function to calculate factorial of 1 to N \nvoid factorial(ll p) \n{ \n    fact[0] = 1; \n  \n    // precompute factorials \n    for (int i = 1; i <= N; i++) { \n        fact[i] = (fact[i - 1] * i) % p; \n    } \n} \n  \n// Function to return nCr % p in O(1) time \nll Binomial(ll N1, ll R, ll p) \n{ \n    // n C r = n!*inverse(r!)*inverse((n-r)!) \n    ll ans = ((fact[N1] * factorialNumInverse[R]) \n              % p * factorialNumInverse[N1 - R]) \n             % p; \n    return ans; \n} \n\nvoid solve(){\n    ll x, y, x1, y1, x2, y2;\n    cin >> x >> y >> x1 >> y1 >> x2 >> y2;\n    ll total = Binomial(x+y, x, MOD);\n    ll p1 = Binomial(x1 + y1, x1, MOD) * Binomial(x + y - x1 - y1, x - x1, MOD);\n    ll p2 = Binomial(x2 + y2, x2, MOD) * Binomial(x + y - x2 - y2, x - x2, MOD);\n    ll ans = total - p1 - p2;\n    if(x2 > x1 and y2 > y1)ans += Binomial(x1 + y1, x1, MOD) * Binomial(x2 + y2 - x1 - y1 , x2 - x1, MOD) * Binomial(x + y - x2 - y2, x - x2, MOD);\n    cout << ans << endl;\n    //cout << total << \" \" << p1 << \" \" << p2 << \" \" << ans << endl;\n}\n\nint32_t main(){\n    IO;\n    InverseofNumber(MOD); \n    InverseofFactorial(MOD); \n    factorial(MOD);\n    int nT = 1;\n    cin >> nT;\n    for(int i = 1; i <= nT; ++i)\n        solve();\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479253,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "7776882",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "17131a0588",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599980006,
        "updated_at_ms": 1599980006,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:37:46.903Z",
        "__v": 0
    },
    {
        "_id": "5f606143468ccc0964b0c31f",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int t,i,j,k,n,m,tt;\n    cin>>t;\n    tt=t;\n    while(t--)\n    {\n        cin>>n>>m;\n        vector<vector<char>> vi(n,vector<char>(m,' ')),vd(n,vector<char>(m,' ')),vl(n,vector<char>(m,' '));\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cin>>vi[i][j];\n            }\n        }\n        for(i=m-1;i>=0;i--)\n        {\n            vd[n-1][i]='R';\n            vl[n-1][i]=vi[n-1][i];\n        }\n        for(i=n-1;i>=0;i--)\n        {\n            vd[i][m-1]='D';\n            vl[i][m-1]=vi[i][m-1];\n        }\n        \n        for(j=m-2;j>=0;j--)\n        {\n            for(i=n-2;i>=0;i--)\n            {\n                if(vi[i][j+1]<vi[i+1][j])\n                {\n                    vl[i][j]=vi[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else if(vi[i][j+1]>vi[i+1][j])\n                {\n                    vl[i][j]=vi[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                else\n                {\n                    if(vl[i][j+1]<vl[i+1][j])\n                {\n                    vl[i][j]=vl[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else\n                {\n                    vl[i][j]=vl[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                    \n                }\n            }\n        }\n        i=0;\n        j=0;\n        cout<<\"Case #\"<<tt-t<<\": \";\n        while(!(i==n-1&&j==m-1))\n        {\n            \n            if(vd[i][j]=='D')\n            {\n                cout<<'D';\n                i=i+1;\n                \n            }\n            else\n            {\n                cout<<'R';\n                j=j+1;\n                \n            }\n            \n        }\n        \n        /*for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cout<<vd[i][j]<<\" \";\n            }\n            cout<<endl;\n        }*/\n        \n        cout<<endl;\n            \n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479241,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599979984,
        "updated_at_ms": 1599982384,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:37:55.922Z",
        "__v": 0
    },
    {
        "_id": "5f606149468ccc0964b0c320",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define ll  long long int\n \nint main(){\n    ll t;\n    cin >> t;\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    ll ti=1;\n    while(t--){\n        ll n,m;\n        cin >> n >> m;\n        char arr[n][m];\n        char dir[n][m];\n        ll i,j;\n        for(i=0;i<n;i++){\n            for(j=0;j<m;j++){\n                cin >> arr[i][j];\n                dir[i][j] = '#';\n            }\n        }\n        deque<array<ll,3>> q;\n        q.push_back({arr[0][0]-'A' , 0 , 0});\n        while(q.size() > 0){\n            ll cnt = q.size();\n            ll mn = 100;\n            for(i=0;i<cnt;i++){\n                mn = min(q[i][0],mn);\n            }\n            while(cnt-- > 0){\n                array<ll,3> u = q.front();\n                q.pop_front();\n                if(u[0] != mn){\n                    continue;\n                }\n                ll x= u[1];\n                ll y= u[2];\n                if((x+1) < n && (y+1)<m){\n                    if(arr[x+1][y] == arr[x][y+1]){\n                        q.push_back({arr[x+1][y]-'A',x+1,y});\n                        q.push_back({arr[x][y+1]-'A',x,y+1});\n                        dir[x+1][y] = 'D';\n                        dir[x][y+1] = 'R';\n                    }\n                    else if(arr[x+1][y] < arr[x][y+1]){\n\n                        q.push_back({arr[x+1][y]-'A',x+1,y});\n                        dir[x+1][y] = 'D';\n                    }\n                    else{\n\n                        q.push_back({arr[x][y+1]-'A',x,y+1});\n                        dir[x][y+1] = 'R';\n\n                    }\n\n                }\n                else if((x+1) < n){\n                    dir[x+1][y] = 'D';\n                    q.push_back({arr[x+1][y]-'A',x+1,y});\n                }\n                else if((y+1) < m){ \n                    dir[x][y+1] = 'R';\n                    q.push_back({arr[x][y+1]-'A',x,y+1});\n                }\n                else{\n                    // do nothing;\n                }\n            }\n        }\n        string fuck;\n        i=n-1;\n        j=m-1;\n        while(i>=0 && j>=0 && dir[i][j]!='#'){\n            fuck+=dir[i][j];\n            if(dir[i][j] == 'D'){\n                i--;\n            }\n            else{\n                j--;\n            }\n        }\n        reverse(fuck.begin(), fuck.end());\n        cout << \"Case #\"<<ti++<<\": \" << fuck << endl;\n    }   \n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479239,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3651417",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599979980,
        "updated_at_ms": 1599985980,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:38:01.606Z",
        "__v": 0
    },
    {
        "_id": "5f606150468ccc0964b0c321",
        "submission_code": "import math \ndef gcd(a,b): \n      \n    # Everything divides 0  \n    if (b == 0): \n         return a \n    return gcd(b,a%b)\ndef modFact(n, p):   \n    res=[1]\n    result = 1\n    for i in range(1, n + 1): \n        result = (result * i) % p  \n        res.append(result)\n  \n    return res\nfor i in range(int(input())):\n    m=1000000007\n    a1=modFact(1000001,m)\n    n=int(input())\n    \n    if(n==1 or n==2):\n        print(1)\n    else:\n        ans=a1[n]\n        c=0    \n        #print(ans)\n        f=math.sqrt((ans))\n        for i in range(1,int(f)+1):\n            if(ans%i==0):\n                #print(\"i=\"+str(i))\n                if(gcd(i,ans//i)==1):\n                    c=((c%m)+(1%m))%m\n        print(c%m)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479235,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5796840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979974,
        "updated_at_ms": 1599984774,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:38:08.359Z",
        "__v": 0
    },
    {
        "_id": "5f606156468ccc0964b0c322",
        "submission_code": "#include<iostream>\n#include<vector>\n#include<map>\n#include<string>\n#include<stdio.h>\n#include<iterator>\n#include<stack>\n#include<queue>\n#include<set>\n#include<limits>\n#include<algorithm>\n#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 )\n#define all(v) begin(v),end(v)\n\nusing namespace std;\nusing ll = long long;\n\nll fac[1000010];\nll m = 1e9+7; \n\n\nll binpow(ll a, ll b) {\n    a %= m;\n    ll res = 1;\n    while (b > 0) {\n        if (b & 1)\n            res = res * a % m;\n        a = a * a % m;\n        b >>= 1;\n    }\n    return res;\n}\n\nll inv(ll a) {\n    return binpow(a,m-2)%m;\n}\n\nll ncr(ll n,ll r) {\n    return ((fac[n] * inv(fac[n-r]) % m) * inv(fac[r]))%m;\n}\n\nll x,y,x1,y1,x2,y2;\n\nll f(ll x,ll y) {\n    if(x==0 )\n        return 1;\n    return ncr(x+y,x);\n}\n\nll both() {\n    if(x1 < x2 && y1 > y2) return 0;\n    if(x1 > x2 && y1 < y2) return 0;\n    if(x1>x2) {\n        swap(x1,x2);swap(y1,y2);\n    }\n    return ((f(x1,y1) * f(x2-x1,y2-y1)) % m * f(x-x2,y-y2)) % m;\n}\n\nauto F() {\n    cin>>x>>y>>x1>>y1>>x2>>y2;\n    ll tot = f(x,y);\n    tot -= (f(x1,y1) * f(x-x1,y-y1))%m;\n    \n    tot += m;\n    tot %= m;\n    \n    tot -= (f(x2,y2) * f(x-x2,y-y2))%m;\n    tot += m;\n    tot %= m;\n    \n    tot += both();\n    return tot%m;\n}\n\nauto T() {\n    ll t;\n    cin >> t;\n    // cout<<t<<endl;\n    // t=1;\n    while (t--)\n    {\n        cout << F() << \"\\n\";\n    }\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    fac[0]=1;\n    for(ll i=1;i<=1000000;i++) {\n        fac[i] = fac[i-1] * i;\n        fac[i] %= m;\n    }\n    T();\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479229,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4289507",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "praveen7777",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599979962,
        "updated_at_ms": 1599981162,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:38:14.099Z",
        "__v": 0
    },
    {
        "_id": "5f606160468ccc0964b0c323",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc= new Scanner(System.in);\n         int t=sc.nextInt();\n        for(int k=0;k<t;k++){\n        int n=sc.nextInt();\n        ArrayList<Integer> x = new ArrayList<>();\n        ArrayList<Integer> y = new ArrayList<>();\n        ArrayList<Integer> f1 = new ArrayList<>();\n        for(int i=0;i<n;i++){\n            x.add(sc.nextInt());\n            y.add(sc.nextInt());\n        }\n       // System.out.println(x+\" \"+y);\n        int f=0;\n        int min1=99999;\n        for(int j=1;j<=n;j++){\n            f=0;\n        for(int i=1;i<=n;i++){\n            f=f+(int)Math.pow(Math.abs(x.get(j-1)-x.get(i-1)),2)+(int)Math.pow(Math.abs(y.get(j-1)-y.get(i-1)),2);\n        }\n        //System.out.println(f);\n            if(f<min1) {\n                min1=f;\n            }\n            f1.add(f);\n            \n        }\n        int ind=f1.indexOf(min1);\n        System.out.println(x.get(ind)+\" \"+y.get(ind));\n        \n        }\n    }\n    }\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479219,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "8984118",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "hamsiniparimala1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979944,
        "updated_at_ms": 1599983544,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:38:24.542Z",
        "__v": 0
    },
    {
        "_id": "5f606169468ccc0964b0c324",
        "submission_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        CP sc =new CP();\n        sieveOfEratosthenes();\n        compute();\n        int tt = sc.nextInt();\n        while (tt-- > 0) {\n            int n = sc.nextInt();\n            System.out.println(A[n]);\n        }\n    }\n    static long[] A = new long[1000001];\n    static void compute(){\n        A[1] = 0;\n        A[2] = 1;\n        for(int i=3;i<1000000;i++){\n            if(prime[i]){\n                A[i] = 2*A[i-1]%1000000007;\n            }else{\n                A[i] = A[i-1];\n            }\n        }\n    }\n    static boolean[] prime = new boolean[1000001];\n    static void sieveOfEratosthenes()\n    {\n    // Create a boolean array \"prime[0..n]\" and initialize\n    // all entries it as true. A value in prime[i] will\n    // finally be false if i is Not a prime, else true.\n    for(int i=0;i<1000000;i++)\n        prime[i] = true;\n\n    for(int p = 2; p*p <=1000000; p++)\n    {\n        // If prime[p] is not changed, then it is a prime\n        if(prime[p] == true)\n        {\n            // Update all multiples of p\n            for(int i = p*p; i <= 1000000; i += p)\n                prime[i] = false;\n        }\n    }\n}\n\n    /*****************************************************************************/\n    static class CP\n    {\n        BufferedReader bufferedReader;\n        StringTokenizer stringTokenizer;\n        public CP() {\n            bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n        }\n        int nextInt() {\n            return Integer.parseInt(NNNN());\n        }\n        long nextLong() {\n            return Long.parseLong(NNNN());\n        }\n        double nextDouble() {\n            return Double.parseDouble(NNNN());\n        }\n        String NNNN() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreElements()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                }\n                catch (IOException  e) {\n                    e.printStackTrace();\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n        String nextLine() {\n            String spl = \"\";\n            try {\n                spl = bufferedReader.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return spl;\n        }\n    }\n    /*****************************************************************************/\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479206,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6761071",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "shreyansh_shrey1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979925,
        "updated_at_ms": 1599979925,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:38:33.143Z",
        "__v": 0
    },
    {
        "_id": "5f606171468ccc0964b0c325",
        "submission_code": "#include<iostream>\n#include<vector>\n#include<map>\n#include<string>\n#include<stdio.h>\n#include<iterator>\n#include<stack>\n#include<queue>\n#include<set>\n#include<limits>\n#include<algorithm>\n#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 )\n#define all(v) begin(v),end(v)\n\nusing namespace std;\nusing ll = long long;\n\nll fac[1000010];\nll m = 1e9+7; \n\n\nll binpow(ll a, ll b) {\n    a %= m;\n    ll res = 1;\n    while (b > 0) {\n        if (b & 1)\n            res = res * a % m;\n        a = a * a % m;\n        b >>= 1;\n    }\n    return res;\n}\n\nll inv(ll a) {\n    return binpow(a,m-2)%m;\n}\n\nll ncr(ll n,ll r) {\n    return ((fac[n] * inv(fac[n-r]) % m) * inv(fac[r]))%m;\n}\n\nll x,y,x1,y1,x2,y2;\n\nll f(ll x,ll y) {\n    if(x==0 )\n        return 1;\n    return ncr(x+y,x);\n}\n\nll both() {\n    if(x1 < x2 && y1 > y2) return 0;\n    if(x1 > x2 && y1 < y2) return 0;\n    if(x1>x2) {\n        swap(x1,x2);swap(y1,y2);\n    }\n    return (f(x1,y1) * f(x2-x1,y2-y1) * f(x-x2,y-y2)) % m;\n}\n\nauto F() {\n    cin>>x>>y>>x1>>y1>>x2>>y2;\n    ll tot = f(x,y);\n    tot -= (f(x1,y1) * f(x-x1,y-y1))%m;\n    \n    tot += m;\n    tot %= m;\n    \n    tot -= (f(x2,y2) * f(x-x2,y-y2))%m;\n    tot += m;\n    tot %= m;\n    \n    tot += both();\n    return tot%m;\n}\n\nauto T() {\n    ll t;\n    cin >> t;\n    // cout<<t<<endl;\n    // t=1;\n    while (t--)\n    {\n        cout << F() << \"\\n\";\n    }\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    fac[0]=1;\n    for(ll i=1;i<=1000000;i++) {\n        fac[i] = fac[i-1] * i;\n        fac[i] %= m;\n    }\n    T();\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479199,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "4289507",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "praveen7777",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599979916,
        "updated_at_ms": 1599979916,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:38:41.233Z",
        "__v": 0
    },
    {
        "_id": "5f60617b468ccc0964b0c326",
        "submission_code": "//author:satwik_bhv1\n#include<bits/stdc++.h>\n//datatypes\n#define ll long long\n#define ld long double\n//loops\n#define fr(i,z,n) for(ll i=z;i<n;i++)\n#define br(i,z,n) for(ll i=z;i>n;i--)\n//operations\n#define mp  make_pair\n#define ff  first\n#define ss  second\n#define pub push_back\n#define all(v) v.begin(),v.end()\n//map\n#define mi map<ll,ll>\n//vectors\n#define vi vector<ll>\n#define vpi vector<pair<ll,ll> >\n//constants\n#define pi 3.1415926535897932384626\n#define mod 1000000007\n#define MAXN 100001\n/*notes\n    Don't use inbuilt fun for power\n    Range of longlong=(-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 )\n    INT_MAX = 2147483647(aprox 2*10^10)\n    INT_MIN = -2147483648\n    LLONG_MAX = 9223372036854775807\n    LLONG_MIN = -9223372036854775808\n    __int128_t\n    __gcd is the function in built for hcf\n    priority queue is max heap by default\n    topological sort -> khan's algo use bfs and indegree of node\n    sssp(positive weighted edges) -> Dijkstras\n    apsp -> Floydwarshall\n    MST -> kruskal(DSU)\n*/\nusing namespace std;\n//functions\nll power(ll x,ll y){ll res=1;while(y){if(y%2){res*=x;}y/=2;x*=x;} return res;}\nll power(ll x,ll y,ll z){ll res=1;while(y){if(y%2){res=(res*x)%z;}y/=2;x=(x*x)%z;} return res;}\nvoid fast() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }\nbool sortbysec(const pair<ll, ll>& a, const pair<ll, ll>& b) { return (a.second > b.second); }\nll ceil(ll x,ll y){return (x/y)+(x%y!=0);}\nconst int dx[4] = { -1, 1, 0, 0};\nconst int dy[4] = {0, 0, -1, 1};\nint dxx[] = { -1, -1, -1, 0, 0, 1, 1, 1 };\nint dyy[] = { -1, 0, 1, -1, 1, -1, 0, 1 };\nvoid solve()\n{\n    ll n,m;\n    cin>>n>>m;\n    char arr[n][m];\n    pair<string,string> str[n][m];\n    fr(i,0,n)\n    {\n        fr(j,0,m)\n        {\n            str[i][j]={\"\",\"\"};\n            cin>>arr[i][j];\n        }\n    }\n    string s=\"\",t=\"\";\n    fr(i,1,n)\n    {\n        str[i][0].ff=s+arr[i][0];\n        s=str[i][0].ff;\n        str[i][0].ss=t+'D';\n        t=str[i][0].ss;\n    }\n    s=\"\";\n    t=\"\";\n    fr(j,1,m)\n    {\n        str[0][j].ff=s+arr[0][j];\n        s=str[0][j].ff;\n        str[0][j].ss=t+'R';\n        t=str[0][j].ss;\n    }\n    fr(i,1,n)\n    {\n        fr(j,1,m)\n        {\n            if(str[i-1][j].ff.compare(str[i][j-1].ff)<0)\n            {\n                str[i][j].ff=str[i-1][j].ff+arr[i][j];\n                str[i][j].ss=str[i-1][j].ss+'D';\n            }\n            else\n            {\n                str[i][j].ff=str[i][j-1].ff+arr[i][j];\n                str[i][j].ss=str[i][j-1].ss+'R';\n            }\n        }\n    }\n    cout<<str[n-1][m-1].ss<<'\\n';\n}\nint main()\n{\n    fast();\n    ll t;\n    //t=1;\n    cin>>t;\n    fr(i,0,t)\n    {\n        cout<<\"Case #\"<<i+1<<\": \";\n        solve();\n    }\n}\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479197,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "2801145",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599979913,
        "updated_at_ms": 1599982313,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:38:51.485Z",
        "__v": 0
    },
    {
        "_id": "5f606183468ccc0964b0c327",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint main() {    \n    long int x_i[100],y_i[100],fx[100];\n    long int n,i,j;\n    long int test_cases;\n    long int min,minx,miny;\n    long int fxv,x,y;\n    scanf(\"%ld\",&test_cases);   \n    do\n    {\n    scanf(\"%ld\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%ld %ld\",&x_i[i],&y_i[i]);\n    }\n        \n    for(i=0;i<n;i++)\n    {\n        fxv=0;\n        x=x_i[i];\n        y=y_i[i];\n        for(j=0;j<n;j++)\n        {\n            if(j == i)\n                continue;\n            else\n                fxv+=pow((x-x_i[j]),2)+pow((y-y_i[j]),2);\n        }\n        fx[i]=fxv;\n    }\n    min=fx[0];\n    minx=x_i[0];\n    miny=y_i[0];\n    for(i=1;i<n;i++)\n    {\n        if(min>fx[i])\n        {\n            min=fx[i];\n            minx=x_i[i];\n            miny=y_i[i];\n        }\n    }\n    printf(\"%ld %ld\\n\",minx,miny);\n    test_cases--;\n    }while(test_cases != 0);\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479175,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4623005",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979871,
        "updated_at_ms": 1599981071,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:38:59.085Z",
        "__v": 0
    },
    {
        "_id": "5f606188468ccc0964b0c328",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef solution2(N):\n    f=1\n    count=0\n    m=[]\n    flag=0\n    mod=1000000007\n    f=math.factorial(N)\n    for k in range(1, f+1):\n        if f%k==0:\n            d=f//k\n            if d not in m:\n                gcd=math.gcd(k,d)\n                if gcd==1:\n                    m.append(k)\n            else:\n                return len(m)\n\n    #return len(m)\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        N= int(input())\n        res = solution2(N)\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479154,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979852,
        "updated_at_ms": 1599987052,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:39:04.935Z",
        "__v": 0
    },
    {
        "_id": "5f606192468ccc0964b0c329",
        "submission_code": "/*\n _     _                             \n| |__ | |__   __ _  __ _ _   _  __ _ \n| '_ \\| '_ \\ / _` |/ _` | | | |/ _` |\n| |_) | | | | (_| | (_| | |_| | (_| |\n|_.__/|_| |_|\\__,_|\\__, |\\__, |\\__,_|\n                   |___/ |___/       \n*/\n#include<bits/stdc++.h>\n\n#define ll          long long\n#define pb          push_back\n#define ppb         pop_back\n#define BigInt      __int128\n#define endl        '\\n'\n#define mii         map<ll int,ll int>\n#define pii         pair<ll int,ll int>\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define hell        1000000007\n#define sim         template < class c\n#define ris         return * this\n#define dor         > debug & operator <<\n#define eni(x)      sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\n\nusing namespace std;\n\nsim > struct rge {c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cout << *x, 0);\nsim > char dud(...);\nstruct debug \n{\n    ~debug() \n    { \n        cout<<endl; \n    }\n    eni(!=) cout << boolalpha << i; ris; }\n    eni(==) ris << range(begin(i), end(i)); }\n    sim, class b dor(pair < b, c > d) \n    {\n        ris << \"(\" << d.first << \", \" << d.second << \")\";\n    }\n    sim dor(rge<c> d) \n    {\n          *this << \"[\";\n          for (auto it = d.b; it != d.e; ++it)\n            *this << \", \" + 2 * (it == d.b) << *it;\n          ris << \"]\";\n    }\n};\n#define fuck(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define N  205\n\nstruct BipartiteMatcher {\n  vector<vector<int>> G;\n  vector<int> L, R, Viz;\n  \n  BipartiteMatcher(int n, int m) :\n  G(n), L(n, -1), R(m, -1), Viz(n) {}\n  \n  void AddEdge(int a, int b) {\n    G[a].push_back(b);\n  }\n  \n  bool Match(int node) {\n    if (Viz[node])\n      return false;\n    Viz[node] = true;\n    \n    for (auto vec : G[node]) {\n      if (R[vec] == -1) {\n        L[node] = vec;\n        R[vec] = node;\n        return true;\n      }\n    }\n    \n    for (auto vec : G[node]) {\n      if (Match(R[vec])) {\n        L[node] = vec;\n        R[vec] = node;\n        return true;\n      }\n    }\n    \n    return false;\n  }\n  \n  int Solve() {\n    int ok = true;\n    while (ok--) {\n      fill(Viz.begin(), Viz.end(), 0);\n      for (int i = 0; i < (int)L.size(); ++i)\n        if (L[i] == -1)\n          ok |= Match(i);\n    }\n    \n    int ret = 0;\n    for (int i = 0; i < L.size(); ++i)\n      ret += (L[i] != -1);\n    return ret;\n  }\n};\n\nint n, m;\n\nbool vis[N][N];\n\nint id[N][N];\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int TESTS=1;\n    cin>>TESTS;\n    ll int tt = 0;\n    while(TESTS--)\n    {\n        cin >> n >> m;\n        for(int i = 0; i <= n + 2; i++)\n        {\n            for(int j = 0; j <= n + 2; j++)\n            {\n                vis[i][j] = false;\n                id[i][j] = -1;\n            }\n        }\n        for(int i = 1; i <= m; i++)\n        {\n            int x, y;\n            cin >> x >> y;\n            vis[x][y] = true;\n        }\n        int cnt = 0;\n        for(ll int i = 1; i <= n; i++)\n        {\n            for(ll int j = 1; j <= n; j++)\n            {\n                if(!vis[i][j])\n                {\n                    id[i][j] = cnt++;\n                }\n            }\n        }\n        vector<pii> edges;\n        for(int i = 1; i <= n; i++)\n        {\n            for(int j = 1; j <= n; j++)\n            {\n                if((i + j) % 2 == 0 && id[i][j] != -1)\n                {\n                    if(i + 2 <= n && j + 1 <= n && id[i + 2][j + 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 2][j + 1]});\n                    }\n                    if(i - 2 >= 1 && j + 1 <= n && id[i - 2][j + 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 2][j + 1]});\n                    }\n                    if(i + 2 <= n && j - 1 >= 1 && id[i + 2][j - 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 2][j - 1]});\n                    }\n                    if(i - 2 >= 0 && j - 1 >= 1 && id[i - 2][j - 1] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 2][j - 1]});\n                    }\n\n                    if(i + 1 <= n && j + 2 <= n && id[i + 1][j + 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 1][j + 2]});\n                    }\n                    if(i - 1 >= 1 && j + 2 <= n && id[i - 1][j + 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 1][j + 2]});\n                    }\n                    if(i + 1 <= n && j - 2 >= 1 && id[i + 1][j - 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i + 1][j - 2]});\n                    }\n                    if(i - 1 >= 1 && j - 2 >= 1 && id[i - 1][j - 2] != -1)\n                    {\n                        edges.pb({id[i][j], id[i - 1][j - 2]});\n                    }\n                }\n            }\n        }\n        // for(ll int i = 1; i <= n; i++)\n        // {\n        //     for(ll int j = 1; j <= n; j++)\n        //     {\n        //         cout << id[i][j] << \" \";\n        //     }\n        //     cout << endl;\n        // }\n        // debug() << fuck(edges) ;\n        BipartiteMatcher bm(cnt, edges.size());\n        for(auto it : edges)\n        {\n            bm.AddEdge(it.F, it.S);\n        }\n        int mm = bm.Solve();\n        int mvc = mm;\n        int is = cnt - mvc;\n        cout << \"Case #\" << ++tt << \": \";\n        cout << is << endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479141,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599979831,
        "updated_at_ms": 1599979831,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:39:14.037Z",
        "__v": 0
    },
    {
        "_id": "5f60619c468ccc0964b0c32a",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        List<Integer> list1=new ArrayList<>();\n        List<Integer> list2=new ArrayList<>();\n        \n        while(n!=0){\n            int tc=sc.nextInt();\n            while(tc!=0){\n                 int a=sc.nextInt();\n            int b=sc.nextInt();\n            list1.add(a);\n            list2.add(b);\n            tc--;\n            }\n            int index=0;\n            int min_res=Integer.MAX_VALUE;\n            for(int i=0;i<list1.size();i++){\n                int x=list1.get(i);\n                int y=list2.get(i);\n                int res=0;\n                for(int j=0;j<list1.size();j++){\n                    res=(int)(res+Math.pow((list1.get(j)-x),2)+Math.pow((list2.get(j)-y),2));\n                }\n                if(min_res>res){\n                    min_res=res;\n                    index=i;\n                }\n            }\n            System.out.println(list1.get(index)+\" \"+list2.get(index));\n        n--;\n        list1.clear();\n        list2.clear();\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479134,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4675172",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Likhita_AVL",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979813,
        "updated_at_ms": 1599979813,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:39:24.444Z",
        "__v": 0
    },
    {
        "_id": "5f6061a2468ccc0964b0c32b",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            System.out.println(countprimes(v));\n        }\n    }\n    static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        else if(b==0||a==b)\n            return a;\n        else if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static int countprimes(int n)\n    {\n        int count=1;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479125,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979802,
        "updated_at_ms": 1600000202,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:39:30.690Z",
        "__v": 0
    },
    {
        "_id": "5f6061ac468ccc0964b0c32c",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    public static ArrayList<Integer> temp;\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int maxN=Integer.MIN_VALUE,t=sc.nextInt();\n        int arrN[]=new int[t];\n        for(int i=0;i<t;i++){\n            arrN[i]=sc.nextInt(); \n            maxN=Integer.max(maxN,arrN[i]);\n        }\n        HashMap<Integer,ArrayList<Integer>> map=new HashMap<>();\n        for(int i=1;i<=maxN;i++){\n            temp=new ArrayList<>();\n            primeFactors(i);\n            //System.out.println(i+\" : \"+temp);\n            map.put(i,temp);\n        }\n        //System.out.println(map);\n        HashMap<Integer,Integer> tempMap=new HashMap<>();\n        int freq[]=new int[maxN+1];\n        for(int i=1;i<=maxN;i++){\n            ArrayList<Integer> tempp=new ArrayList<>();\n            tempp=map.get(i);\n            for(int j=0;j<tempp.size();j++){\n                if(!tempMap.containsKey(tempp.get(j)))\n                    tempMap.put(tempp.get(j),0);\n                tempMap.replace(tempp.get(j),tempMap.get(tempp.get(j))+1);\n            }\n            //System.out.println(tempMap);\n            freq[i]=tempMap.size();\n        }\n        /*for(int i1=1;i1<=maxN;i1++){\n            for(int i=1;i<=i1;i++){\n                ArrayList<Integer> tempp=new ArrayList<>();\n                tempp=map.get(i);\n                for(int j=0;j<tempp.size();j++){\n                    if(!tempMap.containsKey(tempp.get(j)))\n                        tempMap.put(tempp.get(j),0);\n                    tempMap.replace(tempp.get(j),tempMap.get(tempp.get(j))+1);\n                }\n            }\n            //System.out.println(tempMap);\n            freq[i1]=tempMap.size();\n            tempMap=new HashMap<>();\n        }*/\n        for(int i=0;i<t;i++)\n            System.out.println(freq[arrN[i]]);\n    }\n    public static void primeFactors(int n){\n        while(n%2==0){ \n            temp.add(2); \n            n/=2; \n        } \n        for(int i=3;i<=Math.sqrt(n);i+=2){\n            while(n%i==0){ \n                System.out.print(i+ \" \"); \n                n/=i; \n            } \n        } \n        if(n>2) \n            temp.add(n);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479119,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3770682",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "aamukthaaukunoo1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979791,
        "updated_at_ms": 1599980991,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:39:40.285Z",
        "__v": 0
    },
    {
        "_id": "5f6061b5468ccc0964b0c32d",
        "submission_code": "from bisect import bisect_right,bisect_left\nfor t in range(int(input())):\n    n=int(input())\n    l=[]\n    for i in range(n):\n        a=list(map(int,input().split()))\n        l.append(a)\n    l.sort()\n    xm,ym=0,0\n    for i in range(n):\n        xm+=l[i][0]\n        ym+=l[i][1]\n    xm=xm//n\n    ym=ym//n\n    p=[xm,ym]\n    m=0\n    s=(xm-l[0][0])**2+(ym-l[0][1])**2\n    for j in range(1,n):\n        a=(xm-l[j][0])**2+(ym-l[j][1])**2\n        if a<s:\n            m=j\n            s=a\n    print(*l[m])\n    \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479118,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4684377",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "karthikreddy_10",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979790,
        "updated_at_ms": 1599980990,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:39:49.233Z",
        "__v": 0
    },
    {
        "_id": "5f6061bd468ccc0964b0c32e",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\n\n\n\nint main() \n{\n    int T,N,i,j,k,Nfact,x,y,count,gcd=0;\n    scanf(\"%d\",&T);\n    for(i=0;i<T;i++)\n    {\n        count=0;\n        scanf(\"%d\",&N);\n        Nfact=1;\n        for(j=2;j<=N;j++)\n        {\n         Nfact=Nfact* j;  \n        }\n        \n        for(j=1;j<=sqrt(Nfact);j++)\n        { \n            if(Nfact%j==0)\n            {\n            x=j;\n            y=Nfact/j;\n                for(k=1; k <= x && k <= y; ++k)\n                   {\n        \n                     if(x%k==0 && y%k==0)\n                     gcd = k;\n                     }\n                if(gcd==1)\n                    count++;\n                    \n            }\n        }\n        printf(\"%d\\n\",count);\n        \n    }\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479115,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5970394",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "NISHANK_CH",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979785,
        "updated_at_ms": 1599979785,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:39:57.133Z",
        "__v": 0
    },
    {
        "_id": "5f6061c7468ccc0964b0c32f",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner s=new Scanner(System.in);\n        int t=s.nextInt();\n        while(t>0){\n            int n=s.nextInt();\n            int arr[][]=new int[n][2];\n            for(int i=0;i<n;i++){\n                arr[i][0]=s.nextInt();\n                arr[i][1]=s.nextInt();\n            }\n            int x=n/2;\n            if(n==2){\n                System.out.println(arr[0][0]+\" \"+arr[0][1]);\n            }\n            else if(x%2==0){\n                System.out.println(arr[x-1][0]+\" \"+arr[x-1][1]);\n            }\n            else{\n                System.out.println(arr[x][0]+\" \"+arr[x][1]);\n            }\n            t--;\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479109,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5598553",
        "submission_status": "Wrong Answer",
        "submission_language": "java8",
        "site_user_handle": "manmeet02012001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979780,
        "updated_at_ms": 1599980980,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:40:07.298Z",
        "__v": 0
    },
    {
        "_id": "5f6061cc468ccc0964b0c330",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef solution2(N):\n    f=1\n    count=0\n    m=[]\n    flag=0\n    mod=1000000007\n    f=math.factorial(N)\n    for k in range(1, f+1):\n        if f%k==0:\n            d=f//k\n            if d not in m:\n                gcd=math.gcd(k,d)\n                if gcd==1:\n                    m.append(k)\n\n    return len(m)\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        N= int(input())\n        res = solution2(N)\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479092,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979748,
        "updated_at_ms": 1599985748,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:40:12.990Z",
        "__v": 0
    },
    {
        "_id": "5f6061d6468ccc0964b0c331",
        "submission_code": "import sys\nimport math \n\ndef supFact(a):\n    c=0\n    for j in range(1,math.factorial(a+1)):\n        for k in range(1,math.factorial(a+1)):\n            if((j<k) and math.gcd(j,k)==1):\n                if(k*j==math.factorial(a)):\n                    c+=1\n    return c\n\nk=int(input())\nfor i in range(k):\n    c=0\n    n=int(input())\n    res=supFact(n)\n    print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479080,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8595924",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "saitejachalla201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979733,
        "updated_at_ms": 1599983333,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:40:22.141Z",
        "__v": 0
    },
    {
        "_id": "5f6061dd468ccc0964b0c332",
        "submission_code": "import math \ndef gcd(a,b): \n      \n    # Everything divides 0  \n    if (b == 0): \n         return a \n    return gcd(b,a%b)\ndef modFact(n, p): \n    if n >= p: \n        return 0    \n  \n    result = 1\n    for i in range(1, n + 1): \n        result = (result * i) % p  \n  \n    return result \nfor i in range(int(input())):\n    n=int(input())\n    m=1000000007\n    if(n==1 or n==2):\n        print(1)\n    else:\n        ans=modFact(n,m)\n        c=0    \n        #print(ans)\n        f=math.sqrt((ans))\n        for i in range(1,int(f)+1):\n            if(ans%i==0):\n                #print(\"i=\"+str(i))\n                if(gcd(i,ans//i)==1):\n                    c=((c%m)+(1%m))%m\n        print(c%m)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479064,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5796840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979716,
        "updated_at_ms": 1599983316,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:40:29.362Z",
        "__v": 0
    },
    {
        "_id": "5f6061e6468ccc0964b0c333",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define mod 1000000007\nunsigned long long power(int x,long long int y)  \n{  \n    unsigned long long temp;  \n    if(y == 0)  \n        return 1;  \n    temp = power(x, y / 2)%mod;  \n    if (y % 2 == 0)  \n        return (temp * temp)%mod;  \n    else\n    {  \n        if(y > 0)  \n            return (x * temp * temp)%mod;  \n        else\n            return ((temp * temp) / x)%mod;  \n    }  \n}\nint main() {\n    long long t,n,i,j,prime[1000009],c=0;\n    cin>>t;\n    for(i=1;i<=1000005;i++){\n        prime[i]=1;\n    }\n    for(i=2;i<=1000005;i++){\n        if(prime[i]==1){\n            for(j=2*i;j<=1000005;j=j+i){\n                prime[j]++;\n            }\n        }\n    }\n    while(t--){\n        c=0;\n        cin>>n;\n        for(i=2;i<=n;i++){\n            if(prime[i]==1){\n                c++;\n            }\n        }\n        printf(\"%llu\\n\",power(2,c-1));\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479058,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979705,
        "updated_at_ms": 1599982105,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:40:38.066Z",
        "__v": 0
    },
    {
        "_id": "5f6061ec468ccc0964b0c334",
        "submission_code": "def max_knight(N, M) :  \n  \n    # Check for corner case #1  \n    # If row or column is 1  \n    if (M == 1 or N == 1) : \n  \n        # If yes, then simply print total blocks  \n        # which will be the max of row or column  \n        return max(M, N);  \n  \n    # Check for corner case #2  \n    # If row or column is 2  \n    elif (M == 2 or N == 2) : \n  \n        # If yes, then simply calculate  \n        # consecutive 2 rows or columns  \n        c = 0;  \n        c = (max(M, N) // 4) * 4;  \n  \n        if (max(M, N) % 4 == 1) : \n            c += 2;  \n          \n        elif (max(M, N) % 4 > 1) : \n            c += 4;  \n  \n        return c;  \n  \n    # For general case, just print the  \n    # half of total blocks  \n    else : \n        return (((M * N) + 1) // 2);  \n  \n# Driver code  \nif __name__ == \"__main__\" :  \n  \n    N = 4; M = 5;  \n  \n    print(max_knight(N, M)); ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479051,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "4329641",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "gaddamapoorvare1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599979694,
        "updated_at_ms": 1599979694,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:40:44.621Z",
        "__v": 0
    },
    {
        "_id": "5f6061f5468ccc0964b0c335",
        "submission_code": "import java.io.*;\nimport java.util.*;\nclass Gcd{  \n    public int gcd(int a, int b) {   \n        int res=0;\n        for(int i = 1; i <= a && i <= b; ++i)\n        {\n            // Checks if i is factor of both integers\n            if(a % i==0 && b % i==0)\n                res = i;\n        }\n        return res;\n        \n    } \n    public boolean coprime(int a, int b) { \n        return (gcd(a, b) == 1); \n    }  \n    public int numOfPairs(ArrayList<Integer> arr, int n,int res){            \n        int count = 0;  \n        for (int i = 0; i < n - 1; i++){\n            for (int j = i + 1; j < n; j++) {\n                if (coprime(arr.get(i), arr.get(j)) && arr.get(i)*arr.get(j)==res){\n                    count++;\n                }\n            }\n        }\n        return count; \n    } \n}\npublic class Solution {\n    public static void main(String[] args) {\n        Gcd obj=new Gcd();\n        int ans=0;\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++){\n            int n=sc.nextInt();\n            int fact=1;\n            for(int j=1;j<n+1;j++){\n                fact*=j;\n            }\n            ArrayList<Integer> list=new ArrayList<Integer>();\n            for(int k=1;k<fact+1;k++){\n                if(fact%k==0)\n                    list.add(k);\n            }\n            ans=obj.numOfPairs(list,list.size(),fact);   \n            System.out.println(ans);\n            }\n        }\n    }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479029,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979669,
        "updated_at_ms": 1599986869,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:40:53.315Z",
        "__v": 0
    },
    {
        "_id": "5f6061fe468ccc0964b0c336",
        "submission_code": "test=int(input())\nfor _ in range(test):\n    n=int(input())\n    if n%2==1:\n        print(((n//2)+1)%(10**9+7))\n    else:\n        print((n//2)%(10**9+7))\n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479019,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9699297",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "idiotman365",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979658,
        "updated_at_ms": 1599979658,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:41:02.028Z",
        "__v": 0
    },
    {
        "_id": "5f606203468ccc0964b0c337",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int n,t,i,j,k;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        int x[n],y[n],f[n];\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d%d\",&x[j],&y[j]);\n            f[j]=0;\n        }\n        for(j=0;j<n;j++)\n        {\n            for(k=0;k<n;k++)\n            {\n                f[j]=f[j]+((x[j]-x[k])*(x[j]-x[k]))+((y[j]-y[k])*(y[j]-y[k]));\n            }\n        }\n        int min=0;\n        for(j=0;j<n;j++)\n        {\n            //printf(\"%d \",f[j]);\n            if(f[min]>f[j])\n                min=j;\n        }\n        //printf(\"\\n\");\n        printf(\"%d %d\\n\",x[min],y[min]);\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479017,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7351356",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218733008CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979652,
        "updated_at_ms": 1599979652,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:41:07.659Z",
        "__v": 0
    },
    {
        "_id": "5f60620c468ccc0964b0c338",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args)throws IOException  {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        \n        long inp=Long.parseLong(br.readLine());\n        for(long i=0;i<inp;i++)\n        {\n            long num=Long.parseLong(br.readLine());\n            long fact=1;\n            for(long j=1;j<=num;j++)\n            {\n             fact=fact*j;   \n            }\n            long count=0;\n            for(long o=1;o<=fact;o++)\n            {\n                for(long p=1;p<=fact;p++)\n                {\n                    if(o*p==fact)\n                    {\n                        if(o%p!=0 || o==1 ||p==1)\n                        {\n                            long gr=o;\n                            if(o>p)\n                            {\n                              gr=o;  \n                            }\n                            else\n                            {\n                               gr=p; \n                            }\n                            int counter=0;\n                            for(long k=2;k<gr-1;k++)\n                            {\n                                if(o%k==0&&p%k==0)\n                                {\n                                  counter=1;\n                                    break;\n                                }\n                            }\n                            if(counter==0)\n                            {\n                                count=count+1;\n                            }\n                            \n                        }\n                        \n                    }\n                }\n            }\n            count=count/2;\n            System.out.println(count);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479014,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4698811",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "ashutosh_janrao1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979648,
        "updated_at_ms": 1599980848,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:41:16.280Z",
        "__v": 0
    },
    {
        "_id": "5f606216468ccc0964b0c339",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\nvoid solve()\n{\n    int n ; cin >> n; \n    long long _x2 = 0, _y2 = 0, _x = 0, _y = 0, c = 0;\n    long long x[n], y[n] ;\n    for(int i = 0; i < n ; i++)\n    {\n        cin >> x[i] >> y[i] ;\n        if(x != 0) _x2++ ;\n        if(y != 0) _y2++ ;\n        _x -= (x[i] << 1) ;\n        _y -= (y[i] << 1) ;\n        c += ((x[i] * x[i]) + (y[i] * y[i])) ;\n    }\n    pair< int, int > ans ;\n    long long val = LLONG_MAX ;  \n    for(int i = 0; i < n ; i++)\n    {\n        long long cval = (_x2 * (x[i] * x[i])) + (_y2 * (y[i] * y[i])) + (_x * x[i]) + (_y * y[i]) + c ;\n        if(cval < val)\n        {\n            ans = {x[i], y[i]};\n            val = cval ;\n        }\n    }\n    cout << ans.first << \" \" << ans.second << \"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL); cout.tie(NULL);\n    int t = 1; cin >> t;\n    while(t--) solve();\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326479012,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5876221",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "NMN5G9",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979645,
        "updated_at_ms": 1599980845,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:41:26.682Z",
        "__v": 0
    },
    {
        "_id": "5f60621e468ccc0964b0c33a",
        "submission_code": "#include<bits/stdc++.h>\n\nusing namespace std;\ntypedef unsigned long long ll;\ntypedef long double ld;\ntypedef double db; \ntypedef string str; \n#define mp make_pair\n#define F first\n#define S second\n#define sz(x) (int)(x).size()\n#define all(x) begin(x), end(x)\n#define rall(x) (x).rbegin(), (x).rend() \n#define rsz resize\n#define ins insert \n#define ft front() \n#define bk back()\n#define pf push_front \n#define pb push_back\n#define all(x) begin(x), end(x)\n#define eb emplace_back \n#define lb lower_bound \n#define ub upper_bound  \nconst int Mod = 1e9 + 7; \nconst int MX = 2e5+5; \nconst int N = 10001;\nint n,m;\nbool find(vector< pair< int , ll > > v[], int u, vector< bool> & vis, ll x)\n{\n    //cout<<u<<\"\\n\";\n    \n    if(u == n*m -1)\n        return 1;\n    bool b = 0;\n    vis[u] = 1;\n    /*(auto i : v[u])\n    {\n\n        cout<<i.F<<\" \"<<(i.S&x)<<\"\\n\";\n    }\n    cout<<\"\\n\\n\";\n    */\n    for(auto i : v[u])\n    {\n\n        if( (i.S&x) ==  x && vis[i.F] == 0)\n        {\n            b = b | find(v, i.F, vis, x);\n            if(b)\n                return 1;\n        }\n\n    }\n    return b;\n}\nll ans(vector< pair< int , ll > > v[], ll bit)\n{\n    ll a = 0;\n    if(bit == -1)\n        return  0;\n    ll ans = 0;\n    //cout<<n<<\" \"<<m<<\"\\n\";\n        ll p = 0;\n        for(int i = bit; i>= 0; i--)\n        {\n            vector< bool > x(n*m);\n              x.assign(n*m, false);\n          \n              p = ans|1ll<<i;\n              if(find(v, 0, x, p)){\n                  //cout<<i<<\" \";\n                ans = ans|(1ll<<i);\n                p = ans;\n            }\n        }\n    return ans;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\n    int t;\n    cin>>t;\n    //cout<<t<<\"\\n\";\n    while(t--)\n    {\n        cin>>m>>n;\n        vector< pair< int, ll > > v[n*m];\n        for(int i =0; i < m;i++)\n        {\n            for(int j =0;j< n;j++)\n            {\n                if(i < m -1){\n                    ll l;\n                    cin>>l;\n                    v[i*n + j].pb({(i+1)*n+j, l});\n                    v[(i+1)*n+j].pb({(i)*n+j, l});\n                }\n                if(j < n -1)\n                {\n                    ll l;\n                    cin>>l;\n                    v[i*n + j].pb({(i)*n+j+1, l});\n                    v[(i)*n+j+1].pb({(i)*n+j, l});    \n                }\n                \n            }\n        }\n        cout<<ans(v, 63)<<\"\\n\";\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478986,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "9693257",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "sg0071729",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599979603,
        "updated_at_ms": 1599979603,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:41:34.384Z",
        "__v": 0
    },
    {
        "_id": "5f606227468ccc0964b0c33b",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int t,i,j,k,n,m,tt;\n    cin>>t;\n    tt=t;\n    while(t--)\n    {\n        cin>>n>>m;\n        vector<vector<char>> vi(n,vector<char>(m,' ')),vd(n,vector<char>(m,' ')),vl(n,vector<char>(m,' '));\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cin>>vi[i][j];\n            }\n        }\n        for(i=m-1;i>=0;i--)\n        {\n            vd[n-1][i]='R';\n            vl[n-1][i]=vi[n-1][i];\n        }\n        for(i=n-1;i>=0;i--)\n        {\n            vd[i][m-1]='D';\n            vl[i][m-1]=vi[i][m-1];\n        }\n        \n        for(j=m-2;j>=0;j--)\n        {\n            for(i=n-2;i>=0;i--)\n            {\n                if(vi[i][j+1]<vi[i+1][j])\n                {\n                    vl[i][j]=vi[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else if(vi[i][j+1]>vi[i+1][j])\n                {\n                    vl[i][j]=vi[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                else\n                {\n                    if(vl[i][j+1]<vl[i+1][j])\n                {\n                    vl[i][j]=vl[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else\n                {\n                    vl[i][j]=vl[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                    \n                }\n            }\n        }\n        i=0;\n        j=0;\n        cout<<\"Case #\"<<tt-t<<\": \";\n        while(!(i==n-1&&j==m-1))\n        {\n            \n            if(vd[i][j]=='D')\n            {\n                cout<<'D';\n                i=i+1;\n                \n            }\n            else\n            {\n                cout<<'R';\n                j=j+1;\n                \n            }\n            \n        }\n        \n        /*for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cout<<vd[i][j]<<\" \";\n            }\n            cout<<endl;\n        }*/\n        \n        cout<<endl;\n            \n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478940,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599979529,
        "updated_at_ms": 1599980729,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:41:43.805Z",
        "__v": 0
    },
    {
        "_id": "5f60622d468ccc0964b0c33c",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    public static ArrayList<Integer> temp;\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int maxN=Integer.MIN_VALUE,t=sc.nextInt();\n        int arrN[]=new int[t];\n        for(int i=0;i<t;i++){\n            arrN[i]=sc.nextInt(); \n            maxN=Integer.max(maxN,arrN[i]);\n        }\n        HashMap<Integer,ArrayList<Integer>> map=new HashMap<>();\n        for(int i=1;i<=maxN;i++){\n            temp=new ArrayList<>();\n            primeFactors(i);\n            //System.out.println(i+\" : \"+temp);\n            map.put(i,temp);\n        }\n        //System.out.println(map);\n        HashMap<Integer,Integer> tempMap=new HashMap<>();\n        int freq[]=new int[maxN+1];\n        for(int i1=1;i1<=maxN;i1++){\n            for(int i=1;i<=i1;i++){\n                ArrayList<Integer> tempp=new ArrayList<>();\n                tempp=map.get(i);\n                for(int j=0;j<tempp.size();j++){\n                    if(!tempMap.containsKey(tempp.get(j)))\n                        tempMap.put(tempp.get(j),0);\n                    tempMap.replace(tempp.get(j),tempMap.get(tempp.get(j))+1);\n                }\n            }\n            //System.out.println(tempMap);\n            freq[i1]=tempMap.size();\n            tempMap=new HashMap<>();\n        }\n        for(int i=0;i<t;i++)\n            System.out.println(freq[arrN[i]]);\n    }\n    public static void primeFactors(int n){\n        while(n%2==0){ \n            temp.add(2); \n            n/=2; \n        } \n        for(int i=3;i<=Math.sqrt(n);i+=2){\n            while(n%i==0){ \n                System.out.print(i+ \" \"); \n                n/=i; \n            } \n        } \n        if(n>2) \n            temp.add(n);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478910,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3770682",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "aamukthaaukunoo1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979493,
        "updated_at_ms": 1599979493,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:41:49.942Z",
        "__v": 0
    },
    {
        "_id": "5f606236468ccc0964b0c33d",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n\n// https://atcoder.jp/posts/518\n// #include <atcoder/convolution>\n// #include <atcoder/dsu>\n// #include <atcoder/fenwicktree>\n// #include <atcoder/lazysegtree>\n// #include <atcoder/math>\n// #include <atcoder/maxflow>\n// #include <atcoder/mincostflow>\n// #include <atcoder/modint>\n// #include <atcoder/scc>\n// #include <atcoder/segtree>\n// #include <atcoder/string>\n// #include <atcoder/twosat>\n// using namespace atcoder;\n\nusing ld = long double;\n#define int long long\n\n#define F first\n#define S second\n#define s(x) set<x>\n#define um(x, y) unordered_map<x, y>\n#define m(x, y) map<x, y>\n#define p(x, y) pair<x, y>\n#define v(x) vector<x>\n#define min_heap(t) priority_queue<t, vector<t>, greater<t>>\n#define max_heap(t) priority_queue<t>\n\n#define eb emplace_back\n#define mp make_pair\n#define bs binary_search\n#define lb lower_bound\n#define ub upper_bound\n\n#define all(v) v.begin(), v.end()\n#define ss(v) stable_sort(all(v))\n#define fori(i, a, b) for (int i = a; i <= b; i++)\n#define rofi(i, a, b) for (int i = a; i >= b; --i)\n#define scn(v1)        \\\n    for (auto &x : v1) \\\n        cin >> x;\n#define deb(x) cout << #x << \"=\" << x << endl;\n#define R(x) reverse(all(x));\n\n#define FILE_READ_IN freopen(\"input.txt\", \"r\", stdin);\n#define FILE_READ_OUT freopen(\"output.txt\", \"w\", stdout);\n\n#define fastio                    \\\n    ios_base::sync_with_stdio(0); \\\n    cin.tie(0);                   \\\n    cout.tie(0);\n#define stprs(x) cout << fixed << setprecision(x);\n\nconst char nl = '\\n';\nconst char sp = ' ';\nconst int mod1 = 1e9 + 7;\nconst int mod2 = 998244353;\nconst ld PI = acos(-1);\n\n#define debug cerr\n#define name(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\ntemplate<class A>\nostream& operator << (ostream& out, const set<A> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            out << \", \";\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<class A>\nostream& operator << (ostream& out, const vector<A> &a) {\n    // out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            // out << \", \";\n            out << ' ';\n        out << *it;\n    }\n    return out;\n    return out << \"]\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const pair<A, B> &a) {\n    return out <<  \"(\" << a.first << \", \" << a.second << \")\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\ntemplate<class A, class B>\nostream& operator << (ostream& out, const unordered_map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<typename... T>\nvoid read(T&... args) {\n    ((cin >> args), ...);\n}\n\ntemplate<typename... T>\nvoid print(T... args) {\n    ((cout << args), ...);\n}\n\n// variables and consts\nconst int N = 10000000;\nint lp[N+1];\nvector<int> pr;\n// -- variables and consts --\n\nvoid primes() {\n    for (int i=2; i<=N; ++i) {\n        if (lp[i] == 0) {\n            lp[i] = i;\n            pr.push_back (i);\n        }\n        for (int j=0; j<(int)pr.size() && pr[j]<=lp[i] && i*pr[j]<=N; ++j)\n            lp[i * pr[j]] = pr[j];\n    }\n}\n\nint upb(int n) {\n    int l = 0;\n    int h = pr.size() - 1ll;\n    int ans;\n    while(l <= h) {\n        int mid = (l+h) / 2;\n        if(pr[mid] == n) return mid;\n        if(pr[mid] > n) {\n            ans = mid;\n            h = mid-1;\n        } else {\n            l = mid+1;\n        }\n    }\n    return ans;\n}\n\nint po(int a) {\n    if(a == 1) {\n        return 2ll;\n    } else if(a == 0) {\n        return 1ll;\n    }\n    int p = po(a/2);\n    p *= p;\n    p %= mod1;\n    if(a&1) {\n        p *= 2;\n        if(p >= mod1) {\n            p -= mod1;\n        }\n    }\n    return p;\n}\n\nvoid solve(void) {\n    int n;\n    read(n);\n    if(n == 1) {\n        print(\"0\\n\");\n        return;\n    }\n    int k = upb(n);\n    // debug << name(k);\n    while(pr[k] > n) -- k;\n    print(po(k), nl);\n}\n\nint32_t main(void) {\n    fastio\n    int __ = 1;\n    primes();\n    read(__);\n    while (__--) {\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478903,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5078334",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "the_pythor",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979480,
        "updated_at_ms": 1599985480,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:41:58.425Z",
        "__v": 0
    },
    {
        "_id": "5f60623e468ccc0964b0c33e",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nvector<int>v;\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    }\n    for(int i=2;i<=n;i++ ){\n        if(prime[i]==true)\n            v.push_back(i);\n    }\n}\n\nint main() {\n    ll int t,n;\n     ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<1<<\" \";\n        else{\n            // ll int p;\n            ll int r=lower_bound(v.begin(),v.end(),n)-v.begin();\n            if (v[r]==n){\n             r+=1;   \n            }\n            // cout<<r<<\" \";\n            r-=1;\n            ll int ans=pow(2,r);\n            ans=(ans%mod);\n            cout<<ans<<\"\\n\";\n        }\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478899,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5620816",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "Navanbairisetty1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979473,
        "updated_at_ms": 1599980673,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:42:06.025Z",
        "__v": 0
    },
    {
        "_id": "5f606245468ccc0964b0c33f",
        "submission_code": "def max_knight(n, m) : \n\n    if (m == 1 or n == 1) : \n\n        return max(m, n); \n\n    elif (m == 2 or n == 2) : \n\n        \n        c = 0; \n        c = (max(m, n) // 4) * 4; \n\n        if (max(m, n) % 4 == 1) : \n            c += 2; \n        \n        elif (max(m, n) % 4 > 1) : \n            c += 4; \n\n        return c; \n\n    \n    else : \n        return (((m * n) + 1) // 2); \n\nif _name_ == \"_main_\" : \n    n=3;m=0;\n    print(max_knight(n, m));",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478883,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "6639775",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "Vangaveetimanis1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599979446,
        "updated_at_ms": 1599979446,
        "misc_notes": "[\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:42:13.193Z",
        "__v": 0
    },
    {
        "_id": "5f60624e468ccc0964b0c340",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef solution2(N):\n    f=1\n    count=1\n    m=[]\n    flag=0\n    mod=1000000007\n    f=math.factorial(N)\n    for k in range(1, f+1):\n        if f%k==0:\n            m.append(k)\n    \n       \n    for j in range(1,len(m)-2):\n        p=m[j]\n        for i in range(j+1,len(m)-1):\n           \n            q=m[i]\n            if p*q==f:\n                r=math.gcd(p,q)\n                flag=1\n                if r==1 and flag==1 :\n                    count+=1\n                    flag=0\n    return count%mod\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        N= int(input())\n        res = solution2(N)\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478882,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979442,
        "updated_at_ms": 1599984242,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:42:22.305Z",
        "__v": 0
    },
    {
        "_id": "5f606255468ccc0964b0c341",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst long long LIMIT = 1e9+7;\nconst int SIZE = 1e6+10;\nlong long fact[SIZE+1];\n\nlong long powMod(long long x, int y){\n    int res = 1;\n    while(y){\n        if(y&1) res = (res*x) % LIMIT;\n        y = y >> 1;\n        x = (x*x) % LIMIT;\n    }\n    return res;\n}\n\nlong long invMod(int x){\n    return powMod(x, LIMIT-2);\n}\n\nlong long C(int n, int r){\n   return (fact[n] * invMod(fact[r]) % LIMIT * invMod(fact[n - r]) % LIMIT) % LIMIT;\n}\n\n\n// #WHSafe = #WH - (#BH1*#WHBH1) - (#BH2*#WHBH2) + (#BH1*#BH1BH2)  \n\nvoid solve(){\n    int x1, x2, y1, y2, x, y;\n    cin >> x >> y;\n    cin >> x1 >> y1;\n    cin >> x2 >> y2;\n    \n    long long ans = C(x+y, x);\n    ans = (LIMIT + ans - ((C(x1+y1, x1)*C(x+y-x1-y1, x-x1)) % LIMIT)) % LIMIT;\n    ans = (LIMIT + ans - ((C(x2+y2, x2)*C(x+y-x2-y2, x-x2)) % LIMIT)) % LIMIT;\n    ans = (ans + (( (C(x1+y1, x1)*C(x2+y2-x1-y1, x2-x1)) % LIMIT)*C(x+y-x2-y2, x-x2)) % LIMIT) % LIMIT;\n    \n    // - ((C(x1+y1, x1)*C(x+y-x1-y1, x-x1)) % LIMIT)\n    // - ((C(x2+y2, x2)*C(x+y-x2-y2, x-x2)) % LIMIT)\n    // + (C(x1+y1, x1)*C(x2+y2-x1-y1, x2-x1)*C(x+y-x2-y2, x-x2)) % LIMIT;\n    cout << ans << \"\\n\";\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    \n    fact[0] = fact[1] = 1;\n    for(int i = 2; i <= SIZE; ++i){\n        fact[i] = (i*fact[i-1]) % LIMIT;\n    }\n    \n    int T;\n    cin >> T;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478881,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9687262",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599979439,
        "updated_at_ms": 1599981839,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:42:29.266Z",
        "__v": 0
    },
    {
        "_id": "5f60625d468ccc0964b0c342",
        "submission_code": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    l=[]\n    x=0\n    y=0\n    for j in range(n):\n        l.append(list(map(int,input().split())))\n    #l.sort(key= lambda x: x[0]**2+x[1]**2)\n    for j in range(n):\n        x+=l[j][0]\n        y+=l[j][1]\n    x=x/n\n    y=y/n\n    m=0\n    s=(x-l[0][0])**2+(y-l[0][1])**2\n    for j in range(1,n):\n        a=(x-l[j][0])**2+(y-l[j][1])**2\n        if a<s:\n            m=j\n            s=a\n    print(*l[m])\n        \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478874,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4674163",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979434,
        "updated_at_ms": 1599983034,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:42:37.256Z",
        "__v": 0
    },
    {
        "_id": "5f606265468ccc0964b0c343",
        "submission_code": "import java.util.*;\nimport java.lang.*;\npublic class Main\n{\n    static int count=0;\n    public static boolean valid(int a[][],int i,int j,int x,int y){\n        if(i>=0 && i<=x && j>=0 && j<=y && a[i][j]==1){\n            return true;\n        }\n        return false;\n    }\n    public static void grid(int a[][],int i,int j,int x,int y){\n        if(i==x && j==y){\n            count=count+1;\n            count=(int)(count%(Math.pow(10,9)+7));\n            \n        }\n        else{\n            if(valid(a,i,j,x,y)){\n                \n                grid(a,i+1,j,x,y);\n                grid(a,i,j+1,x,y);\n            }\n        }\n        \n    }\n    public static void new_main(int a,int b,int a1,int b1,int a2,int b2){\n        int l[][]=new int[a+1][b+1];\n        for(int i=0;i<=a;i++){\n            for(int j=0;j<=b;j++){\n                l[i][j]=1;\n            }\n        }\n        l[a1][b1]=0;\n        l[a2][b2]=0;\n        grid(l,0,0,a,b);\n        System.out.println((int)(count%(Math.pow(10,9)+7)));\n        count=0;\n    }\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int test=sc.nextInt();\n        String p=sc.nextLine();\n        int x=0,y=0,x1=0,y1=0,x2=0,y2=0;\n        for (int i=0;i<test;i++){\n            String s=sc.nextLine();\n            String s1[]=s.split(\" \");\n            x=Integer.parseInt(s1[0]);\n            y=Integer.parseInt(s1[1]);\n            x1=Integer.parseInt(s1[2]);\n            y1=Integer.parseInt(s1[3]);\n            x2=Integer.parseInt(s1[4]);\n            y2=Integer.parseInt(s1[5]);\n            new_main(x,y,x1,y1,x2,y2);\n            \n        }\n        \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478868,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9338915",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "kenche_greeshma",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599979422,
        "updated_at_ms": 1599981822,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:42:45.344Z",
        "__v": 0
    },
    {
        "_id": "5f60626f468ccc0964b0c344",
        "submission_code": "def max_knight(n, m) : \n\n    if (m == 1 or n == 1) : \n\n        return max(m, n); \n\n    elif (m == 2 or n == 2) : \n\n        \n        c = 0; \n        c = (max(m, n) // 4) * 4; \n\n        if (max(m, n) % 4 == 1) : \n            c += 2; \n        \n        elif (max(m, n) % 4 > 1) : \n            c += 4; \n\n        return c; \n\n    \n    else : \n        return (((m * n) + 1) // 2); \n\nif _name_ == \"_main_\" : \n    n=3;m=0;\n    print(max_knight(n, m));",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478865,
        "contest_id": "115291",
        "problem_id": "177480",
        "site_user_id": "6639775",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "Vangaveetimanis1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Keypad Trouble",
        "problem_view_link": "keypad-trouble",
        "created_at_ms": 1599979411,
        "updated_at_ms": 1599979411,
        "misc_notes": "[\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:42:55.276Z",
        "__v": 0
    },
    {
        "_id": "5f606274468ccc0964b0c345",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include<bits/stdc++.h>\n#define ll long long\nll val = 1e9+7;\n#include <algorithm>\nusing namespace std;\nll power(ll x, unsigned ll y)  \n{   \n    ll p=val;\n    int res = 1;     // Initialize result  \n  \n    x = x % p; // Update x if it is more than or  \n                // equal to p \n   \n    if (x == 0) return 0; // In case x is divisible by p; \n  \n    while (y > 0)  \n    {  \n        // If y is odd, multiply x with result  \n        if (y & 1)  \n            res = (res*x) % p;  \n  \n        // y must be even now  \n        y = y>>1; // y = y/2  \n        x = (x*x) % p;  \n    }  \n    return res;  \n}  \n\nint main() {\n    // Initialize all numbers as prime \n    ios_base::sync_with_stdio();\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n        bool prime[1000001]; \n        for(int i=0;i<1000001;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=1000001; p++) \n        { \n            // If prime[p] is not changed, then it is a prime \n            if(prime[p] == true) \n            { \n                // Update all multiples of p \n                for(int i = p*p; i <= 1000001; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        // Print all prime numbers \n    vector<ll> v;\n        for(ll i = 2; i <= 1000001; i++) \n        { \n            if(prime[i] == true) \n                v.push_back(i); \n        } \n    \n    /*for(int i=0;i<10;i++)\n        cout<<v[i]<<\" \";*/\n    ll t;\n    scanf(\"%lld\",&t);\n    while(t--){\n        ll n;\n        scanf(\"%lld\",&n);\n        vector<ll> :: iterator it;\n        it = upper_bound(v.begin(),v.end(),n);\n        if(n!=1)\n        {ll j=it - v.begin() -1;\n        printf(\"%lld\\n\",(power(2,j))%val);\n        }\n        else\n            printf(\"0\\n\");\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478862,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5862783",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "Satya_raj887",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979405,
        "updated_at_ms": 1599979405,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:43:00.857Z",
        "__v": 0
    },
    {
        "_id": "5f60627c468ccc0964b0c346",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nlong int gcd(long int a,long int b) \n{ \n    // Everything divides 0  \n    if (a == 0) \n       return b; \n    if (b == 0) \n       return a; \n   \n    // base case \n    if (a == b) \n        return a; \n    if(a==1 || b==1)\n        return 1;\n    // a is greater \n    if (a > b) \n        return gcd(a-b, b); \n    return gcd(a, b-a); \n} \nlong int fact(long int n){\n    long int i,fac=1;\n    for(i=1;i<=n;i++){\n        fac=fac*i;\n    }\n    return fac;\n}\nlong int splitting(long int n){\n    long int i,j,x[n],c=0,cnt=0;\n    for(i=1;i<=n;i++){\n        if(n%i==0){\n            x[c++]=i;\n            //printf(\"%d \",x[c-1]);\n        }\n    }\n    //printf(\"\\n\");\n    for(i=0;i<c;i++){\n        for(j=i+1;j<c;j++){\n            if(x[i]*x[j]==n && gcd(x[i],x[j])==1){\n                cnt++;\n            }\n        }\n    }\n    return cnt;\n}\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    long int t,i,n,f,res;\n    scanf(\"%ld\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%ld\",&n);\n        f=fact(n);\n        res=splitting(f);\n        printf(\"%ld\\n\",res);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478856,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7351356",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218733008CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979398,
        "updated_at_ms": 1599979398,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:43:08.686Z",
        "__v": 0
    },
    {
        "_id": "5f606284468ccc0964b0c347",
        "submission_code": "// C++ program to print all primes smaller than or equal to \n// n using Sieve of Eratosthenes \n// https://www.geeksforgeeks.org/sieve-of-eratosthenes/\nconst int MOD = 1e9+7;\n#include <bits/stdc++.h> \nusing namespace std; \nint sieve(int n) \n{ \n    // Create a boolean array \"prime[0..n]\" and initialize \n    // all entries it as true. A value in prime[i] will \n    // finally be false if i is Not a prime, else true. \n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n\n    for (int p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        { \n            // Update all multiples of p greater than or \n            // equal to the square of it \n            // numbers which are multiple of p and are \n            // less than p^2 are already been marked. \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n    int count=0;\n    // Print all prime numbers \n    for (int p=2; p<=n; p++) \n    if (prime[p]) \n        count++; \n    return count%MOD;\n} \n\n// Driver Program to test above function \nint main() \n{ \n    int t;\n    cin>>t;\n    while(t--){\n        int n;\n        cin>>n;\n        cout << sieve(n)%MOD <<endl;\n    }\n    return 0; \n} \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478844,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4669945",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "160218733078CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979381,
        "updated_at_ms": 1599979381,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:43:16.063Z",
        "__v": 0
    },
    {
        "_id": "5f60628b468ccc0964b0c348",
        "submission_code": "/*input\n3\n3 3\nAAA\nAAA\nAAA\n3 4\nDSCG\nZFQL\nLMEV\n2 5\nTSNMX\nSRCVK\n*/\n/*\n\n**************************\n*                         *\n* AUTHOR :: shado_w      *\n*                         *\n**************************\n\n*/\n#include<bits/stdc++.h>\n#define lld          long long int\n#define pb          push_back\n#define ppb         pop_back\n#define    endl        '\\n'\n#define mii         map<lld,lld>\n#define msi         map<string,lld>\n#define mis         map<lld, string>\n#define mpi         map<pair<lld ,lld >,lld >\n#define pii         pair<lld,lld>\n#define vi          vector<lld>\n#define vpi         vector<pii>\n#define vs          vector<string>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define sz(x)       (lld)x.size()\n#define hell        1000000007\n#define rrep(i,m,n)    for(lld i=m;i>=n;i--)\n#define rep(i,m,n)    for(lld i=m;i<n;i++)\n#define lbnd        lower_bound\n#define ubnd        upper_bound\n#define bs          binary_search\n#define mp          make_pair\n#define what_is(x)  cerr << #x << \" is \" << x << endl;\n#define pr(x)         cout<< x << \" \";\n#define pre(x)        cout<< x << endl ;\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>; \n//change null_type to get ordered_map\n#define N  100005\nvector <vector<char>> a;\nvector <vector<bool>> Vis;\nint n,m;\nbool check(int i,int j){\n    if(i>=n or j>=m or Vis[i][j]){\n        return false;\n    }\n    return true;\n}\nstring res=\"\",ans=\"\";\nbool dfs(int x,int y){\n    if(x==n-1 && y==m-1){\n        return true;\n    }\n    if(Vis[x][y]){\n        return false;\n    }\n    bool p=false;\n    Vis[x][y]=true;\n    if(check(x+1,y) && a[x+1][y] == ans[x+y+1]){\n        p=dfs(x+1,y);\n        if(p){\n            res+=\"D\";\n            return true;\n        }\n    }\n    if(check(x,y+1) && a[x][y+1] == ans[x+y+1]){\n        p=dfs(x,y+1);\n        if(p){\n            res+=\"R\";\n            return true;\n        }\n    }\n    return false;\n}\nvoid solve()\n{\n    cin >> n >> m;\n    a.clear(),Vis.clear();\n    a.resize(n);\n    Vis.resize(n);\n    rep(i,0,n){\n        Vis[i].resize(m);\n        a[i].resize(m);\n        rep(j,0,m){\n            cin >> a[i][j];\n            Vis[i][j]=false;\n        }\n    }\n    res=\"\",ans=\"\";\n    vector <pair<int,int>> curr;\n    curr.pb({0,0});\n    for(int i=0;i<n+m-1;i++){\n        char mn='Z';\n        for(auto j:curr){\n            mn=min(mn,a[j.F][j.S]);\n        }\n        vector<pair<int,int>> curr2;\n        for(auto j:curr){\n            if(a[j.F][j.S]==mn){\n                int x=j.F,y=j.S;\n                if(check(x+1,y)){\n                    Vis[x+1][y]=true;\n                    curr2.pb({x+1,y});\n                }\n                if(check(x,y+1)){\n                    Vis[x][y+1]=true;\n                    curr2.pb({x,y+1});\n                }\n            }\n        }\n        curr=curr2;\n        ans+=mn;\n    }\n    rep(i,0,n){\n        rep(j,0,m){\n            Vis[i][j]=false;\n        }\n    }\n    dfs(0,0);\n    reverse(all(res));\n    cout << res << endl;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int tests=1;\n    cin >> tests;\n    int cn=0;\n    while(tests--)\n    {\n        cn++;\n        cout << \"Case #\" << cn << \": \";\n        solve();\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478841,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "1583809",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599979373,
        "updated_at_ms": 1599985373,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:43:23.845Z",
        "__v": 0
    },
    {
        "_id": "5f606295468ccc0964b0c349",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    public static int factorial(int n) \n    { \n        if (n == 0) \n          return 1; \n          \n        return n*factorial(n-1); \n    } \n    public static int gcd(int a, int b) \n    { \n        if (a == 0 || b == 0) \n            return 0; \n        if (a == b) \n            return a; \n        if (a > b) \n            return gcd(a-b, b); \n                  \n        return gcd(a, b-a); \n    } \n    public static boolean coprime(int a, int b) { \n          \n        if ( gcd(a, b) == 1) \n            return true;  \n        else\n            return false;      \n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int test=sc.nextInt();\n        int p=1;\n        while(p<=test)\n        {\n            int n=sc.nextInt();\n            int key=factorial(n);\n            int a[]=new int[100];\n            int h=0;\n            for (int i=1;i<=key;i++) \n            {\n                if (key%i==0) \n                {\n                    a[h]=i;\n                    h++;\n                }\n            }\n            int count=0;\n            int k=a.length;\n            for(int j=0;j<k-1;j++)\n            {\n                for(int m=j+1;m<k;m++)\n                {\n                    if (coprime(a[m],a[j])) \n                    {\n                        count++;\n                    }\n                }\n            }\n            System.out.println(count);\n            p++;\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478836,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6639775",
        "submission_status": "Wrong Answer",
        "submission_language": "java8",
        "site_user_handle": "Vangaveetimanis1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979359,
        "updated_at_ms": 1599979359,
        "misc_notes": "[\"Wrong Answer\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:43:33.163Z",
        "__v": 0
    },
    {
        "_id": "5f60629b468ccc0964b0c34a",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nvector<int>v;\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    }\n    for(int i=2;i<=n;i++ ){\n        if(prime[i]==true)\n            v.push_back(i);\n    }\n}\n\nint main() {\n    ll int t,n;\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<1<<\" \";\n        else{\n            // ll int p;\n            ll int r=lower_bound(v.begin(),v.end(),n)-v.begin();\n            if (v[r]==n){\n             r+=1;   \n            }\n            // cout<<r<<\" \";\n            r-=1;\n            ll int ans=pow(2,r);\n            ans=(ans%mod);\n            cout<<ans<<\"\\n\";\n        }\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478822,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5620816",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "Navanbairisetty1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979336,
        "updated_at_ms": 1599979336,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:43:39.510Z",
        "__v": 0
    },
    {
        "_id": "5f6062a2468ccc0964b0c34b",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef solution2(N):\n    f=1\n    count=0\n    m=[]\n    flag=0\n    mod=1000000007\n    f=math.factorial(N)\n    for k in range(1, f+1):\n        if f%k==0:\n            m.append(k)\n    \n       \n    for j in range(0,len(m)-1):\n        p=m[j]\n        for i in range(j+1,len(m)):\n           \n            q=m[i]\n            if p*q==f:\n                r=math.gcd(p,q)\n                flag=1\n                if r==1 and flag==1 :\n                    count+=1\n                    flag=0\n    return count%mod\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        N= int(input())\n        res = solution2(N)\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478819,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979326,
        "updated_at_ms": 1599982926,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:43:46.679Z",
        "__v": 0
    },
    {
        "_id": "5f6062ab468ccc0964b0c34c",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\n int\nmain ()\n{\n  \n \nint t, i;\n  \nscanf (\"%d\", &t);\n  \nwhile (t--)\n    \n    {\n      \nint n, b = 1, j, hcf=0, f = 0, k;\n      \nscanf (\"%d\", &n);\n      \nfor (i = 1; i <= n; i++)\n    \n    {\n      \nb = b * i;\n    \n}\n      \nfor (i = 1; i <= b; i++)\n    \n    {\n      \nfor (j = 1; j <= b; j++)\n        \n        {\n          \nif (i * j == b)\n        \n        {\n          \nint num1 = i, num2 = j;\n          \nfor (k = 1; k <= num1; k++)\n            \n            {\n              \nif (num1 % k == 0 && num2 % k == 0)\n            \n            {\n              \nhcf = k;\n            \n}\n            \n}\n          \nif (hcf == 1)\n            \n            {\n              \nf = f + 1;\n            \n}\n        \n \n}\n        \n \n}\n    \n}\n      \n\nprintf (\"%d\", f/2);\n      \nprintf (\"\\n\");\n    \n\n    \n \n \n}\n  \n \nreturn 0;\n\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478796,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9675923",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "manivardhanredd4",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979287,
        "updated_at_ms": 1599980487,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:43:55.952Z",
        "__v": 0
    },
    {
        "_id": "5f6062b6468ccc0964b0c34d",
        "submission_code": "import java.io.*;\nimport java.util.*;\nclass Gcd{  \n    public int gcd(int a, int b) {   \n        int res=0;\n        for(int i = 1; i <= a && i <= b; ++i)\n        {\n            // Checks if i is factor of both integers\n            if(a % i==0 && b % i==0)\n                res = i;\n        }\n        return res;\n        \n    } \n    public boolean coprime(int a, int b) { \n        return (gcd(a, b) == 1); \n    }  \n    public int numOfPairs(ArrayList<Integer> arr, int n,int res){            \n        int count = 0;  \n        for (int i = 0; i < n - 1; i++){\n            for (int j = i + 1; j < n; j++) {\n                //System.out.println(\"Factors: \"+arr.get(i)+\" \"+arr.get(j));\n                if (coprime(arr.get(i), arr.get(j)) && arr.get(i)*arr.get(j)==res){\n                    count++;\n                    //System.out.println(\"Here\");\n                }\n            }\n        }\n        return count; \n    } \n}\npublic class Solution {\n    public static void main(String[] args) {\n        Gcd obj=new Gcd();\n        int ans=0;\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++){\n            int n=sc.nextInt();\n            int fact=1;\n            for(int j=1;j<n+1;j++){\n                fact*=j;\n            }\n            ArrayList<Integer> list=new ArrayList<Integer>();\n            for(int k=1;k<fact+1;k++){\n                if(fact%k==0)\n                    list.add(k);\n            }\n            //System.out.println(list);\n            ans=obj.numOfPairs(list,list.size(),fact);   \n            System.out.println(ans);\n            }\n        }\n    }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478775,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979258,
        "updated_at_ms": 1599985258,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:44:06.238Z",
        "__v": 0
    },
    {
        "_id": "5f6062c0468ccc0964b0c34e",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nvector<int>v;\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    }\n    for(int i=2;i<=n;i++ ){\n        if(prime[i]==true)\n            v.push_back(i);\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll int t,n;\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<0<<\"\\n\";\n        else{\n            ll int r=lower_bound(v.begin(),v.end(),n)-v.begin();\n            if (v[r]==n){\n             r+=1;   \n            }\n            r-=1;\n            long long int v=pow(2,r);\n            v=v%mod;\n            cout<<v<<\"\\n\";\n        }  \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478769,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979246,
        "updated_at_ms": 1599993646,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:44:16.783Z",
        "__v": 0
    },
    {
        "_id": "5f6062c8468ccc0964b0c34f",
        "submission_code": "\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n==1:\n        print(0)\n    elif n==2:\n        print(1)\n    else:\n        ans = 1\n        res = 0\n        flag = True\n        while res<n:\n            if flag:\n                res += ans*2\n                flag = not flag\n            else:\n                flag = not flag\n                ans = ans*2\n        print(ans)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478768,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2923379",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "mahesh_8842",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979245,
        "updated_at_ms": 1599982845,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:44:24.773Z",
        "__v": 0
    },
    {
        "_id": "5f6062d2468ccc0964b0c350",
        "submission_code": "def gcd(a,b):\n    while b != 0:\n        a, b = b, a%b\n    return a\n\ndef is_coprime(x, y):\n    return gcd(x, y) == 1\n\ndef factors(num):\n    f=[]\n    for i in range(1,num+1):\n        if num%i==0:\n            f.append(i)\n    return f\n\nT = int(input(\"\"))\nfor i in range(T):\n    num = int(input(\"\"))\n    factorial = 1\n    for k in range(1, num + 1):\n        factorial = factorial * k\n    final_list = []\n    fac_list = factors(factorial)\n    fac_list_rev = fac_list\n    for j in range(0, int(len(fac_list) / 2)):\n        temp = []\n        x = fac_list[j]\n        y = fac_list[(len(fac_list)-j - 1)]\n        if is_coprime(x,y):\n            temp.append(x)\n            temp.append(y)\n            final_list.append(temp)\n    print(len(final_list))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478764,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9633653",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "geetikaagarwal22",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979241,
        "updated_at_ms": 1599981641,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:44:34.422Z",
        "__v": 0
    },
    {
        "_id": "5f6062dc468ccc0964b0c351",
        "submission_code": "import java.io.*;\nimport java.util.*;\nclass Gcd{  \n    public int gcd(int a, int b) {   \n        int res=0;\n        for(int i = 1; i <= a && i <= b; ++i)\n        {\n            // Checks if i is factor of both integers\n            if(a % i==0 && b % i==0)\n                res = i;\n        }\n        return res;\n        \n    } \n    public boolean coprime(int a, int b) { \n        return (gcd(a, b) == 1); \n    }  \n    public int numOfPairs(ArrayList<Integer> arr, int n,int res){            \n        int count = 0;  \n        for (int i = 0; i < n - 1; i++){\n            for (int j = i + 1; j < n; j++) {\n                //System.out.println(\"Factors: \"+arr.get(i)+\" \"+arr.get(j));\n                if (coprime(arr.get(i), arr.get(j)) && arr.get(i)*arr.get(j)==res){\n                    count++;\n                    //System.out.println(\"Here\");\n                }\n            }\n        }\n        return count; \n    } \n}\npublic class Solution {\n    public static void main(String[] args) {\n        Gcd obj=new Gcd();\n        int ans=0;\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++){\n            int n=sc.nextInt();\n            int fact=1;\n            for(int j=1;j<n+1;j++){\n                fact*=j;\n            }\n            ArrayList<Integer> list=new ArrayList<Integer>();\n            for(int k=1;k<fact+1;k++){\n                if(fact%k==0)\n                    list.add(k);\n            }\n            //System.out.println(list);\n            ans=obj.numOfPairs(list,list.size(),fact);   \n            System.out.println(ans);\n            }\n        }\n    }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478763,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979240,
        "updated_at_ms": 1599984040,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:44:44.233Z",
        "__v": 0
    },
    {
        "_id": "5f6062e5468ccc0964b0c352",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 1000005\n// #define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n// #define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\nmap<char,int> mp;\nstruct node{\n    int val = 0;\n    map<int,node*> m;\n} *root;\nnode* newnode(char c){\n    node* temp = new node;\n    temp->val = 0;\n    return temp;\n}\nmap<string,int> m;\nvoid add(string s){\n    int n = s.size();\n    node* cur = root;\n    rep(i,0,n){\n        cur->val++;\n        if(cur->m.find(mp[s[i]]) == cur->m.end()){\n            cur->m[mp[s[i]]] = newnode(s[i]);\n        }\n        cur = cur->m[mp[s[i]]];\n    }\n    cur->val++;\n}\nmap<string,int> freq;\nint query(string s){\n    int n = s.size();\n    node* cur = root;\n    int len = 0;\n    string val;\n    rep(i,0,n){\n        cur = cur->m[mp[s[i]]];\n        val.pb(mp[s[i]]);\n        len++;\n        if(cur->val == 1 and m[val] == freq[val]) return len;\n    }\n    cur->val++;\n    return INF;\n}\nint query2(string s){\n    node* cur = root;\n    rep(i,0,sz(s)){\n        if(cur->m.find(s[i] - '0') == cur->m.end()) return 0;\n        cur = cur->m[s[i] - '0'];\n    }\n    return cur->val;\n}\nint dl(int n){\n    int ans = 0;\n    while(n){\n        ans++;\n        n/=10;\n    }\n    return ans;\n}\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n    mp['a'] = 2;\n    mp['b'] = 2;\n    mp['c'] = 2;\n    mp['d'] = 3;\n    mp['e'] = 3;\n    mp['f'] = 3;\n    mp['g'] = 4;\n    mp['h'] = 4;\n    mp['i'] = 4;\n    mp['j'] = 5;\n    mp['k'] = 5;\n    mp['l'] = 5;\n    mp['m'] = 6;\n    mp['n'] = 6;\n    mp['o'] = 6;\n    mp['p'] = 7;\n    mp['q'] = 7;\n    mp['r'] = 7;\n    mp['s'] = 7;\n    mp['t'] = 8;\n    mp['u'] = 8;\n    mp['v'] = 8;\n    mp['w'] = 9;\n    mp['x'] = 9;\n    mp['y'] = 9;\n    mp['z'] = 9;\n    cin>>TESTS;\n    rep(l,1,TESTS+1)\n    {   \n        m.clear();\n        int n,q;\n        cin >> n >> q;\n        root = new node;\n        map<string,string> p;\n        rep(i,0,n){\n            string s,t;\n            cin >> s >> t;\n            p[s] = t;\n            rep(i,0,sz(t)){\n                string cur;\n                rep(j,i,sz(t)){\n                    cur.pb(t[j]);\n                    m[cur]++;\n                }\n            }\n            add(s);\n        }\n        // trace(1);\n        cout << \"Case #\" << l << \": \";\n        while(q--){\n            string s;\n            cin >> s;\n            string no = p[s];\n            int ans = 50;\n            freq.clear();\n            rep(i,0,sz(no)){\n                string cur;\n                rep(j,i,sz(no)){\n                    cur.pb(no[j]);\n                    freq[cur]++;\n                }\n            }\n            for(auto j : freq){\n                if(j.sc == m[j.fr]){\n                    if(query2(j.fr) == 0){\n                        ans = min(ans, sz(j.fr));\n                    }\n                }\n            }\n            ans = min(ans, query(s));\n            cout << ans << \" \";\n        }\n        cout << endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478759,
        "contest_id": "115291",
        "problem_id": "177480",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Keypad Trouble",
        "problem_view_link": "keypad-trouble",
        "created_at_ms": 1599979228,
        "updated_at_ms": 1599980428,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:44:53.572Z",
        "__v": 0
    },
    {
        "_id": "5f6062ec468ccc0964b0c353",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nvector<int>v;\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    }\n    for(int i=2;i<=n;i++ ){\n        if(prime[i]==true)\n            v.push_back(i);\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll int t,n;\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<1<<\"|n\";\n        else{\n            ll int r=lower_bound(v.begin(),v.end(),n)-v.begin();\n            if (v[r]==n){\n             r+=1;   \n            }\n            r-=1;\n            long long int v=pow(2,r);\n            v=v%mod;\n            cout<<v<<\"\\n\";\n        }  \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478747,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979211,
        "updated_at_ms": 1599992411,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:45:00.422Z",
        "__v": 0
    },
    {
        "_id": "5f6062f2468ccc0964b0c354",
        "submission_code": "#include<bits/stdc++.h>\n#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    long long t,n,i,j,g,h,s,p,mini;;\n    //vector<pair<int,int>> r;\n    pair<long long int,long long int> e;\n    vector<long long int> x,y;\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        for(i=0;i<n;i++)\n        {\n            cin>>g>>h;\n            x.push_back(g);\n            y.push_back(h);\n        }\n        mini=LLONG_MAX;\n        for(i=0;i<n;i++)\n        {\n            s=0;\n            for(j=0;j<n;j++)\n            {\n                p=x[j]-x[i];\n                p=p*p;\n                g=y[j]-y[i];\n                g=g*g;\n                s=s+p+g;\n                if(s>mini)\n                {\n                    break;\n                }\n            }\n            if(s<mini)\n            {\n                mini=s;\n                e=make_pair(x[i],y[i]);\n            }\n        }\n        cout<<e.first<<\" \"<<e.second<<endl;\n        x.clear();\n        y.clear();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478739,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6832311",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "19H51A05E3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979205,
        "updated_at_ms": 1599984005,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:45:06.571Z",
        "__v": 0
    },
    {
        "_id": "5f6062fc468ccc0964b0c355",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#define MOD 1000000007\nusing namespace std;\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int T,b1x,b2x,x,y,b1y,b2y, i, j, temp1, temp2;\n    cin >> T;\n    vector<int> dp(1000000, 0);\n    while(T--) {\n        cin >> x >> y >> b1x >> b1y >> b2x >> b2y;\n        if((x == b1x and y == b1y) || (x == b2x and y == b2y)) {\n            cout <<\"0\\n\";\n            continue;\n        }\n        fill(dp.begin(), dp.end(), 0);\n        for(i=x-1;i>=0;i--) {\n            if((b1x == i and b1y == y) || (b2x == i and b2y == y))\n                break;\n            else\n                dp[i] = 1;\n        }\n        dp[x] = 0;\n        bool flag = false;\n        for(i=y-1;i>=0;i--) {\n            if(!flag) {\n                dp[x] = (b1x == x and b1y == i) || (b2x == x and b2y == i) ? 0 : 1;    \n                if(dp[x] == 0)\n                    flag=true;\n            }\n            for(j=x-1;j>=0;j--) {\n                temp1 = dp[j];\n                temp2 = dp[j+1];\n                dp[j] += dp[j+1];\n                if((i == b1y and j+1 == b1x) || (i == b2y and j+1 == b2x))\n                    dp[j] -= temp2;\n                if((i+1 == b1y and j == b1x) || (i+1 == b2y and j == b2x))\n                    dp[j] -= temp1;\n                dp[j] %= MOD;\n            }\n        }\n        cout << dp[0] <<\"\\n\";\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478738,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "1082327",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "Tush512",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599979203,
        "updated_at_ms": 1599979203,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:45:16.821Z",
        "__v": 0
    },
    {
        "_id": "5f606306468ccc0964b0c356",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n\n   // exmaple  2  3\n       //res = 2\n       /* exmaple    2 3 5\n       \n          (2 *3) * (5) --\n            (3* 2) * 5 --\n            \n            \n          (2 * 5)  * (3) -\n           (5 * 2) * 3 -\n           \n          (3 *5) * 2 -\n          (5 * 3) * 2 -\n       \n       \n          2 3 4 7\n          \n          (2 * 3 * 4)  * 7\n          (2 * 3 * 7)  * 4\n          (2 * 4 * 7 )  * 3\n          (3 * 4 * 7)  * 2\n       \n       */\n\nint f[100], expo[100];\nlong long len=-1;\nvoid primeFactorization(long long num){\n    long long d=2;\n    \n    // Untill Not Prime (num value)\n    while(num>1 && d*d <= num){\n        int k=0;\n        while(num%d ==0){\n            k++;\n            num/=d;\n        }\n        if(k>0){\n            len++;\n            f[len]=d;\n            expo[len]=k;\n            \n        }\n        d++;\n    }\n    \n    // If Prime Number( num value ) Found At Last \n    if(num>1){\n        len++;\n        f[len]=num;\n        expo[len]=1;\n    }\n    \n}\n\n\nlong long fact(long long n) \n{ \n    return (n == 1 || n == 0) ? 1 : n * fact(n - 1); \n} \n\nint main(){\n    // These Two Lines Enables Faster i/O\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    \n    int t;\n    cin>>t;\n    \n    while(t--){\n        int n;\n        cin>>n;\n        long long val = fact(n);\n        len=-1;\n        primeFactorization(val);   \n        \n        //  For Base case\n        long long  res=1;\n\n        res +=(len);\n       cout<<res % (1000000007)<<endl;     \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478733,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6387750",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "pusupalahemanth1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979197,
        "updated_at_ms": 1599980397,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:45:26.125Z",
        "__v": 0
    },
    {
        "_id": "5f606314468ccc0964b0c357",
        "submission_code": "import java.util.*;\nimport java.lang.*;\npublic class Main\n{\n    static int count=0;\n    public static boolean valid(int a[][],int i,int j,int x,int y){\n        if(i>=0 && i<=x && j>=0 && j<=y && a[i][j]==1){\n            return true;\n        }\n        return false;\n    }\n    public static void grid(int a[][],int i,int j,int x,int y){\n        if(i==x && j==y){\n            count=count+1;\n            \n        }\n        else{\n            if(valid(a,i,j,x,y)){\n                \n                grid(a,i+1,j,x,y);\n                grid(a,i,j+1,x,y);\n            }\n        }\n        \n    }\n    public static void new_main(int a,int b,int a1,int b1,int a2,int b2){\n        int l[][]=new int[a+1][b+1];\n        for(int i=0;i<=a;i++){\n            for(int j=0;j<=b;j++){\n                l[i][j]=1;\n            }\n        }\n        l[a1][b1]=0;\n        l[a2][b2]=0;\n        grid(l,0,0,a,b);\n        System.out.println((int)(count%(Math.pow(10,9)+7)));\n        count=0;\n    }\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int test=sc.nextInt();\n        String p=sc.nextLine();\n        int x=0,y=0,x1=0,y1=0,x2=0,y2=0;\n        for (int i=0;i<test;i++){\n            String s=sc.nextLine();\n            String s1[]=s.split(\" \");\n            x=Integer.parseInt(s1[0]);\n            y=Integer.parseInt(s1[1]);\n            x1=Integer.parseInt(s1[2]);\n            y1=Integer.parseInt(s1[3]);\n            x2=Integer.parseInt(s1[4]);\n            y2=Integer.parseInt(s1[5]);\n            new_main(x,y,x1,y1,x2,y2);\n            \n        }\n        \n    }\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478721,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9338915",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "kenche_greeshma",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599979185,
        "updated_at_ms": 1599980385,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:45:40.620Z",
        "__v": 0
    },
    {
        "_id": "5f60631e468ccc0964b0c358",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nconst long long MAX_SIZE = 1000007; \n  \n// isPrime[] : isPrime[i] is true if number is prime  \n// prime[] : stores all prime number less than N \n// SPF[] that store smallest prime factor of number \n// [for Exp : smallest prime factor of '8' and '16' \n// is '2' so we put SPF[8] = 2 , SPF[16] = 2 ] \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n  \n// function generate all prime number less then N in O(n) \nvoid manipulated_seive(long long N) \n{ \n    // 0 and 1 are not prime \n    isprime[0] = isprime[1] = false ; \n  \n    // Fill rest of the entries \n    for (long long int i=2; i<N ; i++) \n    { \n        // If isPrime[i] == True then i is \n        // prime number \n        if (isprime[i]) \n        { \n            // put i into prime[] vector \n            prime.push_back(i); \n  \n            // A prime number is its own smallest \n            // prime factor \n            SPF[i] = i; \n        } \n  \n        // Remove all multiples of  i*prime[j] which are \n        // not prime by making isPrime[i*prime[j]] = false \n        // and put smallest prime factor of i*Prime[j] as prime[j] \n        // [ for exp :let  i = 5 , j = 0 , prime[j] = 2 [ i*prime[j] = 10 ] \n        // so smallest prime factor of '10' is '2' that is prime[j] ] \n        // this loop run only one time for number which are not prime \n        for (long long int j=0; \n             j < (int)prime.size() && \n             i*prime[j] < N && prime[j] <= SPF[i]; \n             j++) \n        { \n            isprime[i*prime[j]]=false; \n  \n            // put smallest prime factor of i*prime[j] \n            SPF[i*prime[j]] = prime[j] ; \n        } \n    } \n} \n  \n// driver  program to test above function \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n        \n    \nios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t;\n    scanf(\"%d\",&t);\n    manipulated_seive(MAX_SIZE);\n    while(t--)\n    {\n        long long n;\n        scanf(\"%lld\",&n);\n        long long c=0;\n        if(n==2)\n        {  printf(\"1\");\n         printf(\"\\n\");}\n        else if(n==3)\n        {\n            printf(\"2\");\n            printf(\"\\n\");}\n        else\n        {\n        // manipulated_seive(n);\n    for (long unsigned int i=0; i<prime.size() && prime[i] <= n; i++) \n    {c=c%m+1;}\n            isprime.clear();\n        prime.clear();\n        SPF.clear();\n       printf(\"%lld\",((long long)pow(2,c-1))%m);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478714,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979171,
        "updated_at_ms": 1599993571,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:45:50.174Z",
        "__v": 0
    },
    {
        "_id": "5f606325468ccc0964b0c359",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nvector<int>v;\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    }\n    for(int i=2;i<=n;i++ ){\n        if(prime[i]==true)\n            v.push_back(i);\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll int t,n;\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<0<<\" \";\n        else{\n            ll int r=lower_bound(v.begin(),v.end(),n)-v.begin();\n            if (v[r]==n){\n             r+=1;   \n            }\n            r-=1;\n            long long int v=pow(2,r);\n            v=v%mod;\n            cout<<v<<\"\\n\";\n        }  \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478712,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979169,
        "updated_at_ms": 1599991169,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:45:57.029Z",
        "__v": 0
    },
    {
        "_id": "5f60632f468ccc0964b0c35a",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n       Scanner sc=new Scanner(System.in);\n        long inp=sc.nextLong();\n        for(long i=0;i<inp;i++)\n        {\n            long num=sc.nextLong();\n            long fact=1;\n            for(long j=1;j<=num;j++)\n            {\n             fact=fact*j;   \n            }\n            long count=0;\n            for(long o=1;o<=fact;o++)\n            {\n                for(long p=1;p<=fact;p++)\n                {\n                    if(o*p==fact)\n                    {\n                        if(o%p!=0 || o==1 ||p==1)\n                        {\n                            long gr=o;\n                            if(o>p)\n                            {\n                              gr=o;  \n                            }\n                            else\n                            {\n                               gr=p; \n                            }\n                            int counter=0;\n                            for(long k=2;k<gr-1;k++)\n                            {\n                                if(o%k==0&&p%k==0)\n                                {\n                                  counter=1;\n                                    break;\n                                }\n                            }\n                            if(counter==0)\n                            {\n                                count=count+1;\n                            }\n                            \n                        }\n                        \n                    }\n                }\n            }\n            count=count/2;\n            System.out.println(count);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478708,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4698811",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "ashutosh_janrao1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979159,
        "updated_at_ms": 1599979159,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:46:07.474Z",
        "__v": 0
    },
    {
        "_id": "5f606336468ccc0964b0c35b",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint main() {    \n    int x_i[100],y_i[100],fx[100];\n    int n,i,j;\n    int test_cases;\n    int min,minx,miny;\n    int fxv,x,y;\n    scanf(\"%d\",&test_cases);   \n    do\n    {\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&x_i[i],&y_i[i]);\n    }\n        \n    for(i=0;i<n;i++)\n    {\n        fxv=0;\n        x=x_i[i];\n        y=y_i[i];\n        for(j=0;j<n;j++)\n        {\n            if(j == i)\n                continue;\n            else\n                fxv+=pow((x-x_i[j]),2)+pow((y-y_i[j]),2);\n        }\n        fx[i]=fxv;\n    }\n    min=fx[0];\n    minx=x_i[0];\n    miny=y_i[0];\n    for(i=1;i<n;i++)\n    {\n        if(min>fx[i])\n        {\n            min=fx[i];\n            minx=x_i[i];\n            miny=y_i[i];\n        }\n    }\n    printf(\"%d %d\\n\",minx,miny);\n    test_cases--;\n    }while(test_cases != 0);\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478697,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4623005",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979139,
        "updated_at_ms": 1599979139,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:46:14.469Z",
        "__v": 0
    },
    {
        "_id": "5f606340468ccc0964b0c35c",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nvector<int>v;\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    }\n    for(int i=2;i<=n;i++ ){\n        if(prime[i]==true)\n            v.push_back(i);\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll int t,n;\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<1<<\" \";\n        else{\n            ll int r=lower_bound(v.begin(),v.end(),n)-v.begin();\n            if (v[r]==n){\n             r+=1;   \n            }\n            r-=1;\n            long long int v=pow(2,r);\n            v=v%mod;\n            cout<<v<<\"\\n\";\n        }  \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478689,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979131,
        "updated_at_ms": 1599989931,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:46:24.818Z",
        "__v": 0
    },
    {
        "_id": "5f606348468ccc0964b0c35d",
        "submission_code": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    if n==1:\n        print(0)\n    elif n==2:\n        print(1)\n    else:\n        ans = 1\n        res = 0\n        flag = 0\n        while res<n:\n            if flag==0 or flag == 1:\n                res += ans\n                flag += 1\n            else:\n                flag = 0\n                ans = ans*2\n        print(ans)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478685,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2923379",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "mahesh_8842",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979125,
        "updated_at_ms": 1599981525,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:46:32.668Z",
        "__v": 0
    },
    {
        "_id": "5f606351468ccc0964b0c35e",
        "submission_code": "import math\nn=int(input())\nl=[]\nfor h in range(n):\n    m=int(input())\n    g,p=[],[]\n    for k in range(m):\n        w=list(map(int,input().split()))\n        p.append(w)\n    for i in p:\n        s=0\n        for j in p:\n            if(i!=j):\n                s+=math.pow((i[0]-j[0]),2) + math.pow((i[1]-j[1]),2)\n        g.append(s)\n    minimum=min(g)\n    for o in range(len(g)):\n        if(g[o]==minimum):\n            l.append(p[o])\n            break\nfor q in l:\n    print(*q)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478666,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7170209",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "srujith2k",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599979094,
        "updated_at_ms": 1599981494,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:46:41.518Z",
        "__v": 0
    },
    {
        "_id": "5f60635a468ccc0964b0c35f",
        "submission_code": "import java.util.*;\nimport java.lang.*;\nclass Solution{\nstatic String res;\nstatic String res1;\nstatic boolean valid(int i,int j,int r,int c){\n       if(i<0 || i>=r || j<0 || j>=c)\n         return false;\n       return true;\n}\nstatic void getshortest(char arr[][],int i,int j,int r,int c,String s,String ss){\n    if(i==r-1 && j==c-1){\n      if(s.compareTo(res)<0){\n        res=s;\n        res1=ss;\n        }\n       if(s.equals(res) && ss.compareTo(res1)<0){\n         res1=ss;\n        }\n        return ;\n    }\n    else{\n          char c1=arr[i][j];\n          arr[i][j]='{';\n          boolean t1=valid(i+1,j,r,c);\n          boolean t2=valid(i,j+1,r,c);\n          if(t1==true && t2==false){\n              getshortest(arr,i+1,j,r,c,s+c1,ss+\"D\");\n          }\n          else if(t2==true && t1==false){\n                getshortest(arr,i,j+1,r,c,s+c1,ss+\"R\");\n            }\n           else{\n                char c11=arr[i+1][j];\n                char c22=arr[i][j+1];\n                if(c11<c22){\n                    getshortest(arr,i+1,j,r,c,s+c1,ss+\"D\");\n                }\n                else if(c22<c11){\n                       getshortest(arr,i,j+1,r,c,s+c1,ss+\"R\");\n                }\n                else{\n                    getshortest(arr,i+1,j,r,c,s+c1,ss+\"D\");\n                    getshortest(arr,i,j+1,r,c,s+c1,ss+\"R\");\n                }\n\n           }\n          arr[i][j]=c1;\n          return;\n         \n    }\n       \n}\npublic static void main(String[] args){\n    Scanner in=new Scanner(System.in);\n    int n=in.nextInt();\n    String fin[]=new String[n];\n    for(int k=0;k<n;k++){\n    int r=in.nextInt();\n    int c=in.nextInt();\n    char arr[][]=new char[r][c];\n    res=\"z\";\n    res1=\"\";\n    for(int i=0;i<r;i++){\n        String sr=in.next();\n      for(int j=0;j<c;j++){\n         arr[i][j]=sr.charAt(j);\n      }\n    }\n     getshortest(arr,0,0,r,c,\"\",\"\");\n     fin[k]=res1;\n    }\n    int i=1;\n    for(String s:fin){\n        System.out.println(\"Case #\"+i+\": \"+s);\n        i++;\n    }\n}\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478664,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "5598553",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "manmeet02012001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599979092,
        "updated_at_ms": 1599980292,
        "misc_notes": "[\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:46:50.020Z",
        "__v": 0
    },
    {
        "_id": "5f60635f468ccc0964b0c360",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\nint factorial(int n)\n{\n    if(n==0)\n    return 1;\n    else\n     return (n*factorial(n-1));\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    long long t;cin>>t;\n    while(t--)\n    {\n        long long n;cin>>n;\n        int f;\n        f=factorial(n);\n    //    cout<<f<<\"\\n\";\n        vector<pair<int,int> >a;\n        for(long long i=1;i*i<=f;i++)\n        {\n            if(f%i==0)\n            {\n                a.push_back(make_pair(i,f/i));\n            }\n        }\n       /* for(auto x:a)\n        {\n            cout<<x.first<<\" \"<<x.second<<\"\\n\";\n        }*/\n        int count=0;\n        for(auto x:a)\n        {\n            int g=x.first,h=x.second;\n            if(__gcd(g,h)==1)\n            count++;\n        }\n        cout<<count<<\"\\n\";\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478655,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6077224",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "18H51A04F3",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979083,
        "updated_at_ms": 1599979083,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:46:55.717Z",
        "__v": 0
    },
    {
        "_id": "5f606367468ccc0964b0c361",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include<bits/stdc++.h>\n#define ll long long\nll val = 1e9+7;\n#include <algorithm>\nusing namespace std;\nll power(ll x, unsigned ll y)  \n{   \n    ll p=val;\n    int res = 1;     // Initialize result  \n  \n    x = x % p; // Update x if it is more than or  \n                // equal to p \n   \n    if (x == 0) return 0; // In case x is divisible by p; \n  \n    while (y > 0)  \n    {  \n        // If y is odd, multiply x with result  \n        if (y & 1)  \n            res = (res*x) % p;  \n  \n        // y must be even now  \n        y = y>>1; // y = y/2  \n        x = (x*x) % p;  \n    }  \n    return res;  \n}  \n\nint main() {\n    // Initialize all numbers as prime \n    ios_base::sync_with_stdio();\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n        bool prime[1000001]; \n        for(int i=0;i<1000001;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=1000001; p++) \n        { \n            // If prime[p] is not changed, then it is a prime \n            if(prime[p] == true) \n            { \n                // Update all multiples of p \n                for(int i = p*p; i <= 1000001; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        // Print all prime numbers \n    vector<ll> v;\n        for(ll i = 2; i <= 1000001; i++) \n        { \n            if(prime[i] == true) \n                v.push_back(i); \n        } \n    \n    /*for(int i=0;i<10;i++)\n        cout<<v[i]<<\" \";*/\n    ll t;\n    scanf(\"%lld\",&t);\n    while(t--){\n        ll n;\n        scanf(\"%lld\",&n);\n        vector<ll> :: iterator it;\n        it = upper_bound(v.begin(),v.end(),n);\n        if(n!=1)\n        {ll j=it - v.begin() -1;\n        printf(\"%lld\\n\",(power(2,j))%val);\n        }\n        else\n            printf(\"0\\n\");\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478653,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5616652",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "pavansid69",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979080,
        "updated_at_ms": 1599986280,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:47:03.417Z",
        "__v": 0
    },
    {
        "_id": "5f60636f468ccc0964b0c362",
        "submission_code": "import math as mt\ndef gcd(a,b): \n      \n    # Everything divides 0  \n    if (b == 0): \n         return a \n    return gcd(b,a%b)\n\n  \nMAXN = 100001\n  \n\nspf = [0 for i in range(MAXN)] \n  \n\ndef sieve(): \n    spf[1] = 1\n    for i in range(2, MAXN): \n          \n\n        spf[i] = i \n  \n    # separately marking spf for  \n    # every even number as 2 \n    for i in range(4, MAXN, 2): \n        spf[i] = 2\n  \n    for i in range(3, mt.ceil(mt.sqrt(MAXN))): \n          \n        # checking if i is prime \n        if (spf[i] == i): \n              \n            # marking SPF for all numbers \n            # divisible by i \n            for j in range(i * i, MAXN, i):  \n                  \n                # marking spf[j] if it is  \n                # not previously marked \n                if (spf[j] == j): \n                    spf[j] = i \ndef getFactorization(x): \n    ret = list() \n    while (x != 1): \n        ret.append(spf[x]) \n        x = x // spf[x] \n  \n    return ret \nfor i in range(int(input())):\n    n=int(input())\n    \n    m=1000000007\n    if(n==1 or n==2):\n        print(1)\n    else:\n        a=[1]\n        for i in range(1,n+1):\n            sieve() \n            p = getFactorization(i)\n            a+=p\n        prod=1 \n        a.sort()\n        for i in a:\n            prod*=i\n        prod1=1\n        #prod2=1\n        c=0\n        for i in range(0,len(a)):  \n            prod1*=a[i]\n            prod=prod//a[i]\n            if(gcd(prod1,prod)==1):\n                c=((c%m)+(1%m))%m\n        print(c-1)    \n            \n            \n            ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478648,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5796840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979074,
        "updated_at_ms": 1599981474,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:47:11.267Z",
        "__v": 0
    },
    {
        "_id": "5f606376468ccc0964b0c363",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nvector<int>v;\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    }\n    for(int i=2;i<=n;i++ ){\n        if(prime[i]==true)\n            v.push_back(i);\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll int t,n;\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<1<<\" \";\n        else{\n            ll int r=lower_bound(v.begin(),v.end(),n)-v.begin();\n            if (v[r]==n){\n             r+=1;   \n            }\n            r-=1;\n            long long int v=pow(2,r);\n            cout<<v<<\"\\n\";\n        }  \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478644,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979073,
        "updated_at_ms": 1599988673,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:47:18.366Z",
        "__v": 0
    },
    {
        "_id": "5f60637c468ccc0964b0c364",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include<bits/stdc++.h>\n#define ll long long\nll val = 1e9+7;\n#include <algorithm>\nusing namespace std;\nll power(ll x, unsigned ll y)  \n{   \n    ll p=val;\n    int res = 1;     // Initialize result  \n  \n    x = x % p; // Update x if it is more than or  \n                // equal to p \n   \n    if (x == 0) return 0; // In case x is divisible by p; \n  \n    while (y > 0)  \n    {  \n        // If y is odd, multiply x with result  \n        if (y & 1)  \n            res = (res*x) % p;  \n  \n        // y must be even now  \n        y = y>>1; // y = y/2  \n        x = (x*x) % p;  \n    }  \n    return res;  \n}  \n\nint main() {\n    // Initialize all numbers as prime \n    ios_base::sync_with_stdio();\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n        bool prime[1000001]; \n        for(int i=0;i<1000001;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=1000001; p++) \n        { \n            // If prime[p] is not changed, then it is a prime \n            if(prime[p] == true) \n            { \n                // Update all multiples of p \n                for(int i = p*p; i <= 1000001; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        // Print all prime numbers \n    vector<ll> v;\n        for(ll i = 2; i <= 1000001; i++) \n        { \n            if(prime[i] == true) \n                v.push_back(i); \n        } \n    \n    /*for(int i=0;i<10;i++)\n        cout<<v[i]<<\" \";*/\n    ll t;\n    scanf(\"%lld\",&t);\n    while(t--){\n        ll n;\n        scanf(\"%lld\",&n);\n        vector<ll> :: iterator it;\n        it = upper_bound(v.begin(),v.end(),n);\n        if(n!=1)\n        {ll j=it - v.begin() -1;\n        printf(\"%lld\\n\",(power(2,j))%val);\n        }\n        else\n            printf(\"1\\n\");\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478639,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5616652",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "pavansid69",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979065,
        "updated_at_ms": 1599985065,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:47:24.916Z",
        "__v": 0
    },
    {
        "_id": "5f606384468ccc0964b0c365",
        "submission_code": "import java.util.*;\npublic class Main\n{\n    static int count=0;\n    public static boolean valid(int a[][],int i,int j,int x,int y){\n        if(i>=0 && i<=x && j>=0 && j<=y && a[i][j]==1){\n            return true;\n        }\n        return false;\n    }\n    public static void grid(int a[][],int i,int j,int x,int y){\n        if(i==x && j==y){\n            count=count+1;\n            \n        }\n        else{\n            if(valid(a,i,j,x,y)){\n                \n                grid(a,i+1,j,x,y);\n                grid(a,i,j+1,x,y);\n            }\n        }\n        \n    }\n    public static void new_main(int a,int b,int a1,int b1,int a2,int b2){\n        int l[][]=new int[a+1][b+1];\n        for(int i=0;i<=a;i++){\n            for(int j=0;j<=b;j++){\n                l[i][j]=1;\n            }\n        }\n        l[a1][b1]=0;\n        l[a2][b2]=0;\n        grid(l,0,0,a,b);\n        System.out.println(count);\n        count=0;\n    }\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int test=sc.nextInt();\n        String p=sc.nextLine();\n        int x=0,y=0,x1=0,y1=0,x2=0,y2=0;\n        for (int i=0;i<test;i++){\n            String s=sc.nextLine();\n            String s1[]=s.split(\" \");\n            x=Integer.parseInt(s1[0]);\n            y=Integer.parseInt(s1[1]);\n            x1=Integer.parseInt(s1[2]);\n            y1=Integer.parseInt(s1[3]);\n            x2=Integer.parseInt(s1[4]);\n            y2=Integer.parseInt(s1[5]);\n            new_main(x,y,x1,y1,x2,y2);\n            \n        }\n        \n    }\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478624,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9338915",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "kenche_greeshma",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599979051,
        "updated_at_ms": 1599979051,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:47:32.566Z",
        "__v": 0
    },
    {
        "_id": "5f60638c468ccc0964b0c366",
        "submission_code": "import math\ndef primeFactors(n):\n    if n%2==1:\n        print((n//2)+1)\n    else:\n        print(n//2)\n        \ntest=int(input())\nfor _ in range(test):\n    n=int(input())\n    primeFactors(n)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478623,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4622965",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vision01",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979051,
        "updated_at_ms": 1599985051,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:47:40.586Z",
        "__v": 0
    },
    {
        "_id": "5f606397468ccc0964b0c367",
        "submission_code": "import math as mt\ndef gcd(a,b): \n      \n    # Everything divides 0  \n    if (b == 0): \n         return a \n    return gcd(b,a%b)\n\n  \nMAXN = 100001\n  \n\nspf = [0 for i in range(MAXN)] \n  \n\ndef sieve(): \n    spf[1] = 1\n    for i in range(2, MAXN): \n          \n\n        spf[i] = i \n  \n    # separately marking spf for  \n    # every even number as 2 \n    for i in range(4, MAXN, 2): \n        spf[i] = 2\n  \n    for i in range(3, mt.ceil(mt.sqrt(MAXN))): \n          \n        # checking if i is prime \n        if (spf[i] == i): \n              \n            # marking SPF for all numbers \n            # divisible by i \n            for j in range(i * i, MAXN, i):  \n                  \n                # marking spf[j] if it is  \n                # not previously marked \n                if (spf[j] == j): \n                    spf[j] = i \ndef getFactorization(x): \n    ret = list() \n    while (x != 1): \n        ret.append(spf[x]) \n        x = x // spf[x] \n  \n    return ret \nfor i in range(int(input())):\n    n=int(input())\n    sieve() \n    m=1000000007\n    if(n==1 or n==2):\n        print(1)\n    else:\n        a=[1]\n        for i in range(1,n+1):\n            p = getFactorization(i)\n            a+=p\n        prod=1 \n        a.sort()\n        for i in a:\n            prod*=i\n        prod1=1\n        #prod2=1\n        c=0\n        for i in range(0,len(a)):  \n            prod1*=a[i]\n            prod=prod//a[i]\n            if(gcd(prod1,prod)==1):\n                c=((c%m)+(1%m))%m\n        print(c-1)    \n            \n            \n            ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478616,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5796840",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979040,
        "updated_at_ms": 1599980240,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:47:51.065Z",
        "__v": 0
    },
    {
        "_id": "5f60639e468ccc0964b0c368",
        "submission_code": "\n// --------------------<optimizations>--------------------\n#pragma GCC optimize(\"O3\")\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"unroll-loops\")\n// -------------------</optimizations>--------------------\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp> //lower_bound , upper_bound\n// using namespace __gnu_pbds;//kth smallest : *pd.find_by_order(k-1) , no. of elem < X : pd.order_of_key(X) , delete X : pd.erase(X).\n// typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> pbds;\n#define f(i, a, b) for (ll i = a; i < b; i++)\n#define fb(i, a, b) for (ll i = a; i >= b; i--)\n#define pb push_back\n#define mp make_pair\n#define ff first\n#define ss second\n#define nl '\\n'\n#define pl pair<ll, ll>\n#define all(v) v.begin(), v.end()\n#define lb lower_bound\n#define ub upper_bound\n#define nude(a)           \\\n    for (auto i : a)      \\\n        cout << i << \" \"; \\\n    cout << nl;\n#define tc     \\\n    ll tc;     \\\n    cin >> tc; \\\n    while (tc--)\nconst ll mod = 1e9 + 7;\nconst ll sz = 2e5 + 9;\n#define maxheap priority_queue<ll>\n#define minheap priority_queue<ll, vector<ll>, greater<ll>>\n//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nll gcd(ll a, ll b)\n{\n    if (b == 0)\n        return a;\n    return gcd(b, a % b);\n}\n\nll power(ll x, ll y, ll p)\n{\n    ll res = 1;\n    x = x % p;\n    while (y > 0)\n    {\n        if (y & 1)\n        {\n            res = (res * x) % p;\n        }\n        y = y >> 1;\n        x = (x * x) % p;\n    }\n    return res;\n}\nvector<char> is_prime(1e6 + 1, true);\nvector<ll> prime;\nvoid init()\n{\n    int n = 1e6;\n    is_prime[0] = is_prime[1] = false;\n    for (int i = 2; i <= n; i++)\n    {\n        if (is_prime[i] && (long long)i * i <= n)\n        {\n            for (int j = i * i; j <= n; j += i)\n                is_prime[j] = false;\n        }\n    }\n    f(i, 2, 1e6 + 1)\n    {\n        if (is_prime[i])\n            prime.pb(i);\n    }\n}\n\nvoid bring_me_thanos()\n{\n    ll n, m;\n    cin >> n;\n    ll ans = 0, i = 0;\n    ans = ub(all(prime), n) - prime.begin();\n    if (ans > 2)\n        ans++;\n    cout << ans % mod << nl;\n}\n\nvoid solve()\n{\n    init();\n    tc\n    bring_me_thanos();\n}\n\nint main()\n{\n#ifdef JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    clock_t beg = clock();\n    solve();\n    clock_t end = clock();\n    fprintf(stderr, \"%.3f sec, Copyright %c 2019 PyThor. \\n\", double(end - beg) / CLOCKS_PER_SEC, 184);\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478592,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5078334",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "the_pythor",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599979006,
        "updated_at_ms": 1599983806,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:47:58.915Z",
        "__v": 0
    },
    {
        "_id": "5f6063a6468ccc0964b0c369",
        "submission_code": "import math\ndef primeFactors(n):\n    arr=[i for i in range(1,n+1)]\n    ct=0\n    for j in arr:\n        if j%2!=0:\n            ct=ct+1\n    print(ct)\n        \ntest=int(input())\nfor _ in range(test):\n    n=int(input())\n    primeFactors(n)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478585,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4622965",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vision01",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978991,
        "updated_at_ms": 1599983791,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:48:06.975Z",
        "__v": 0
    },
    {
        "_id": "5f6063b1468ccc0964b0c36a",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\n# define ll long long \n# define mod 1000000007\nusing namespace std;\nbool prime[1000000+1]; \nvector<int>v;\nvoid SieveOfEratosthenes() \n{  \n    int n=1000000;\n    prime[0]=prime[1]=false;\n    memset(prime, true, sizeof(prime)); \n    for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        { \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    }\n    for(int i=2;i<=n;i++ ){\n        if(prime[i]==true)\n            v.push_back(i);\n    }\n}\n\nint main() {\n    ll int t,n;\n    SieveOfEratosthenes();\n    cin>>t;\n    while(t--){\n        cin>>n;\n        if (n==1) cout<<1<<\" \";\n        else{\n            ll int r=lower_bound(v.begin(),v.end(),n)-v.begin();\n            if (v[r]==n){\n             r+=1;   \n            }\n            r-=1;\n            long long int v=pow(2,r);\n            cout<<v<<\"\\n\";\n        }\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478580,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978988,
        "updated_at_ms": 1599987388,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:48:17.414Z",
        "__v": 0
    },
    {
        "_id": "5f6063bb468ccc0964b0c36b",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nconst long long MAX_SIZE = 1000000; \n  \n// isPrime[] : isPrime[i] is true if number is prime  \n// prime[] : stores all prime number less than N \n// SPF[] that store smallest prime factor of number \n// [for Exp : smallest prime factor of '8' and '16' \n// is '2' so we put SPF[8] = 2 , SPF[16] = 2 ] \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n  \n// function generate all prime number less then N in O(n) \nvoid manipulated_seive(long long N) \n{ \n    // 0 and 1 are not prime \n    isprime[0] = isprime[1] = false ; \n  \n    // Fill rest of the entries \n    for (long long int i=2; i<N ; i++) \n    { \n        // If isPrime[i] == True then i is \n        // prime number \n        if (isprime[i]) \n        { \n            // put i into prime[] vector \n            prime.push_back(i); \n  \n            // A prime number is its own smallest \n            // prime factor \n            SPF[i] = i; \n        } \n  \n        // Remove all multiples of  i*prime[j] which are \n        // not prime by making isPrime[i*prime[j]] = false \n        // and put smallest prime factor of i*Prime[j] as prime[j] \n        // [ for exp :let  i = 5 , j = 0 , prime[j] = 2 [ i*prime[j] = 10 ] \n        // so smallest prime factor of '10' is '2' that is prime[j] ] \n        // this loop run only one time for number which are not prime \n        for (long long int j=0; \n             j < (int)prime.size() && \n             i*prime[j] < N && prime[j] <= SPF[i]; \n             j++) \n        { \n            isprime[i*prime[j]]=false; \n  \n            // put smallest prime factor of i*prime[j] \n            SPF[i*prime[j]] = prime[j] ; \n        } \n    } \n} \n  \n// driver  program to test above function \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n        \n    \nios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t;\n    scanf(\"%d\",&t);\n    manipulated_seive(MAX_SIZE);\n    while(t--)\n    {\n        long long n;\n        scanf(\"%lld\",&n);\n        long long c=0;\n        if(n==2)\n        {  printf(\"1\");\n         printf(\"\\n\");}\n        else if(n==3)\n        {\n            printf(\"2\");\n            printf(\"\\n\");}\n        else\n        {\n        // manipulated_seive(n);\n    for (long unsigned int i=0; i<prime.size() && prime[i] <= n; i++) \n    {c=c%m+1;}\n            isprime.clear();\n        prime.clear();\n        SPF.clear();\n       printf(\"%lld\",((long long)pow(2,c-1))%m);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478579,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978987,
        "updated_at_ms": 1599992187,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:48:27.466Z",
        "__v": 0
    },
    {
        "_id": "5f6063c5468ccc0964b0c36c",
        "submission_code": "import math \ndef primecheck(num):\n    if(num==1):\n        return False\n    for i in range(2,int(math.sqrt(num))+1):\n        if(num%i==0):\n            return False\n    return True\ndef check(n) : \n    c = 0\n    a=[]\n    for i in range(1,n+1):\n        if n%i==0:\n            a.append(i)\n    primes=list(set(list(filter(primecheck,a))))\n    # print(primes)\n    print((2**(len(primes)-1))%(10**9+7))\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    check(math.factorial(n))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478571,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4671628",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "suhrusai",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978975,
        "updated_at_ms": 1599980175,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:48:37.313Z",
        "__v": 0
    },
    {
        "_id": "5f6063cb468ccc0964b0c36d",
        "submission_code": "#include<bits/stdc++.h>\n#define ll             long long\n#define ii             pair<int,int>\n#define vi             vector<int>\n#define vvi            vector<vi>\n#define vll            vector<ll>\n#define vii            vector<ii>\n#define vvll           vector<vll>\n#define vvii           vector<vector<ii>>\n#define vs             vector<string>\n#define mms0(a)        memset(a,0,sizeof(a))\n#define mms1(a)        memset(a,-1,sizeof(a))\n#define ar             array\n#define pb             push_back\n#define ff             first\n#define ss             second\n#define FOR(n)         for(int i=0;i<n;i++)\n#define RFOR(n,a)      for(int i=n;i>=a;i--)\n#define FR(i,a,n,c)    for(int i=a;i<n;i+=c)\n#define RFR(i,n,a,c)   for(int i=n;i>=a;i-=c)\n#define deb1(a)        cout<<#a<<\" \"<<a<<\"\\n\"\n#define deb2(a,b)      cout<<#a<<\" \"<<a<<\" \"<<#b<<\" \"<<b<<\"\\n\"\n#define deb3(a,b,c)    cout<<#a<<\" \"<<a<<\" \"<<#b<<\" \"<<b<<\" \"<<#c<<\" \"<<c<<\"\\n\"\n#define MOD7           (int)1e9+7\n#define MOD9           (int)1e9+9\n#define inf            (int)1e9\n#define ninf           (int)-1e9\n#define INF            (ll)1e18\n#define NINF           (ll)-1e18\n#define pv(v)          for(auto it:v)cout<<it<<\" \";cout<<\"\\n\"\n#define pmp(v)         for(auto it:v)cout<<it.ff<<\":\"<<it.ss<<\" \";cout<<\"\\n\"           \n#define L_B            lower_bound\n#define U_B            upper_bound\n#define _              0\n#define FIO            ios_base::sync_with_stdio(false);cin.tie(NULL)\n#define all(a)         a.begin(),a.end()\n#define ppb            pop_back\n#define mkp            make_pair\n\nusing namespace std;\n\nll n,m;\nvll v;\nll mod = (ll)1e9+7;\nconst ll maxN = (int)2e6+2;\nll inverseMod[maxN],fact[maxN],invFact[maxN];\n\nll factorial(int n, int r){\n    //return fact[n]*inverseMod[n-r]*inverseMod[r];\n    return (((fact[n]*invFact[n-r])%mod)*invFact[r])%mod;\n}\nint  main(){\n    FIO;\n    int t = 1;\n\n    inverseMod[1] = 1;\n   \n    for(int i=2;i<maxN;i++){\n        inverseMod[i] = mod - mod/i*inverseMod[mod%i]%mod;\n    }\n    \n    fact[0] = 1;invFact[0] = 1;\n    \n    for(int i=1;i<maxN;i++){\n        fact[i] = fact[i-1]*i%mod;\n        invFact[i] = invFact[i-1]*inverseMod[i]%mod;\n    }\n\n    cin>>t;\n    while(t--){    \n    ll x,y,x1,y1,x2,y2;\n    cin>>x>>y>>x1>>y1>>x2>>y2;\n\n    ll mn = factorial(x+y,x)%mod;\n    ll mn1 = (factorial(x1+y1,x1) * factorial(x+y-x1-y1,x-x1))%mod;\n    ll mn2 = (factorial(x2+y2,x2) * factorial(x+y-x2-y2,x - x2))%mod;\n    ll add = ((factorial(x1+y1 ,x1) * factorial(x2 + y2 - x1 - y1,x2 - x1))%mod * factorial( x - x2 + y - y2,x - x2))%mod;\n   // cout<<factorial(x1+y1,x1)<<\" \"<<factorial(x2 + y2 - x1 - y1,x2 - x1)<<\"\\n\";\n //   cout<<mn<<\" \"<<mn1<<\" \"<<mn2<<\" \"<<add<<\"\\n\";\n        ll sol = (mn - mn1 - mn2 + add + mod + mod)%mod;\n        //cout<< (mn - mn1 - mn2 + add)<<\"\\n\";\n        cout<<sol<<\"\\n\";\n    }\n\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478562,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "3988713",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "prashanth_bhona1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599978960,
        "updated_at_ms": 1599980160,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:48:43.013Z",
        "__v": 0
    },
    {
        "_id": "5f6063d1468ccc0964b0c36e",
        "submission_code": "import java.io.*;\nimport java.util.*;\nclass Gcd{  \n    public int gcd(int a, int b) {   \n        if (a == 0 || b == 0) \n        return 0; \n        if (a == b) \n            return a;      \n        if (a > b) \n            return gcd(a-b, b); \n              \n        return gcd(a, b-a); \n    } \n    public boolean coprime(int a, int b) { \n        return (gcd(a, b) == 1); \n    }  \n    public int numOfPairs(ArrayList<Integer> arr, int n,int res){            \n        int count = 0;  \n        for (int i = 0; i < n - 1; i++){\n            for (int j = i + 1; j < n; j++) {\n                //System.out.println(\"Factors: \"+arr.get(i)+\" \"+arr.get(j));\n                if (coprime(arr.get(i), arr.get(j)) && arr.get(i)*arr.get(j)==res){\n                    count++;\n                    //System.out.println(\"Here\");\n                }\n            }\n        }\n        return count; \n    } \n}\npublic class Solution {\n    public static void main(String[] args) {\n        Gcd obj=new Gcd();\n        int ans=0;\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++){\n            int n=sc.nextInt();\n            int fact=1;\n            for(int j=1;j<n+1;j++){\n                fact*=j;\n            }\n            ArrayList<Integer> list=new ArrayList<Integer>();\n            for(int k=1;k<fact+1;k++){\n                if(fact%k==0)\n                    list.add(k);\n            }\n            //System.out.println(list);\n            ans=obj.numOfPairs(list,list.size(),fact);   \n            System.out.println(ans);\n            }\n        }\n    }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478556,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978951,
        "updated_at_ms": 1599982551,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:48:49.465Z",
        "__v": 0
    },
    {
        "_id": "5f6063da468ccc0964b0c36f",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef solution2(N):\n    f=1\n    count=0\n    m=[]\n    flag=0\n    mod=1000000007\n    for l in range(1,N+1):\n        f=f*l\n    for k in range(1, f+1):\n        if f%k==0:\n            m.append(k)\n    \n       \n    for j in range(0,len(m)-1):\n        p=m[j]\n        for i in range(j+1,len(m)):\n           \n            q=m[i]\n            if p*q==f:\n                r=math.gcd(p,q)\n                flag=1\n                if r==1 and flag==1 :\n                    count+=1\n                    flag=0\n    return count%mod\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        N= int(input())\n        res = solution2(N)\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478547,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978937,
        "updated_at_ms": 1599981337,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:48:58.370Z",
        "__v": 0
    },
    {
        "_id": "5f6063e2468ccc0964b0c370",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n int gcd(int a, int b) \n{   \n   /*if (a == 0 || b == 0) \n       return 0; \n   if (a == b) \n       return a; \n    if (a > b) \n        return gcd(a-b, b); \n                  \n    return gcd(a, b-a);*/\n     while( 1 )\n    {\n        a = a % b;\n     if( a == 0 )\n         return b;\n     b = b % a;\n     if( b == 0 )\n         return a;\n    }\n} \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int n,a[10000],i,f[10000];\n    cin>>n;\n    for(i=0;i<n;i++)\n    {\n        cin>>a[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        f[i]=1;    \n        for(int j=1;j<=a[i];j++)\n        {\n            f[i]=f[i]*j;\n        }\n    }\n    for(i=0;i<n;i++)\n    {   int count=1;\n        for(int j=2;j<f[i];j++)\n        {  int k=f[i]/j;\n          if(f[i]==j*k && j!=k &&k<j)\n          {\n           if(gcd(j,k)==1)\n           {\n               count=count+1;\n           }\n          }\n        }\n     cout<<count<<\"\\n\";\n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478529,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6639502",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp14",
        "site_user_handle": "saishivani_wnp",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978913,
        "updated_at_ms": 1599981313,
        "misc_notes": "[\"Success\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T06:49:06.063Z",
        "__v": 0
    },
    {
        "_id": "5f6063ea468ccc0964b0c371",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include<bits/stdc++.h>\n#define ll long long\nll val = 1e9+7;\n#include <algorithm>\nusing namespace std;\nll power(ll x, unsigned ll y)  \n{   \n    ll p=val;\n    int res = 1;     // Initialize result  \n  \n    x = x % p; // Update x if it is more than or  \n                // equal to p \n   \n    if (x == 0) return 0; // In case x is divisible by p; \n  \n    while (y > 0)  \n    {  \n        // If y is odd, multiply x with result  \n        if (y & 1)  \n            res = (res*x) % p;  \n  \n        // y must be even now  \n        y = y>>1; // y = y/2  \n        x = (x*x) % p;  \n    }  \n    return res;  \n}  \n\nint main() {\n    // Initialize all numbers as prime \n    ios_base::sync_with_stdio();\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n        bool prime[1000001]; \n        for(int i=0;i<1000001;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=1000001; p++) \n        { \n            // If prime[p] is not changed, then it is a prime \n            if(prime[p] == true) \n            { \n                // Update all multiples of p \n                for(int i = p*p; i <= 1000001; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        // Print all prime numbers \n    vector<ll> v;\n        for(ll i = 2; i <= 1000001; i++) \n        { \n            if(prime[i] == true) \n                v.push_back(i); \n        } \n    \n    /*for(int i=0;i<10;i++)\n        cout<<v[i]<<\" \";*/\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n;\n        cin>>n;\n        vector<ll> :: iterator it;\n        it = upper_bound(v.begin(),v.end(),n);\n        if(n!=1)\n        {ll j=it - v.begin() -1;\n        cout<<(power(2,j))%val<<\"\\n\";\n        }\n        else\n            cout<<1<<\"\\n\";\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478528,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5616652",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "pavansid69",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978912,
        "updated_at_ms": 1599983712,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:49:14.662Z",
        "__v": 0
    },
    {
        "_id": "5f6063f4468ccc0964b0c372",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\nclass Gcd{  \n    public int gcd(int a, int b) {   \n        if (a == 0 || b == 0) \n        return 0; \n        if (a == b) \n            return a;      \n        if (a > b) \n            return gcd(a-b, b); \n              \n        return gcd(a, b-a); \n    } \n    public boolean coprime(int a, int b) { \n        return (gcd(a, b) == 1); \n    }  \n    public int numOfPairs(ArrayList<Integer> arr, int n,int res){            \n        int count = 0;  \n        for (int i = 0; i < n - 1; i++){\n            for (int j = i + 1; j < n; j++) {\n                //System.out.println(\"Factors: \"+arr.get(i)+\" \"+arr.get(j));\n                if (coprime(arr.get(i), arr.get(j)) && arr.get(i)*arr.get(j)==res){\n                    count++;\n                    //System.out.println(\"Here\");\n                }\n            }\n        }\n        return count; \n    } \n}\npublic class Solution {\n    public static void main(String[] args) {\n        Gcd obj=new Gcd();\n        int ans=0;\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++){\n            int n=sc.nextInt();\n            int fact=1;\n            for(int j=1;j<n+1;j++){\n                fact*=j;\n            }\n            ArrayList<Integer> list=new ArrayList<Integer>();\n            for(int k=1;k<fact+1;k++){\n                if(fact%k==0)\n                    list.add(k);\n            }\n            //System.out.println(list);\n            ans=obj.numOfPairs(list,list.size(),fact);   \n            System.out.println(ans);\n            }\n        }\n    }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478525,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978908,
        "updated_at_ms": 1599981308,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:49:24.688Z",
        "__v": 0
    },
    {
        "_id": "5f6063fc468ccc0964b0c373",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nconst long long MAX_SIZE = 1000007; \n  \n// isPrime[] : isPrime[i] is true if number is prime  \n// prime[] : stores all prime number less than N \n// SPF[] that store smallest prime factor of number \n// [for Exp : smallest prime factor of '8' and '16' \n// is '2' so we put SPF[8] = 2 , SPF[16] = 2 ] \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n  \n// function generate all prime number less then N in O(n) \nvoid manipulated_seive(long long N) \n{ \n    // 0 and 1 are not prime \n    isprime[0] = isprime[1] = false ; \n  \n    // Fill rest of the entries \n    for (long long int i=2; i<N ; i++) \n    { \n        // If isPrime[i] == True then i is \n        // prime number \n        if (isprime[i]) \n        { \n            // put i into prime[] vector \n            prime.push_back(i); \n  \n            // A prime number is its own smallest \n            // prime factor \n            SPF[i] = i; \n        } \n  \n        // Remove all multiples of  i*prime[j] which are \n        // not prime by making isPrime[i*prime[j]] = false \n        // and put smallest prime factor of i*Prime[j] as prime[j] \n        // [ for exp :let  i = 5 , j = 0 , prime[j] = 2 [ i*prime[j] = 10 ] \n        // so smallest prime factor of '10' is '2' that is prime[j] ] \n        // this loop run only one time for number which are not prime \n        for (long long int j=0; \n             j < (int)prime.size() && \n             i*prime[j] < N && prime[j] <= SPF[i]; \n             j++) \n        { \n            isprime[(i*prime[j])%m]=false; \n  \n            // put smallest prime factor of i*prime[j] \n            SPF[(i*prime[j])%m] = prime[j] ; \n        } \n    } \n} \n  \n// driver  program to test above function \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n        \n    \nios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t;\n    scanf(\"%d\",&t);\n    manipulated_seive(1000007);\n    while(t--)\n    {\n        long long n;\n        scanf(\"%lld\",&n);\n        long long c=0;\n        if(n==2)\n        {  printf(\"1\");\n         printf(\"\\n\");}\n        else if(n==3)\n        {\n            printf(\"2\");\n            printf(\"\\n\");}\n        else\n        {\n        // manipulated_seive(n);\n    for (long unsigned int i=0; i<prime.size() && prime[i] <= n; i++) \n    {c=c%m+1;}\n            isprime.clear();\n        prime.clear();\n        SPF.clear();\n       printf(\"%lld\",((long long)pow(2,c-1))%m);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478516,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978898,
        "updated_at_ms": 1599992098,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:49:32.572Z",
        "__v": 0
    },
    {
        "_id": "5f606406468ccc0964b0c374",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    long long int t;\n    cin>>t;\n    while(t--)\n    {\n    long long int n;\n    cin>>n;\n    long double x[n],y[n],xsum=0,ysum=0;\n    for(long long int i=0;i<n;i++)\n    {\n        cin>>x[i]>>y[i];\n        xsum+=x[i];\n        ysum+=y[i];\n    }\n    xsum=xsum/n;\n    ysum=ysum/n;\n    long long int min=(x[0]-xsum)*(x[0]-xsum)+(y[0]-ysum)*(y[0]-ysum);\n    long long int xans=x[0],yans=y[0];\n    for(long long int i=1;i<n;i++)\n    {\n        if(((x[i]-xsum)*(x[i]-xsum)+(y[i]-ysum)*(y[i]-ysum))<min)\n        {\n            xans=x[i];\n            yans=y[i];\n            min = (x[i]-xsum)*(x[i]-xsum)+(y[i]-ysum)*(y[i]-ysum);\n        }\n    }\n    cout<<xans<<' '<<yans<<\"\\n\";\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478512,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6986492",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599978894,
        "updated_at_ms": 1599983694,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:49:42.300Z",
        "__v": 0
    },
    {
        "_id": "5f606410468ccc0964b0c375",
        "submission_code": "#include <bits/stdc++.h>\n#define fastio ios_base::sync_with_stdio(0);cin.tie(0)\n#define nl cout<<\"\\n\"\n#define pb push_back\n#define max(a,b) ((a)>(b) ? (a) : (b))\n#define min(a,b) ((a)<(b) ? (a) : (b))\n#define REP(i,a,b) for(li i=a; i<=b ;++i)\n#define RREP(i,b,a) for(li i=b ; i>=a ; --i)\nusing namespace std;\nusing ui=unsigned int;\nusing li=long int;\nusing uli=unsigned long int;\nusing lli=long long int;\nusing ulli=unsigned long long int;\n\n\nvoid solve()\n{\n    // li R,C;\n    li n , m;\n    cin >> n >> m;\n    vector<string> grid;\n    vector<vector<string>> dp,path;\n    \n    dp.assign(n, vector<string>(m));\n    path.assign(n,vector<string>(m));\n    for(li i = 0 ; i < n ; ++i)\n    {\n        string s ;\n        cin >> s;\n        grid.push_back(s);\n    }\n\n    dp[0][0]=string(1,grid[0][0]);\n\n    for(li i = 1; i < m ; ++i)\n    {\n        dp[0][i] = dp[0][i-1] + string(1,grid[0][i]);\n        path[0][i] = path[0][i-1]+\"R\";\n    }\n    for(li i = 1; i < n ; ++i)\n    {\n        dp[i][0] = dp[i-1][0] + string(1,grid[i][0]);\n        path[i][0] = path[i-1][0] + \"D\";\n    }\n\n    for(li i = 1; i < n ; ++i)\n    {\n        for(li j = 1 ; j < m ; ++j)\n        {\n            string val1 = dp[i][j-1]+grid[i][j];\n            string val2 = dp[i-1][j]+grid[i][j];\n            if(val1<=val2)\n            {\n                dp[i][j] = val1;\n                path[i][j] = path[i][j-1]+\"R\";\n            }\n            else\n            {\n                dp[i][j] = val2;\n                path[i][j] = path[i-1][j]+\"D\";\n            }\n        }\n    }\n    cout << path[n-1][m-1];\n\n}\n\nint main()\n{\n    // #ifndef ONLINE_JUDGE\n    //     freopen(\"input.txt\", \"r\", stdin);\n    //     freopen(\"output.txt\", \"w\", stdout);\n    // #endif\n    fastio;\n    // start\n    li t;\n    cin>>t;\n    for(li i = 0 ; i < t ; ++i)\n    {\n        cout << \"Case #\"<< i+1 <<\": \";\n        solve();\n        nl;\n    }\n    // #ifndef ONLINE_JUDGE\n    //     cout<<\"\\nTime Elapsed: \" << 1.0*clock() / CLOCKS_PER_SEC <<\" sec\\n\"; \n    // #endif\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478489,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "4312249",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599978858,
        "updated_at_ms": 1599982458,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:49:52.336Z",
        "__v": 0
    },
    {
        "_id": "5f606417468ccc0964b0c376",
        "submission_code": "import sys\nimport itertools\ndef fact(n):\n    if(n == 1):\n        return n\n    else:\n        return n*fact(n-1)\n    \ndef factor(x):\n    factors = []\n    i = 2\n    while x > 1:\n        if x % i == 0:\n            x = x / i\n            factors.append(i)\n        else:\n            i += 1       \n    return len(set(factors))\n\nt=int(sys.stdin.readline())\narr = []\nwhile t!=0:\n    ele = int(sys.stdin.readline())\n    arr.append(ele)\n    t-=1\n    \nfor n in arr:\n    num=fact(n)\n    c=0\n    c=factor(num)\n    sys.stdout.write(str(pow(2,(c-1))%1000000007)+'\\n')       ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478485,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675198",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Keerti159",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978853,
        "updated_at_ms": 1599983653,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:49:59.710Z",
        "__v": 0
    },
    {
        "_id": "5f60641e468ccc0964b0c377",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 1000005\n#define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n// #define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\nmap<char,int> mp;\nstruct node{\n    int val = 0;\n    map<int,node*> m;\n} *root;\nnode* newnode(char c){\n    node* temp = new node;\n    temp->val = 0;\n    return temp;\n}\nmap<int,int> m;\nvoid add(string s){\n    int n = s.size();\n    node* cur = root;\n    rep(i,0,n){\n        cur->val++;\n        if(cur->m.find(mp[s[i]]) == cur->m.end()){\n            cur->m[mp[s[i]]] = newnode(s[i]);\n        }\n        cur = cur->m[mp[s[i]]];\n    }\n    cur->val++;\n}\nmap<int,int> freq;\nint query(string s){\n    int n = s.size();\n    node* cur = root;\n    int len = 0;\n    int val = 0;\n    rep(i,0,n){\n        cur = cur->m[mp[s[i]]];\n        val = 10*val + mp[s[i]];\n        len++;\n        if(cur->val == 1 and m[val] == freq[val]) return len;\n    }\n    cur->val++;\n    return INF;\n}\nint query2(int n){\n    node* cur = root;\n    string s = to_string(n);\n    rep(i,0,sz(s)){\n        if(cur->m.find(s[i] - '0') == cur->m.end()) return 0;\n        cur = cur->m[s[i] - '0'];\n    }\n    return cur->val;\n}\nint dl(int n){\n    int ans = 0;\n    while(n){\n        ans++;\n        n/=10;\n    }\n    return ans;\n}\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n        mp['a'] = 2;\n        mp['b'] = 2;\n        mp['c'] = 2;\n        mp['d'] = 3;\n        mp['e'] = 3;\n        mp['f'] = 3;\n        mp['g'] = 4;\n        mp['h'] = 4;\n        mp['i'] = 4;\n        mp['j'] = 5;\n        mp['k'] = 5;\n        mp['l'] = 5;\n        mp['m'] = 6;\n        mp['n'] = 6;\n        mp['o'] = 6;\n        mp['p'] = 7;\n        mp['q'] = 7;\n        mp['r'] = 7;\n        mp['s'] = 7;\n        mp['t'] = 8;\n        mp['u'] = 8;\n        mp['v'] = 8;\n        mp['w'] = 9;\n        mp['x'] = 9;\n        mp['y'] = 9;\n        mp['z'] = 9;\n    cin>>TESTS;\n    rep(l,1,TESTS+1)\n    {   \n        m.clear();\n        int n,q;\n        cin >> n >> q;\n        root = new node;\n        map<string,string> p;\n        rep(i,0,n){\n            string s,t;\n            cin >> s >> t;\n            p[s] = t;\n            rep(i,0,sz(t)){\n                int cur = 0;\n                rep(j,i,sz(t)){\n                    cur = 10*cur + (t[j]-'0');\n                    m[cur]++;\n                }\n            }\n            add(s);\n        }\n        cout << \"Case #\" << l << \": \";\n        while(q--){\n            string s;\n            cin >> s;\n            string no = p[s];\n            int ans = 50;\n            freq.clear();\n            rep(i,0,sz(no)){\n                int cur = 0;\n                rep(j,i,sz(no)){\n                    cur = 10*cur + (no[j]-'0');\n                    freq[cur]++;\n                }\n            }\n            for(auto j : freq){\n                if(j.sc == m[j.fr]){\n                    if(query2(j.fr) == 0){\n                        ans = min(ans, dl(j.fr));\n                    }\n                }\n            }\n            ans = min(ans, query(s));\n            cout << ans << \" \";\n        }\n        cout << endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478483,
        "contest_id": "115291",
        "problem_id": "177480",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Keypad Trouble",
        "problem_view_link": "keypad-trouble",
        "created_at_ms": 1599978850,
        "updated_at_ms": 1599978850,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:50:06.158Z",
        "__v": 0
    },
    {
        "_id": "5f606427468ccc0964b0c378",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nconst long long MAX_SIZE = 1000007; \n  \n// isPrime[] : isPrime[i] is true if number is prime  \n// prime[] : stores all prime number less than N \n// SPF[] that store smallest prime factor of number \n// [for Exp : smallest prime factor of '8' and '16' \n// is '2' so we put SPF[8] = 2 , SPF[16] = 2 ] \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n  \n// function generate all prime number less then N in O(n) \nvoid manipulated_seive(long long N) \n{ \n    // 0 and 1 are not prime \n    isprime[0] = isprime[1] = false ; \n  \n    // Fill rest of the entries \n    for (long long int i=2; i<N ; i++) \n    { \n        // If isPrime[i] == True then i is \n        // prime number \n        if (isprime[i]) \n        { \n            // put i into prime[] vector \n            prime.push_back(i); \n  \n            // A prime number is its own smallest \n            // prime factor \n            SPF[i] = i; \n        } \n  \n        // Remove all multiples of  i*prime[j] which are \n        // not prime by making isPrime[i*prime[j]] = false \n        // and put smallest prime factor of i*Prime[j] as prime[j] \n        // [ for exp :let  i = 5 , j = 0 , prime[j] = 2 [ i*prime[j] = 10 ] \n        // so smallest prime factor of '10' is '2' that is prime[j] ] \n        // this loop run only one time for number which are not prime \n        for (long long int j=0; \n             j < (int)prime.size() && \n             i*prime[j] < N && prime[j] <= SPF[i]; \n             j++) \n        { \n            isprime[i*prime[j]]=false; \n  \n            // put smallest prime factor of i*prime[j] \n            SPF[i*prime[j]] = prime[j] ; \n        } \n    } \n} \n  \n// driver  program to test above function \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n        \n    \nios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t;\n    scanf(\"%d\",&t);\n    manipulated_seive(1000007);\n    while(t--)\n    {\n        long long n;\n        scanf(\"%lld\",&n);\n        long long c=0;\n        if(n==2)\n        {  printf(\"1\");\n         printf(\"\\n\");}\n        else if(n==3)\n        {\n            printf(\"2\");\n            printf(\"\\n\");}\n        else\n        {\n        // manipulated_seive(n);\n    for (long unsigned int i=0; i<prime.size() && prime[i] <= n; i++) \n    {c=c%m+1;}\n            isprime.clear();\n        prime.clear();\n        SPF.clear();\n       printf(\"%lld\",((long long)pow(2,c-1))%m);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478481,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978848,
        "updated_at_ms": 1599990848,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:50:15.783Z",
        "__v": 0
    },
    {
        "_id": "5f60642f468ccc0964b0c379",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nconst long long MAX_SIZE = 1000007; \n#define pranusha 1000000\n  \n// isPrime[] : isPrime[i] is true if number is prime  \n// prime[] : stores all prime number less than N \n// SPF[] that store smallest prime factor of number \n// [for Exp : smallest prime factor of '8' and '16' \n// is '2' so we put SPF[8] = 2 , SPF[16] = 2 ] \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n  \n// function generate all prime number less then N in O(n) \nvoid manipulated_seive(long long N) \n{ \n    // 0 and 1 are not prime \n    isprime[0] = isprime[1] = false ; \n  \n    // Fill rest of the entries \n    for (long long int i=2; i<N ; i++) \n    { \n        // If isPrime[i] == True then i is \n        // prime number \n        if (isprime[i]) \n        { \n            // put i into prime[] vector \n            prime.push_back(i); \n  \n            // A prime number is its own smallest \n            // prime factor \n            SPF[i] = i; \n        } \n  \n        // Remove all multiples of  i*prime[j] which are \n        // not prime by making isPrime[i*prime[j]] = false \n        // and put smallest prime factor of i*Prime[j] as prime[j] \n        // [ for exp :let  i = 5 , j = 0 , prime[j] = 2 [ i*prime[j] = 10 ] \n        // so smallest prime factor of '10' is '2' that is prime[j] ] \n        // this loop run only one time for number which are not prime \n        for (long long int j=0; \n             j < (int)prime.size() && \n             i*prime[j] < N && prime[j] <= SPF[i]; \n             j++) \n        { \n            isprime[i*prime[j]]=false; \n  \n            // put smallest prime factor of i*prime[j] \n            SPF[i*prime[j]] = prime[j] ; \n        } \n    } \n} \n  \n// driver  program to test above function \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n        \n    \nios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t;\n    scanf(\"%d\",&t);\n    manipulated_seive(pranusha);\n    while(t--)\n    {\n        long long n;\n        scanf(\"%lld\",&n);\n        long long c=0;\n        if(n==2)\n        {  printf(\"1\");\n         printf(\"\\n\");}\n        else if(n==3)\n        {\n            printf(\"2\");\n            printf(\"\\n\");}\n        else\n        {\n        // manipulated_seive(n);\n    for (long unsigned int i=0; i<prime.size() && prime[i] <= n; i++) \n    {c=c%m+1;}\n            isprime.clear();\n        prime.clear();\n        SPF.clear();\n       printf(\"%lld\",((long long)pow(2,c-1))%m);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478460,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978822,
        "updated_at_ms": 1599989622,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:50:23.872Z",
        "__v": 0
    },
    {
        "_id": "5f606437468ccc0964b0c37a",
        "submission_code": "def gcd(a,b):\n    while(b!=0):\n        a,b =b,a%b\n    return a\n\ndef coprime(a,b):\n    return gcd(a,b)==1\n\ndef fact(n):\n    if(n==0 or n==1):\n        return 1\n    else:\n        return n*fact(n-1)\n    \nn=int(input())\nfor i in range(n):\n    a=int(input())\n    f=fact(a)\n    count=0\n    for i in range(1,f):\n        for j in range(i+1,f+1):\n            if(i*j==f):\n                if(coprime(i,j)==1):\n                    count+=1\n    print(count)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478443,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4670161",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "AnvithaGutha",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978798,
        "updated_at_ms": 1599983598,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:50:31.143Z",
        "__v": 0
    },
    {
        "_id": "5f60643f468ccc0964b0c37b",
        "submission_code": "import sys,math,heapq,copy\nfrom collections import defaultdict,deque\nfrom bisect import bisect_left,bisect_right\nfrom functools import cmp_to_key\nt=int(input())\nfor _ in range(t):\n    n,m=map(int,input().split())\n    a=[[0 for j in range(m)] for i in range(n)]\n    for i in range(n):\n        s=input()\n        for j in range(m):\n            value=ord(s[j])-ord('A')\n            a[i][j]=value+1\n    for i in range(1,m):\n        a[0][i]+=a[0][i-1]\n    for i in range(1,n):\n        a[i][0]+=a[i-1][0]\n    for i in range(1,n):\n        for j in range(1,m):\n            a[i][j]+=min(a[i][j-1],a[i-1][j])\n    i=n-1\n    j=m-1\n    ans=\"\"\n    while(i>=0 and j>=0):\n        x=math.inf if(i==0) else a[i-1][j]\n        y=math.inf if(j==0) else a[i][j-1]\n        if(x<y):\n            ans+=\"D\"\n            if(i>0):\n                i-=1\n        else:\n            ans+=\"R\"\n            if(j>0):\n                j-=1\n        if(i==0 and j==0):\n            break\n    ans=ans[::-1]\n    print(f\"Case #{_+1}: {ans}\")",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478441,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "5810514",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "naveenvineeth6",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599978791,
        "updated_at_ms": 1599978791,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:50:39.131Z",
        "__v": 0
    },
    {
        "_id": "5f606449468ccc0964b0c37c",
        "submission_code": "#include <bits/stdc++.h>\n#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)\n#define nl cout<<\"\\n\"\n#define pb push_back\n#define max(a,b) ((a)>(b) ? (a) : (b))\n#define min(a,b) ((a)<(b) ? (a) : (b))\n#define REP(i,a,b) for(li i=a; i<=b ;++i)\n#define RREP(i,b,a) for(li i=b ; i>=a ; --i)\nusing namespace std;\nusing ui=unsigned int;\nusing li=long int;\nusing uli=unsigned long int;\nusing lli=long long int;\nusing ulli=unsigned long long int;\n\n\nvoid solve()\n{\n    // li R,C;\n    li n , m;\n    cin >> n >> m;\n    vector<string> grid;\n    vector<vector<string>> dp,path;\n    \n    dp.assign(n, vector<string>(m));\n    path.assign(n,vector<string>(m));\n    for(li i = 0 ; i < n ; ++i)\n    {\n        string s ;\n        cin >> s;\n        grid.push_back(s);\n    }\n\n    dp[0][0]=string(1,grid[0][0]);\n\n    for(li i = 1; i < m ; ++i)\n    {\n        dp[0][i] = dp[0][i-1] + string(1,grid[0][i]);\n        path[0][i] = path[0][i-1]+\"R\";\n    }\n    for(li i = 1; i < n ; ++i)\n    {\n        dp[i][0] = dp[i-1][0] + string(1,grid[i][0]);\n        path[i][0] = path[i-1][0] + \"D\";\n    }\n\n    for(li i = 1; i < n ; ++i)\n    {\n        for(li j = 1 ; j < m ; ++j)\n        {\n            string val1 = dp[i][j-1]+grid[i][j];\n            string val2 = dp[i-1][j]+grid[i][j];\n            if(val1<=val2)\n            {\n                dp[i][j] = val1;\n                path[i][j] = path[i][j-1]+\"R\";\n            }\n            else\n            {\n                dp[i][j] = val2;\n                path[i][j] = path[i-1][j]+\"D\";\n            }\n        }\n    }\n    cout <<path[n-1][m-1];\n\n}\n\nint main()\n{\n    // #ifndef ONLINE_JUDGE\n    //     freopen(\"input.txt\", \"r\", stdin);\n    //     freopen(\"output.txt\", \"w\", stdout);\n    // #endif\n    fastio;\n    // start\n    li t;\n    cin>>t;\n    for(li i = 0 ; i < t ; ++i)\n    {\n        cout << \"Case #\"<< i+1 <<\": \";\n        solve();\n        nl;\n    }\n    // #ifndef ONLINE_JUDGE\n    //     cout<<\"\\nTime Elapsed: \" << 1.0*clock() / CLOCKS_PER_SEC <<\" sec\\n\"; \n    // #endif\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478438,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "4312249",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599978787,
        "updated_at_ms": 1599981187,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:50:49.267Z",
        "__v": 0
    },
    {
        "_id": "5f606450468ccc0964b0c37d",
        "submission_code": "/*input\n1\n2 5\nTSNMX\nSRCVK\n*/\n/*\n\n**************************\n*                         *\n* AUTHOR :: shado_w      *\n*                         *\n**************************\n\n*/\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#pragma GCC optimize(\"unroll-loops\")\n#define lld         int\n#define pb          push_back\n#define ppb         pop_back\n#define    endl        '\\n'\n#define mii         map<lld,lld>\n#define msi         map<string,lld>\n#define mis         map<lld, string>\n#define mpi         map<pair<lld ,lld >,lld >\n#define pii         pair<lld,lld>\n#define vi          vector<lld>\n#define vpi         vector<pii>\n#define vs          vector<string>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define sz(x)       (lld)x.size()\n#define hell        1000000007\n#define rrep(i,m,n)    for(lld i=m;i>=n;i--)\n#define rep(i,m,n)    for(lld i=m;i<n;i++)\n#define lbnd        lower_bound\n#define ubnd        upper_bound\n#define bs          binary_search\n#define mp          make_pair\n#define what_is(x)  cerr << #x << \" is \" << x << endl;\n#define pr(x)         cout<< x << \" \";\n#define pre(x)        cout<< x << endl ;\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>; \n//change null_type to get ordered_map\n#define N  100005\ntemplate <class T> T& get(T &n){\n    int p;\n    bool f;\n    f=false;\n    n = 0;\n    do{\n        p=getchar();\n    }while( !isdigit(p) && p!='-');\n    if(p=='-') {\n        f=true;\n        p=getchar();\n    }\n    while(isdigit(p)){\n        n=(n<<3)+(n<<1)+(p-'0');\n        p=getchar();\n    }\n    if(f) n=-n;\n    return n;\n}\nvector <vector<char>> a;\nvector <vector<bool>> Vis;\nint n,m;\nbool check(int i,int j){\n    if(i>=n or j>=m){\n        return false;\n    }\n    return true;\n}\nstring res=\"\",ans=\"\";\nbool dfs(int x,int y){\n    if(x==n-1 && y==m-1){\n        return true;\n    }\n    if(Vis[x][y]){\n        return false;\n    }\n    bool p=false;\n    Vis[x][y]=true;\n    if(check(x+1,y) && a[x+1][y] == ans[x+y+1]){\n        p=dfs(x+1,y);\n        if(p){\n            res+=\"D\";\n            return true;\n        }\n    }\n    if(check(x,y+1) && a[x][y+1] == ans[x+y+1]){\n        p=dfs(x,y+1);\n        if(p){\n            res+=\"R\";\n            return true;\n        }\n    }\n    return false;\n}\nvoid solve()\n{\n    cin >> n >> m;\n    a.clear(),Vis.clear();\n    a.resize(n);\n    Vis.resize(n);\n    rep(i,0,n){\n        a[i].resize(m);\n        Vis[i].resize(m);\n        rep(j,0,m){\n            Vis[i][j]=false;\n            cin >> a[i][j];\n        }\n    }\n    res=\"\",ans=\"\";\n    vector <pair<int,int>> curr;\n    curr.pb({0,0});\n    for(int i=0;i<n+m-1;i++){\n        char mn='Z';\n        for(auto j:curr){\n            mn=min(mn,a[j.F][j.S]);\n        }\n        vector<pair<int,int>> curr2;\n        for(auto j:curr){\n            if(a[j.F][j.S]==mn){\n                int x=j.F,y=j.S;\n                if(check(x+1,y)){\n                    curr2.pb({x+1,y});\n                }\n                if(check(x,y+1)){\n                    curr2.pb({x,y+1});\n                }\n            }\n        }\n        curr=curr2;\n        ans+=mn;\n    }\n    dfs(0,0);\n    reverse(all(res));\n    cout << res << endl;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int tests=1;\n    cin>> tests;\n    int cn=0;\n    while(tests--)\n    {\n        cn++;\n        cout << \"Case #\" << cn <<\": \";\n        solve();\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478394,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "1583809",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599978715,
        "updated_at_ms": 1599983515,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:50:56.639Z",
        "__v": 0
    },
    {
        "_id": "5f60645a468ccc0964b0c37e",
        "submission_code": "import math\nn=int(input())\nl=[]\nfor h in range(n):\n    m=int(input())\n    g,p=[],[]\n    for k in range(m):\n        w=list(map(int,input().split()))\n        p.append(w)\n    for i in p:\n        s=0\n        for j in p:\n            if(i!=j):\n                s+=math.pow((i[0]-j[0]),2) + math.pow((i[1]-j[1]),2)\n        g.append(s)\n    minimum=min(g)\n    for o in range(len(g)):\n        if(g[o]==minimum):\n            l.append(p[o])\n            break\nfor q in l:\n    print(*q)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478389,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7170209",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "srujith2k",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599978708,
        "updated_at_ms": 1599979908,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:51:06.571Z",
        "__v": 0
    },
    {
        "_id": "5f606461468ccc0964b0c37f",
        "submission_code": "from sys import*\ninput= stdin.readline\nn=10**6\nl = [True for i in range(n+1)] \nl[0]=False\nl[1]=False\np = 2\nwhile(p*p<=n): \n    if (l[p] == True): \n        for i in range(p*p,n+1, p): \n            l[i] = False\n    p+=1\nres=[]\nx=0\nfor i in range(10**6+1):\n    if(l[i]==True):\n        x+=1\n    res.append(x)       \nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=res[n]\n    s=(2**(s-1))%((10**9) + 7)\n    print(s)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478374,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4529175",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "itsbhavya",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978692,
        "updated_at_ms": 1599981092,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:51:13.022Z",
        "__v": 0
    },
    {
        "_id": "5f60646b468ccc0964b0c380",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    static boolean iscoprime(double a,double b)\n    {\n        if(a==b)\n        {\n            return false;\n        }\n        else{\n            double sm=a;\n            double ln=b;\n            double div=1;\n            if(sm>ln)\n            {\n                sm=b;\n                ln=a;\n            }\n              while(ln>sm)\n            {\n                double rem = ln % sm;\n                if (rem == 0)\n                {\n                    div = sm;\n                    break;\n                }\n                else\n                {\n                    ln = sm;\n                    sm = rem;\n                }\n            }\n            if(div==1)\n            {\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        \n    }\n    static double factorial(double n)\n    {\n        // double ret=1;\n        // for(double i=1;i<=n;i++)\n        // {\n        //     ret=ret*i;\n        // }\n        if(n==1)\n        {\n            return 1;\n        }\n        return n*factorial(n-1);\n    }\n    static double noofvalues(double a)\n    {\n        ArrayList<Double> lit = new ArrayList();// stores all the factors\n        double val=0;\n        for(double i=1;i<=(a/2);i++)\n        {\n            if(a%i==0)\n            {\n                    if(iscoprime(i,a/i))\n                    {\n                        if(!lit.contains(i)){\n                        lit.add(i);\n                        lit.add(a/i);\n                        val=val+1;\n                        }\n                    }\n            }\n        }\n        return val;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scn = new Scanner(System.in);\n        int notest=scn.nextInt();\n        double[] arr = new double[notest];\n        for(int i=0;i<notest;i++)\n        {\n            arr[i]=scn.nextDouble();\n        }\n        scn.close();\n        for(int i=0;i<notest;i++)\n        {\n            System.out.println(Math.round(noofvalues(factorial(arr[i]))));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478366,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675361",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "tekulahemanth",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978682,
        "updated_at_ms": 1599978682,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:51:23.570Z",
        "__v": 0
    },
    {
        "_id": "5f606472468ccc0964b0c381",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nconst long long MAX_SIZE = 1000007; \n  \n// isPrime[] : isPrime[i] is true if number is prime  \n// prime[] : stores all prime number less than N \n// SPF[] that store smallest prime factor of number \n// [for Exp : smallest prime factor of '8' and '16' \n// is '2' so we put SPF[8] = 2 , SPF[16] = 2 ] \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n  \n// function generate all prime number less then N in O(n) \nvoid manipulated_seive(long long N) \n{ \n    // 0 and 1 are not prime \n    isprime[0] = isprime[1] = false ; \n  \n    // Fill rest of the entries \n    for (long long int i=2; i<N ; i++) \n    { \n        // If isPrime[i] == True then i is \n        // prime number \n        if (isprime[i]) \n        { \n            // put i into prime[] vector \n            prime.push_back(i); \n  \n            // A prime number is its own smallest \n            // prime factor \n            SPF[i] = i; \n        } \n  \n        // Remove all multiples of  i*prime[j] which are \n        // not prime by making isPrime[i*prime[j]] = false \n        // and put smallest prime factor of i*Prime[j] as prime[j] \n        // [ for exp :let  i = 5 , j = 0 , prime[j] = 2 [ i*prime[j] = 10 ] \n        // so smallest prime factor of '10' is '2' that is prime[j] ] \n        // this loop run only one time for number which are not prime \n        for (long long int j=0; \n             j < (int)prime.size() && \n             i*prime[j] < N && prime[j] <= SPF[i]; \n             j++) \n        { \n            isprime[i*prime[j]]=false; \n  \n            // put smallest prime factor of i*prime[j] \n            SPF[i*prime[j]] = prime[j] ; \n        } \n    } \n} \n  \n// driver  program to test above function \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n        \n    \nios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t;\n    scanf(\"%d\",&t);\n    manipulated_seive(1000000);\n    while(t--)\n    {\n        long long n;\n        scanf(\"%lld\",&n);\n        long long c=0;\n        if(n==2)\n        {  printf(\"1\");\n         printf(\"\\n\");}\n        else if(n==3)\n        {\n            printf(\"2\");\n            printf(\"\\n\");}\n        else\n        {\n        // manipulated_seive(n);\n    for (long unsigned int i=0; i<prime.size() && prime[i] <= n; i++) \n    {c=c%m+1;}\n            isprime.clear();\n        prime.clear();\n        SPF.clear();\n       printf(\"%lld\",((long long)pow(2,c-1))%m);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478354,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978675,
        "updated_at_ms": 1599988275,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:51:30.942Z",
        "__v": 0
    },
    {
        "_id": "5f606478468ccc0964b0c382",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    static boolean iscoprime(double a,double b)\n    {\n        if(a==b)\n        {\n            return false;\n        }\n        else{\n            double sm=a;\n            double ln=b;\n            double div=1;\n            if(sm>ln)\n            {\n                sm=b;\n                ln=a;\n            }\n              while(ln>sm)\n            {\n                double rem = ln % sm;\n                if (rem == 0)\n                {\n                    div = sm;\n                    break;\n                }\n                else\n                {\n                    ln = sm;\n                    sm = rem;\n                }\n            }\n            if(div==1)\n            {\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        \n    }\n    static double factorial(double n)\n    {\n        // double ret=1;\n        // for(double i=1;i<=n;i++)\n        // {\n        //     ret=ret*i;\n        // }\n        if(n==1)\n        {\n            return 1;\n        }\n        return n*factorial(n-1);\n    }\n    static double noofvalues(double a)\n    {\n        ArrayList<Double> lit = new ArrayList();// stores all the factors\n        double val=0;\n        for(double i=1;i<=(a/2);i++)\n        {\n            if(a%i==0)\n            {\n                    if(iscoprime(i,a/i))\n                    {\n                        if(!lit.contains(i)){\n                        lit.add(i);\n                        lit.add(a/i);\n                        val=val+1;\n                        }\n                    }\n            }\n        }\n        return val;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scn = new Scanner(System.in);\n        int notest=scn.nextInt();\n        double[] arr = new double[notest];\n        for(int i=0;i<notest;i++)\n        {\n            arr[i]=scn.nextDouble();\n        }\n        scn.close();\n        for(int i=0;i<notest;i++)\n        {\n            System.out.println(Math.round(noofvalues(factorial(arr[i]))));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478346,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4679580",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "160218733021CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978661,
        "updated_at_ms": 1599987061,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:51:36.983Z",
        "__v": 0
    },
    {
        "_id": "5f60647e468ccc0964b0c383",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Solution {\n    static int fact(int n)\n    {\n        int s=1;\n        for(int i=1;i<=n;i++)\n            s=s*i;\n        return s;\n    }\n    static int g(int s, int d)\n    {\n        while(s!=0 && d!=0)\n        {\n            if(s>d)\n                s=s%d;\n            else\n                d=d%s;\n        }\n        return Math.max(s,d);\n    }\n    static int countp(int n)\n    {\n        int count=1;\n        for(int j=2;j<n;j++)\n        {  int k=n/j;\n          if(n==j*k && j!=k &&k<j)\n          {\n           if(g(j,k)==1)\n           {\n               count=count+1;\n           }\n          }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        for(int i=0;i<N;i++)\n        {\n            int n=sc.nextInt();\n            System.out.println((countp(fact(n))));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478340,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6636583",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "ramyasreesai2000",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978652,
        "updated_at_ms": 1599981052,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:51:42.753Z",
        "__v": 0
    },
    {
        "_id": "5f606488468ccc0964b0c384",
        "submission_code": "/*input\n1\n2 5\nTSNMX\nSRCVK\n*/\n/*\n\n**************************\n*                         *\n* AUTHOR :: shado_w      *\n*                         *\n**************************\n\n*/\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#pragma GCC optimize(\"unroll-loops\")\n#define lld          long long int\n#define pb          push_back\n#define ppb         pop_back\n#define    endl        '\\n'\n#define mii         map<lld,lld>\n#define msi         map<string,lld>\n#define mis         map<lld, string>\n#define mpi         map<pair<lld ,lld >,lld >\n#define pii         pair<lld,lld>\n#define vi          vector<lld>\n#define vpi         vector<pii>\n#define vs          vector<string>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define sz(x)       (lld)x.size()\n#define hell        1000000007\n#define rrep(i,m,n)    for(lld i=m;i>=n;i--)\n#define rep(i,m,n)    for(lld i=m;i<n;i++)\n#define lbnd        lower_bound\n#define ubnd        upper_bound\n#define bs          binary_search\n#define mp          make_pair\n#define what_is(x)  cerr << #x << \" is \" << x << endl;\n#define pr(x)         cout<< x << \" \";\n#define pre(x)        cout<< x << endl ;\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>; \n//change null_type to get ordered_map\n#define N  100005\ntemplate <class T> T& get(T &n){\n    int p;\n    bool f;\n    f=false;\n    n = 0;\n    do{\n        p=getchar();\n    }while( !isdigit(p) && p!='-');\n    if(p=='-') {\n        f=true;\n        p=getchar();\n    }\n    while(isdigit(p)){\n        n=(n<<3)+(n<<1)+(p-'0');\n        p=getchar();\n    }\n    if(f) n=-n;\n    return n;\n}\nvector <vector<char>> a;\nvector <vector<bool>> Vis;\nint n,m;\nbool check(int i,int j){\n    if(i>=n or j>=m){\n        return false;\n    }\n    return true;\n}\nstring res=\"\",ans=\"\";\nbool dfs(int x,int y){\n    if(x==n-1 && y==m-1){\n        return true;\n    }\n    if(Vis[x][y]){\n        return false;\n    }\n    bool p=false;\n    Vis[x][y]=true;\n    if(check(x+1,y) && a[x+1][y] == ans[x+y+1]){\n        p=dfs(x+1,y);\n        if(p){\n            res+=\"D\";\n            return true;\n        }\n    }\n    if(check(x,y+1) && a[x][y+1] == ans[x+y+1]){\n        p=dfs(x,y+1);\n        if(p){\n            res+=\"R\";\n            return true;\n        }\n    }\n    return false;\n}\nvoid solve()\n{\n    cin >> n >> m;\n    a.clear(),Vis.clear();\n    a.resize(n);\n    Vis.resize(n);\n    rep(i,0,n){\n        a[i].resize(m);\n        Vis[i].resize(m);\n        rep(j,0,m){\n            Vis[i][j]=false;\n            cin >> a[i][j];\n        }\n    }\n    res=\"\",ans=\"\";\n    vector <pair<int,int>> curr;\n    curr.pb({0,0});\n    for(int i=0;i<n+m-1;i++){\n        char mn='Z';\n        for(auto j:curr){\n            mn=min(mn,a[j.F][j.S]);\n        }\n        vector<pair<int,int>> curr2;\n        for(auto j:curr){\n            if(a[j.F][j.S]==mn){\n                int x=j.F,y=j.S;\n                if(check(x+1,y)){\n                    curr2.pb({x+1,y});\n                }\n                if(check(x,y+1)){\n                    curr2.pb({x,y+1});\n                }\n            }\n        }\n        curr=curr2;\n        ans+=mn;\n    }\n    dfs(0,0);\n    reverse(all(res));\n    cout << res << endl;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int tests=1;\n    cin>> tests;\n    int cn=0;\n    while(tests--)\n    {\n        cn++;\n        cout << \"Case #\" << cn <<\": \";\n        solve();\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478323,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "1583809",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599978613,
        "updated_at_ms": 1599982213,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:51:52.606Z",
        "__v": 0
    },
    {
        "_id": "5f606491468ccc0964b0c385",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef solution2(N):\n    f=1\n    count=0\n    m=[]\n    flag=0\n    mod=1000000007\n    for l in range(1,N+1):\n        f=f*l\n    for k in range(1, f+1):\n        if f%k==0:\n            m.append(k)\n    \n       \n    for j in range(0,len(m)):\n        p=m[j]\n        for i in range(j+1,len(m)):\n           \n            q=m[i]\n            if p*q==f:\n                while p != 0 :\n                    q,p = p,q%p\n                    flag=1\n                if q==1 and flag==1 :\n                    count+=1\n                    flag=0\n    return count%mod\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        N= int(input())\n        res = solution2(N)\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478320,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978611,
        "updated_at_ms": 1599979811,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:52:01.558Z",
        "__v": 0
    },
    {
        "_id": "5f606497468ccc0964b0c386",
        "submission_code": "import math\nfrom math import gcd as bltin_gcd\nfrom math import sqrt \n\ndef coprime2(a, b):\n    return bltin_gcd(a, b) == 1\n\ndef countOrderedPairs(n): \n    count_pairs = 0\n    p = int(sqrt(n)) + 1\n    for i in range(1,p): \n        j = n/i\n        k = n//i\n        if j==k:\n            if coprime2(i,k):\n                count_pairs = (count_pairs+1)%m\n    return count_pairs \n\nt = int(input())\nm = 1000000007\nwhile(t>0):\n    t-=1\n    n = int(input())\n    nf = (math.factorial(n%m))%m\n    ans = (countOrderedPairs(nf))%m\n    print(ans)\n    \n\n\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478314,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9686060",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "kedharnathsonu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978601,
        "updated_at_ms": 1599981001,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:52:07.706Z",
        "__v": 0
    },
    {
        "_id": "5f60649f468ccc0964b0c387",
        "submission_code": "import sys\nimport math \n\nk=int(input())\nfor i in range(k):\n    c=0\n    n=int(input())\n    for j in range(1,math.factorial(n+1)):\n        for k in range(1,math.factorial(n+1)):\n            if((j<k) and math.gcd(j,k)==1):\n                if(k*j==math.factorial(n)):\n                    c+=1\n    print(c%(10**9+7))\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478311,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8595924",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "saitejachalla201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978595,
        "updated_at_ms": 1599980995,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:52:15.355Z",
        "__v": 0
    },
    {
        "_id": "5f6064a5468ccc0964b0c388",
        "submission_code": "import sys\nimport itertools\ndef fact(n):\n    if(n == 1):\n        return n\n    else:\n        return n*fact(n-1)\n    \ndef factor(x):\n    factors = []\n    i = 2\n    while x > 1:\n        if x % i == 0:\n            x = x / i\n            factors.append(i)\n        else:\n            i += 1       \n    return len(set(factors))\n\nt=int(sys.stdin.readline())\narr = []\nwhile t!=0:\n    ele = int(sys.stdin.readline())\n    arr.append(ele)\n    t-=1\n    \nfor n in arr:\n    num=fact(n)\n    c=0\n    c=factor(num)\n    sys.stdout.write(str(pow(2,(c-1)))+'\\n')       ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478306,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675198",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Keerti159",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978586,
        "updated_at_ms": 1599982186,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:52:21.013Z",
        "__v": 0
    },
    {
        "_id": "5f6064ac468ccc0964b0c389",
        "submission_code": "n=int(input())\nl=[]\nfor h in range(n):\n    m=int(input())\n    g,p=[],[]\n    for k in range(m):\n        w=list(map(int,input().split()))\n        p.append(w)\n    for i in p:\n        s=0\n        for j in p:\n            if(i!=j):\n                s+=((i[0]-j[0])**2) + ((i[1]-j[1])**2)\n        g.append(s)\n    minimum=min(g)\n    for o in range(len(g)):\n        if(g[o]==minimum):\n            l.append(p[o])\n            break\nfor q in l:\n    print(*q)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478303,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7170209",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "srujith2k",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599978576,
        "updated_at_ms": 1599978576,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:52:28.205Z",
        "__v": 0
    },
    {
        "_id": "5f6064b1468ccc0964b0c38a",
        "submission_code": "t=int(input())\nn=[]\ns=[]\narr=[]\nfor i in range(t):\n    n.append(int(input()))\nfor i in n:\n    f=1\n    for j in range(1,i):\n        f+=f*j\n    s.append(f)    \n#print(s)\nfor k in s:\n    factors=[]\n    for i in range(1,k+1):\n        if k%i==0:\n            factors.append(i)\n    arr.append(factors)        \n\n#print(arr)\n\ndef gcd(a, b): \n    \n    if (a == 0 or b == 0): \n        return False\n    \n    \n    if (a == b): \n        return a \n\n    if (a > b): \n        return gcd(a-b, b) \n        \n    return gcd(a, b-a) \n    \ndef coprime(a, b) : \n    return (gcd(a, b) == 1) \n\n\ndef numOfPairs(arr, n,s,c) : \n    count = 0\n    \n    for i in range(0, n-1) : \n\n        for j in range(i+1, n) :\n            \n            if(arr[i]*arr[j]==s[c]):\n                if (coprime(arr[i], arr[j])) :\n                    count = count + 1\n                    \n                    \n    #c=c+1\n    return count \n\nc=0\nfor i in arr:\n    n = len(i)\n    print(numOfPairs(i, n,s,c)) \n    c=c+1\n\n    \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478299,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9380840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "trishulmabbu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978575,
        "updated_at_ms": 1599979775,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:52:33.812Z",
        "__v": 0
    },
    {
        "_id": "5f6064b7468ccc0964b0c38b",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    static boolean iscoprime(float a,float b)\n    {\n        if(a==b)\n        {\n            return false;\n        }\n        else{\n            float sm=a;\n            float ln=b;\n            float div=0;\n            if(sm>ln)\n            {\n                sm=b;\n                ln=a;\n            }\n            for(float i=1;i<=sm;i++)\n            {\n                if(sm%i==0 && ln%i==0)\n                {\n                    div=div+1;\n                }\n            }\n            if(div==1)\n            {\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        \n    }\n    static double factorial(double n)\n    {\n        // double ret=1;\n        // for(double i=1;i<=n;i++)\n        // {\n        //     ret=ret*i;\n        // }\n        if(n==1)\n        {\n            return 1;\n        }\n        return n*factorial(n-1);\n    }\n    }\n    static float noofvalues(float a)\n    {\n        ArrayList<Float> lit = new ArrayList();// stores all the factors\n        float val=0;\n        for(float i=1;i<=(a/2);i++)\n        {\n            if(a%i==0)\n            {\n                    if(iscoprime(i,a/i))\n                    {\n                        if(!lit.contains(i)){\n                        lit.add(i);\n                        lit.add(a/i);\n                        val=val+1;\n                        }\n                    }\n            }\n        }\n        return val;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scn = new Scanner(System.in);\n        int notest=scn.nextInt();\n        float[] arr = new float[notest];\n        for(int i=0;i<notest;i++)\n        {\n            arr[i]=scn.nextFloat();\n        }\n        scn.close();\n        for(int i=0;i<notest;i++)\n        {\n            System.out.println(Math.round(noofvalues(factorial(arr[i]))));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478291,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4679580",
        "submission_status": "Compilation error",
        "submission_language": "java",
        "site_user_handle": "160218733021CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978557,
        "updated_at_ms": 1599985757,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T06:52:39.854Z",
        "__v": 0
    },
    {
        "_id": "5f6064be468ccc0964b0c38c",
        "submission_code": "#include<bits/stdc++.h>\n#define ll             long long\n#define ii             pair<int,int>\n#define vi             vector<int>\n#define vvi            vector<vi>\n#define vll            vector<ll>\n#define vii            vector<ii>\n#define vvll           vector<vll>\n#define vvii           vector<vector<ii>>\n#define vs             vector<string>\n#define mms0(a)        memset(a,0,sizeof(a))\n#define mms1(a)        memset(a,-1,sizeof(a))\n#define ar             array\n#define pb             push_back\n#define ff             first\n#define ss             second\n#define FOR(n)         for(int i=0;i<n;i++)\n#define RFOR(n,a)      for(int i=n;i>=a;i--)\n#define FR(i,a,n,c)    for(int i=a;i<n;i+=c)\n#define RFR(i,n,a,c)   for(int i=n;i>=a;i-=c)\n#define deb1(a)        cout<<#a<<\" \"<<a<<\"\\n\"\n#define deb2(a,b)      cout<<#a<<\" \"<<a<<\" \"<<#b<<\" \"<<b<<\"\\n\"\n#define deb3(a,b,c)    cout<<#a<<\" \"<<a<<\" \"<<#b<<\" \"<<b<<\" \"<<#c<<\" \"<<c<<\"\\n\"\n#define MOD7           (int)1e9+7\n#define MOD9           (int)1e9+9\n#define inf            (int)1e9\n#define ninf           (int)-1e9\n#define INF            (ll)1e18\n#define NINF           (ll)-1e18\n#define pv(v)          for(auto it:v)cout<<it<<\" \";cout<<\"\\n\"\n#define pmp(v)         for(auto it:v)cout<<it.ff<<\":\"<<it.ss<<\" \";cout<<\"\\n\"           \n#define L_B            lower_bound\n#define U_B            upper_bound\n#define _              0\n#define FIO            ios_base::sync_with_stdio(false);cin.tie(NULL)\n#define all(a)         a.begin(),a.end()\n#define ppb            pop_back\n#define mkp            make_pair\n\nusing namespace std;\n\nll n,m;\nvll v;\nll mod = (ll)1e9+7;\nconst int maxN = (int)2e6+2;\nll inverseMod[maxN],fact[maxN],invFact[maxN];\n\nll factorial(int n, int r){\n    //return fact[n]*inverseMod[n-r]*inverseMod[r];\n    return (((fact[n]*invFact[n-r])%mod)*invFact[r])%mod;\n}\nint  main(){\n    FIO;\n    int t = 1;\n\n    inverseMod[1] = 1;\n   \n    for(int i=2;i<maxN;i++){\n        inverseMod[i] = mod - mod/i*inverseMod[mod%i]%mod;\n    }\n    \n    fact[0] = 1;invFact[0] = 1;\n    \n    for(int i=1;i<maxN;i++){\n        fact[i] = fact[i-1]*i%mod;\n        invFact[i] = invFact[i-1]*inverseMod[i]%mod;\n    }\n\n    cin>>t;\n    while(t--){    \n    ll x,y,x1,y1,x2,y2;\n    cin>>x>>y>>x1>>y1>>x2>>y2;\n\n    ll mn = factorial(x+y,x);\n    ll mn1 = factorial(x1+y1,x1) * factorial(x+y-x1-y1,x-x1);\n    ll mn2 = factorial(x2+y2,x2) * factorial(x+y-x2-y2,x - x2);\n    ll add = factorial(x1+y1 ,x1) * factorial(x2 + y2 - x1 - y1,x2 - x1) * factorial( x - x2 + y - y2,x - x2);\n   // cout<<factorial(x1+y1,x1)<<\" \"<<factorial(x2 + y2 - x1 - y1,x2 - x1)<<\"\\n\";\n //   cout<<mn<<\" \"<<mn1<<\" \"<<mn2<<\" \"<<add<<\"\\n\";\n    cout<< (mn - mn1 - mn2 + add)<<\"\\n\";\n    }\n/*\n    string str;\n    cin>>str;n =str.size();\n    int dp[26] = {0};\n    for(auto it:str) dp[it-'a']++;\n    ll ans = fact[n];\n    FOR(26){\n        ans = ans*invFact[dp[i]]%mod;\n    }\n    cout<<ans;\n    */\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478288,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "3988713",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "prashanth_bhona1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599978554,
        "updated_at_ms": 1599978554,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:52:46.715Z",
        "__v": 0
    },
    {
        "_id": "5f6064c7468ccc0964b0c38d",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nconst long long MAX_SIZE = 1000007; \n  \n// isPrime[] : isPrime[i] is true if number is prime  \n// prime[] : stores all prime number less than N \n// SPF[] that store smallest prime factor of number \n// [for Exp : smallest prime factor of '8' and '16' \n// is '2' so we put SPF[8] = 2 , SPF[16] = 2 ] \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n  \n// function generate all prime number less then N in O(n) \nvoid manipulated_seive(long long N) \n{ \n    // 0 and 1 are not prime \n    isprime[0] = isprime[1] = false ; \n  \n    // Fill rest of the entries \n    for (long long int i=2; i<N ; i++) \n    { \n        // If isPrime[i] == True then i is \n        // prime number \n        if (isprime[i]) \n        { \n            // put i into prime[] vector \n            prime.push_back(i); \n  \n            // A prime number is its own smallest \n            // prime factor \n            SPF[i] = i; \n        } \n  \n        // Remove all multiples of  i*prime[j] which are \n        // not prime by making isPrime[i*prime[j]] = false \n        // and put smallest prime factor of i*Prime[j] as prime[j] \n        // [ for exp :let  i = 5 , j = 0 , prime[j] = 2 [ i*prime[j] = 10 ] \n        // so smallest prime factor of '10' is '2' that is prime[j] ] \n        // this loop run only one time for number which are not prime \n        for (long long int j=0; \n             j < (int)prime.size() && \n             i*prime[j] < N && prime[j] <= SPF[i]; \n             j++) \n        { \n            isprime[i*prime[j]]=false; \n  \n            // put smallest prime factor of i*prime[j] \n            SPF[i*prime[j]] = prime[j] ; \n        } \n    } \n} \n  \n// driver  program to test above function \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n        \n    \nios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long n;\n        scanf(\"%lld\",&n);\n        long long c=0;\n        if(n==2)\n        {  printf(\"1\");\n         printf(\"\\n\");}\n        else if(n==3)\n        {\n            printf(\"2\");\n            printf(\"\\n\");}\n        else\n        {\n        manipulated_seive(n);\n    for (long unsigned int i=0; i<prime.size() && prime[i] <= n; i++) \n    {c=c%m+1;}\n            isprime.clear();\n        prime.clear();\n        SPF.clear();\n       printf(\"%lld\",((long long)pow(2,c-1))%m);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478269,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978540,
        "updated_at_ms": 1599986940,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:52:55.254Z",
        "__v": 0
    },
    {
        "_id": "5f6064d0468ccc0964b0c38e",
        "submission_code": "#include <bits/stdc++.h> \nusing namespace std; \ntypedef long long ll;\n#define nl \"\\n\";\nll power(ll x,ll y,ll m) { ll res=1; while(y) { if(y&1){res = (res%m*x%m)%m;} y>>=1;x=(x%m*x%m)%m; } return res%m; }\nbool p[1000001]; \nvoid func(int n) \n{  \n    memset(p, true, sizeof(p)); \n    p[0]=0;\n    p[1]=0;\n    for (int i=2;i*i<=n;i++) \n    { \n        if (p[i]==true) \n        { \n            for(int j=i*i;j<=n;j+=i) \n                p[j]=false; \n        } \n    }\n}\nll mod=1e9+7;\nint main(){\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n    ll t,n;\n    cin>>t;\n    func(1e6);\n    ll a[1000001]={0};\n    for(int i=2;i<=1e6;i++){\n        if(p[i]==1) a[i]=a[i-1]+1;\n        else a[i]=a[i-1];\n    }\n    ll x=2,m[100001];\n    m[0]=1;\n    for(int i=1;i<=100000;i++){\n        m[i]=x%mod;\n        x=(x*2)%mod;\n    }\n    while(t--){\n        cin>>n;\n        if(n==1){\n            cout<<0<<nl;\n        }\n        else cout<<m[a[n]-1]<<nl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478251,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5687885",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "balajipulugujju1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978514,
        "updated_at_ms": 1599980914,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:53:04.653Z",
        "__v": 0
    },
    {
        "_id": "5f6064d8468ccc0964b0c38f",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint gcd(int a, int b) \n{ \n    // Everything divides 0  \n    if (a == 0) \n       return b; \n    if (b == 0) \n       return a; \n   \n    // base case \n    if (a == b) \n        return a; \n   if(a==1 || b==1)\n       return 1;\n    // a is greater \n    if (a > b) \n        return gcd(a-b, b); \n    return gcd(a, b-a); \n} \nint fact(int n){\n    int i,fac=1;\n    for(i=1;i<=n;i++){\n        fac=fac*i;\n    }\n    return fac;\n}\nint splitting(int n){\n    int i,j,x[n],c=0,cnt=0;\n    for(i=1;i<=n;i++){\n        if(n%i==0)\n            x[c++]=i;\n    }\n    for(i=0;i<c;i++){\n        for(j=i+1;j<c;j++){\n            if(x[i]*x[j]==n && gcd(x[i],x[j])==1)\n                cnt++;\n        }\n    }\n    return cnt;\n}\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    int t,i,n,f,res;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%d\",&n);\n        f=fact(n);\n        res=splitting(f);\n        printf(\"%d\\n\",res);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478234,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4669863",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218733019CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978488,
        "updated_at_ms": 1599979688,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:53:12.006Z",
        "__v": 0
    },
    {
        "_id": "5f6064df468ccc0964b0c390",
        "submission_code": "t=int(input())\nn=[]\ns=[]\narr=[]\nfor i in range(t):\n    n.append(int(input()))\nfor i in n:\n    f=1\n    for j in range(1,i):\n        f+=f*j\n    s.append(f)    \n#print(s)\nfor k in s:\n    factors=[]\n    for i in range(1,k+1):\n        if k%i==0:\n            factors.append(i)\n    arr.append(factors)        \n\nprint(arr)\n\ndef gcd(a, b): \n    \n    if (a == 0 or b == 0): \n        return False\n    \n    \n    if (a == b): \n        return a \n\n    if (a > b): \n        return gcd(a-b, b) \n        \n    return gcd(a, b-a) \n    \ndef coprime(a, b) : \n    return (gcd(a, b) == 1) \n\n\ndef numOfPairs(arr, n,s,c) : \n    count = 0\n    \n    for i in range(0, n-1) : \n\n        for j in range(i+1, n) :\n            \n            if(arr[i]*arr[j]==s[c]):\n                if (coprime(arr[i], arr[j])) :\n                    count = count + 1\n                    \n                    \n    #c=c+1\n    return count \n\nc=0\nfor i in arr:\n    n = len(i)\n    print(numOfPairs(i, n,s,c)) \n    c=c+1\n\n    \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478221,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9380840",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "trishulmabbu",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978472,
        "updated_at_ms": 1599978472,
        "misc_notes": "[\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:53:19.203Z",
        "__v": 0
    },
    {
        "_id": "5f6064e5468ccc0964b0c391",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100000][2]={0};\nint find_func(int a[][2],int n,int i)\n{\n    int s,j;\n    for(j=0;j<n;j++)\n    {\n        if(j!=i)\n        {\n            s = pow(a[i][0]-a[j][0],2)+pow(a[j][1]-a[i][1],2) + s;\n        }\n    }\n    return s;\n}\nvoid ntest_case(int n)\n{\n    int sm,x,y,i,s;\n           for(i=0;i<n;i++)\n            {\n                scanf(\"%d %d\\n\",&a[i][0],&a[i][1]);\n            }\n            sm = find_func(a,n,0);\n            x = a[0][0];\n            y = a[0][1];\n            for(i=1;i<n;i++)\n            {\n                s=find_func(a,n,i);\n                if(sm>s)\n                {\n                    sm=s;\n                    x=a[i][0];\n                    y=a[i][1];\n                }\n            }\n        printf(\"%d %d\\n\",x,y);\n}\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n,k;\n    scanf(\"%d\",&t);\n    for(k=0;k<t;k++)\n    {\n        scanf(\"%d\",&n);\n        ntest_case(n);\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478204,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6832311",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "19H51A05E3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599978438,
        "updated_at_ms": 1599982038,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:53:25.253Z",
        "__v": 0
    },
    {
        "_id": "5f6064ed468ccc0964b0c392",
        "submission_code": "#!/bin/python3\n\nimport math\nimport os\nimport sys\n\ndef solution2(N):\n    f=1\n    count=0\n    m=[]\n    flag=0\n    for l in range(1,N+1):\n        f=f*l\n    for k in range(1, f+1):\n        if f%k==0:\n            m.append(k)\n    \n       \n    for j in range(0,len(m)):\n        p=m[j]\n        for i in range(j+1,len(m)):\n           \n            q=m[i]\n            if p*q==f:\n                while p != 0 :\n                    q,p = p,q%p\n                    flag=1\n                if q==1 and flag==1 :\n                    count+=1\n                    flag=0\n    return count\n\nif __name__ =='__main__':\n    T=int(input())\n    for _ in range(T):\n        N= int(input())\n        res = solution2(N)\n        print(res)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478198,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978424,
        "updated_at_ms": 1599978424,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:53:33.852Z",
        "__v": 0
    },
    {
        "_id": "5f6064f3468ccc0964b0c393",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            System.out.println(countprimes(v));\n        }\n    }\n    static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        else if(b==0||a==b)\n            return a;\n        else if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static int countprimes(int n)\n    {\n        int count=1;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478178,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978394,
        "updated_at_ms": 1599997594,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:53:39.859Z",
        "__v": 0
    },
    {
        "_id": "5f6064fe468ccc0964b0c394",
        "submission_code": "/* ****Ragnar7 _Lawliet_**** */\n/* First, solve the problem.Then write the code. */\n#include<bits/stdc++.h>\n#define ll          long long\n#define ld             long double\n#define hell        1000000007\n#define time        cerr << \"\\nTime elapsed: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\nstd::mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());\nusing namespace std;\nconst ll N = 2e6+5;\nvector<ll> fact(N);\nll expo(ll base, ll exponent, ll mod) {                                //return base^exponent modulo modulus\n    ll ans = 1;\n    while(exponent !=0 ) {\n        if((exponent&1) == 1) {\n            ans = ans*base ;\n            ans = ans%mod;\n        }\n        base = base*base;\n        base %= mod;\n        exponent>>= 1;\n    }\n    return ans%mod;\n}\n\nll calc(ll ox,ll oy,ll n,ll m )\n{\n    ll N = n - ox+1;\n    ll M = m - oy+1;\n\n    return ((fact[N+M-2]*expo(fact[N-1],hell-2,hell)%hell)*expo(fact[M-1],hell-2,hell))%hell;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    // #ifndef ONLINE_JUDGE\n    // freopen (\"input.txt\",\"r\",stdin);\n    // // freopen (\"output.txt\",\"w\",stdout);\n    // #endif\n    ll t = 1;\n    cin>>t;\n    \n    fact[0] = 1;\n    for(ll i=1;i<N;i++)\n        fact[i] =(fact[i-1]*i)%hell;\n    while(t--)\n    {\n        ll x,y,x1,y1,x2,y2;\n        cin>>x>>y>>x1>>y1>>x2>>y2;\n\n        ll ans  = calc(0,0,x,y);\n        ll tmp1 = (calc(0,0,x1,y1)*calc(x1,y1,x,y))%hell;\n        ll tmp2 = (calc(0,0,x2,y2)*calc(x2,y2,x,y))%hell;\n        ll tmp3 = ((calc(0,0,x1,y1)*calc(x1,y1,x2,y2)%hell)*calc(x2,y2,x,y))%hell;\n        ans = (ans - tmp1 - tmp2 +tmp3)%hell;\n        ans = (ans+hell)%hell;\n        cout<<ans<<'\\n';\n    }\n\n    \n    time\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478172,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "3583145",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "Ragnar_7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599978387,
        "updated_at_ms": 1599978387,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:53:50.202Z",
        "__v": 0
    },
    {
        "_id": "5f606507468ccc0964b0c395",
        "submission_code": "def factorial(n): \n    return 1 if (n==1 or n==0) else n * factorial(n - 1); \ndef __gcd(a, b): \n    if (a == 0 or b == 0): return 0\n    if (a == b): return a \n    if (a > b):  \n        return __gcd(a - b, b) \n    return __gcd(a, b - a) \ndef coprime(a, b): \n    if ( __gcd(a, b) == 1): \n        return 1\n    else: \n        return 0         \nn=int(input())\nlst=[]\nfor i in range(0,n):\n    a=int(input())\n    b=factorial(a)\n    c=1\n    for j in range(1,b):\n        for k in range(j,b):\n            if(coprime(i, j)):\n                if(j*k==b):\n                    c=c+1\n    lst.append(c)\nd=len(lst)\nfor i in range(0,d):\n    d=lst[i]\n    print(d)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478168,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4623005",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978383,
        "updated_at_ms": 1599981983,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:53:59.312Z",
        "__v": 0
    },
    {
        "_id": "5f60650e468ccc0964b0c396",
        "submission_code": "from sys import*\ninput= stdin.readline\nn=10**6\nl = [True for i in range(n+1)] \np = 2\nwhile(p*p<=n): \n    if (l[p] == True): \n        for i in range(p*p,n+1, p): \n            l[i] = False\n    p+=1\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=0\n    for i in range(2,n+1):\n        if(l[i]==True):\n            s+=1\n    s=(2**(s-1))%((10**9) + 7)\n    print(s)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478158,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4529175",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "itsbhavya",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978365,
        "updated_at_ms": 1599979565,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:54:06.501Z",
        "__v": 0
    },
    {
        "_id": "5f606514468ccc0964b0c397",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst long long LIMIT = 1e9+7;\nconst int SIZE = 1e6+10;\nlong long fact[SIZE+1];\n\nlong long powMod(long long x, int y){\n    int res = 1;\n    while(y){\n        if(y&1) res = (res*x) % LIMIT;\n        y = y >> 1;\n        x = (x*x) % LIMIT;\n    }\n    return res;\n}\n\nlong long invMod(int x){\n    return powMod(x, LIMIT-2);\n}\n\nlong long C(int n, int r){\n   return (fact[n] * invMod(fact[r]) % LIMIT * invMod(fact[n - r]) % LIMIT) % LIMIT;\n}\n\n\n// #WHSafe = #WH - (#BH1*#WHBH1) - (#BH2*#WHBH2) + (#BH1*#BH1BH2)  \n\nvoid solve(){\n    int x1, x2, y1, y2, x, y;\n    cin >> x >> y;\n    cin >> x1 >> y1;\n    cin >> x2 >> y2;\n    \n    long long ans = C(x+y, x);\n    ans = (ans - ((C(x1+y1, x1)*C(x+y-x1-y1, x-x1)) % LIMIT)) % LIMIT;\n    ans = (ans - ((C(x2+y2, x2)*C(x+y-x2-y2, x-x2)) % LIMIT)) % LIMIT;\n    ans = (ans + (( (C(x1+y1, x1)*C(x2+y2-x1-y1, x2-x1)) % LIMIT)*C(x+y-x2-y2, x-x2)) % LIMIT) % LIMIT;\n    \n    // - ((C(x1+y1, x1)*C(x+y-x1-y1, x-x1)) % LIMIT)\n    // - ((C(x2+y2, x2)*C(x+y-x2-y2, x-x2)) % LIMIT)\n    // + (C(x1+y1, x1)*C(x2+y2-x1-y1, x2-x1)*C(x+y-x2-y2, x-x2)) % LIMIT;\n    cout << ans << \"\\n\";\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    \n    fact[0] = fact[1] = 1;\n    for(int i = 2; i <= SIZE; ++i){\n        fact[i] = (i*fact[i-1]) % LIMIT;\n    }\n    \n    int T;\n    cin >> T;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478143,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599978337,
        "updated_at_ms": 1599979537,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:54:12.601Z",
        "__v": 0
    },
    {
        "_id": "5f60651d468ccc0964b0c398",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            System.out.println(countprimes(v));\n        }\n    }\n    static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0||a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static int countprimes(int n)\n    {\n        int count=1;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478142,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978337,
        "updated_at_ms": 1599996337,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:54:21.913Z",
        "__v": 0
    },
    {
        "_id": "5f606524468ccc0964b0c399",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint gcd(int a, int b) \n{ \n    // Everything divides 0  \n    if (a == 0) \n       return b; \n    if (b == 0) \n       return a; \n   \n    // base case \n    if (a == b) \n        return a; \n   if(a==1 || b==1)\n       return 1;\n    // a is greater \n    if (a > b) \n        return gcd(a-b, b); \n    return gcd(a, b-a); \n} \nint fact(int n){\n    int i,fac=1;\n    for(i=1;i<=n;i++){\n        fac=fac*i;\n    }\n    return fac;\n}\nint splitting(int n){\n    int i,j,x[n],c=0,cnt=0;\n    for(i=1;i<=n;i++){\n        if(n%i==0)\n            x[c++]=i;\n    }\n    for(i=0;i<c;i++){\n        for(j=i+1;j<c;j++){\n            if(x[i]*x[j]==n && gcd(x[i],x[j])==1)\n                cnt++;\n        }\n    }\n    return cnt;\n}\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    int t,i,n,f,res;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++){\n        scanf(\"%d\",&n);\n        f=fact(n);\n        res=splitting(f);\n        printf(\"%d\\n\",res);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478135,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4669863",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218733019CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978327,
        "updated_at_ms": 1599978327,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:54:28.800Z",
        "__v": 0
    },
    {
        "_id": "5f60652d468ccc0964b0c39a",
        "submission_code": "T=int(input())\nfor _ in range(T):\n    x=[int(a) for a in input().split()]\n    block=[]\n    for i in range(x[1]):\n        l=[int(a) for a in input().split()]\n        block.append(l)\n    n=x[0]\n    print(\"Case\",\"#\"+str(_+1),end=\": \")\n    if(n%2==0):\n        tot=(n*n)//2\n        d={\"o\":0,\"e\":0}\n        for i in range(x[1]):\n            if(block[i][0]%2==block[i][1]%2):\n                d[\"o\"]+=1\n            else:\n                d[\"e\"]+=1\n        print(max(tot-d[\"o\"],tot-d[\"e\"]))\n    else:\n        tot_ev=(n*n)//2\n        tot_od=tot_ev+1\n        d={\"o\":0,\"e\":0}\n        for i in range(x[1]):\n            if(block[i][0]%2==block[i][1]%2):\n                d[\"o\"]+=1\n            else:\n                d[\"e\"]+=1\n        print(max(tot_od-d[\"o\"],tot_ev-d[\"e\"]))\n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478132,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "6986737",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "vegishanmukh7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599978317,
        "updated_at_ms": 1599978317,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:54:37.001Z",
        "__v": 0
    },
    {
        "_id": "5f606536468ccc0964b0c39b",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Solution {\n    static int fact(int n)\n    {\n        int s=1;\n        for(int i=1;i<=n;i++)\n            s=s*i;\n        return s;\n    }\n    static int g(int s, int d)\n    {\n        if(s==0 || s==d)\n            return d;\n        if(d==0)\n            return s;\n        if(s>d)\n            return g(s-d,d);\n        return g(s,d-s);\n    }\n    static int countp(int n)\n    {\n        int count=1;\n        for(int j=2;j<n;j++)\n        {  int k=n/j;\n          if(n==j*k && j!=k &&k<j)\n          {\n           if(g(j,k)==1)\n           {\n               count=count+1;\n           }\n          }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        for(int i=0;i<N;i++)\n        {\n            int n=sc.nextInt();\n            System.out.println((countp(fact(n))));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478127,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6636583",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "ramyasreesai2000",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978307,
        "updated_at_ms": 1599979507,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:54:46.449Z",
        "__v": 0
    },
    {
        "_id": "5f60653e468ccc0964b0c39c",
        "submission_code": "/*input\n1\n2 5\nTSNMX\nSRCVK\n*/\n/*\n\n**************************\n*                         *\n* AUTHOR :: shado_w      *\n*                         *\n**************************\n\n*/\n#include<bits/stdc++.h>\n#define lld          long long int\n#define pb          push_back\n#define ppb         pop_back\n#define    endl        '\\n'\n#define mii         map<lld,lld>\n#define msi         map<string,lld>\n#define mis         map<lld, string>\n#define mpi         map<pair<lld ,lld >,lld >\n#define pii         pair<lld,lld>\n#define vi          vector<lld>\n#define vpi         vector<pii>\n#define vs          vector<string>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define sz(x)       (lld)x.size()\n#define hell        1000000007\n#define rrep(i,m,n)    for(lld i=m;i>=n;i--)\n#define rep(i,m,n)    for(lld i=m;i<n;i++)\n#define lbnd        lower_bound\n#define ubnd        upper_bound\n#define bs          binary_search\n#define mp          make_pair\n#define what_is(x)  cerr << #x << \" is \" << x << endl;\n#define pr(x)         cout<< x << \" \";\n#define pre(x)        cout<< x << endl ;\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>; \n//change null_type to get ordered_map\n#define N  100005\nvector <string> a;\nvector <vector<bool>> Vis;\nint n,m;\nbool check(int i,int j){\n    if(i>=n or j>=m){\n        return false;\n    }\n    return true;\n}\nstring res=\"\",ans=\"\";\nbool dfs(int x,int y){\n    if(x==n-1 && y==m-1){\n        return true;\n    }\n    if(Vis[x][y]){\n        return false;\n    }\n    bool p=false;\n    Vis[x][y]=true;\n    if(check(x+1,y) && a[x+1][y] == ans[x+y+1]){\n        p=dfs(x+1,y);\n        if(p){\n            res+=\"D\";\n            return true;\n        }\n    }\n    if(check(x,y+1) && a[x][y+1] == ans[x+y+1]){\n        p=dfs(x,y+1);\n        if(p){\n            res+=\"R\";\n            return true;\n        }\n    }\n    return false;\n}\ntemplate <class T> T& get(T &n){\n    int p;\n    bool f;\n    f=false;\n    n = 0;\n    do{\n        p=getchar();\n    }while( !isdigit(p) && p!='-');\n    if(p=='-') {\n        f=true;\n        p=getchar();\n    }\n    while(isdigit(p)){\n        n=(n<<3)+(n<<1)+(p-'0');\n        p=getchar();\n    }\n    if(f) n=-n;\n    return n;\n}\nvoid solve()\n{\n    cin >> n >> m;\n    a.clear(),Vis.clear();\n    a.resize(n);\n    Vis.resize(n);\n    rep(i,0,n){\n        Vis[i].resize(m);\n        cin >> a[i];\n        rep(j,0,m){\n            Vis[i][j]=false;\n        }\n    }\n    res=\"\",ans=\"\";\n    vector <pair<int,int>> curr;\n    curr.pb({0,0});\n    for(int i=0;i<n+m-1;i++){\n        char mn='Z';\n        for(auto j:curr){\n            mn=min(mn,a[j.F][j.S]);\n        }\n        vector<pair<int,int>> curr2;\n        for(auto j:curr){\n            if(a[j.F][j.S]==mn){\n                int x=j.F,y=j.S;\n                if(check(x+1,y)){\n                    curr2.pb({x+1,y});\n                }\n                if(check(x,y+1)){\n                    curr2.pb({x,y+1});\n                }\n            }\n        }\n        curr=curr2;\n        ans+=mn;\n    }\n    dfs(0,0);\n    reverse(all(res));\n    cout << res << endl;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int tests=1;\n    cin >> tests;\n    int cn=0;\n    while(tests--)\n    {\n        cn++;\n        cout << \"Case #\" << cn <<\": \";\n        solve();\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478126,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "1583809",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599978306,
        "updated_at_ms": 1599980706,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:54:54.402Z",
        "__v": 0
    },
    {
        "_id": "5f606546468ccc0964b0c39d",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include<bits/stdc++.h>\n#define ll long long\nll val = 1e9+7;\n#include <algorithm>\nusing namespace std;\nll power(ll x, unsigned ll y)  \n{   \n    ll p=val;\n    int res = 1;     // Initialize result  \n  \n    x = x % p; // Update x if it is more than or  \n                // equal to p \n   \n    if (x == 0) return 0; // In case x is divisible by p; \n  \n    while (y > 0)  \n    {  \n        // If y is odd, multiply x with result  \n        if (y & 1)  \n            res = (res*x) % p;  \n  \n        // y must be even now  \n        y = y>>1; // y = y/2  \n        x = (x*x) % p;  \n    }  \n    return res;  \n}  \n\nint main() {\n    // Initialize all numbers as prime \n    ios_base::sync_with_stdio();\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n        bool prime[100001]; \n        for(int i=0;i<100001;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=100001; p++) \n        { \n            // If prime[p] is not changed, then it is a prime \n            if(prime[p] == true) \n            { \n                // Update all multiples of p \n                for(int i = p*p; i <= 100001; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        // Print all prime numbers \n    vector<ll> v;\n        for(ll i = 2; i <= 100001; i++) \n        { \n            if(prime[i] == true) \n                v.push_back(i); \n        } \n    \n    /*for(int i=0;i<10;i++)\n        cout<<v[i]<<\" \";*/\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n;\n        cin>>n;\n        vector<ll> :: iterator it;\n        it = upper_bound(v.begin(),v.end(),n);\n        if(n!=1)\n        {ll j=it - v.begin() -1;\n        cout<<(power(2,j))%val<<\"\\n\";\n        }\n        else\n            cout<<1<<\"\\n\";\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478125,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5616652",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "pavansid69",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978304,
        "updated_at_ms": 1599981904,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:55:02.649Z",
        "__v": 0
    },
    {
        "_id": "5f60654c468ccc0964b0c39e",
        "submission_code": "import math\nfrom math import gcd as bltin_gcd\nfrom math import sqrt \n\ndef coprime2(a, b):\n    return bltin_gcd(a, b) == 1\n\ndef countOrderedPairs(n): \n    count_pairs = 0\n    p = int(sqrt(n)) + 1\n    for i in range(1,p): \n        j = n/i\n        k = n//i\n        if j==k:\n            if coprime2(i,k):\n                count_pairs+=1\n    return count_pairs \n\nt = int(input())\nm = 1000000007\nwhile(t>0):\n    t-=1\n    n = int(input())\n    nf = (math.factorial(n))%m\n    ans = (countOrderedPairs(nf))%m\n    print(ans)\n    \n\n\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478110,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9686060",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "kedharnathsonu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978280,
        "updated_at_ms": 1599979480,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:55:08.349Z",
        "__v": 0
    },
    {
        "_id": "5f606553468ccc0964b0c39f",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int t,i,j,k,n,m,tt;\n    cin>>t;\n    tt=t;\n    while(t--)\n    {\n        cin>>n>>m;\n        vector<vector<char>> vi(n,vector<char>(m,' ')),vd(n,vector<char>(m,' ')),vl(n,vector<char>(m,' '));\n        for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cin>>vi[i][j];\n            }\n        }\n        for(i=n-1;i>=0;i--)\n        {\n            vd[i][m-1]='D';\n            vl[i][m-1]=vi[i][m-1];\n        }\n        for(i=m-1;i>=0;i--)\n        {\n            vd[n-1][i]='R';\n            vl[n-1][i]=vi[n-1][i];\n        }\n        for(j=m-2;j>=0;j--)\n        {\n            for(i=n-2;i>=0;i--)\n            {\n                if(vi[i][j+1]<vi[i+1][j])\n                {\n                    vl[i][j]=vi[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else if(vi[i][j+1]>vi[i+1][j])\n                {\n                    vl[i][j]=vi[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                else\n                {\n                    if(vl[i][j+1]<vl[i+1][j])\n                {\n                    vl[i][j]=vl[i][j+1];\n                    \n                    vd[i][j]='R';\n                }\n                else\n                {\n                    vl[i][j]=vl[i+1][j];\n                    \n                    vd[i][j]='D';\n                }\n                    \n                }\n            }\n        }\n        i=0;\n        j=0;\n        cout<<\"Case #\"<<tt-t<<\": \";\n        while(!(i==n-1&&j==m-1))\n        {\n            \n            if(vd[i][j]=='D')\n            {\n                cout<<'D';\n                i=i+1;\n                \n            }\n            else\n            {\n                cout<<'R';\n                j=j+1;\n                \n            }\n            \n        }\n        \n        /*for(i=0;i<n;i++)\n        {\n            for(j=0;j<m;j++)\n            {\n                cout<<vd[i][j]<<\" \";\n            }\n            cout<<endl;\n        }*/\n        \n        cout<<endl;\n            \n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478102,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599978268,
        "updated_at_ms": 1599978268,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:55:15.401Z",
        "__v": 0
    },
    {
        "_id": "5f60655b468ccc0964b0c3a0",
        "submission_code": "from itertools import combinations\nimport math\ndef f(index):\n    s = 0\n    for j in range(N):\n        if index != j:\n            p = pre[tuple(sorted((index,j)))]\n            s += p\n    return s\n\nfor _ in range(int(input())):\n    N = int(input())\n    indexComb = list(combinations(range(N),2))\n    l = []\n    for j in range(N):\n        x,y = map(int,input().split())\n        l.append((x,y))\n    if N == 2:\n        print(l[0][0],l[0][1])\n    else:\n        pre = dict()\n        for each in indexComb:\n            pre[each] = 0\n\n        for index in range(0,N):\n            ans = 0\n            x = l[index][0]\n            y = l[index][1]\n            for i in range(N):\n                if index != i and tuple(sorted((index,i))) in pre:\n                    pre[tuple(sorted((index,i)))] += ((x-l[i][0])**2)+((y-l[i][1])**2)\n        mini = math.inf\n\n        for index in range(N):\n            curr = f(index)\n            if mini > curr:\n                mini = curr\n                i = index\n        print(l[i][0],l[i][1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478098,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "3164622",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "anshmaske743",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599978257,
        "updated_at_ms": 1599979457,
        "misc_notes": "[\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:55:23.349Z",
        "__v": 0
    },
    {
        "_id": "5f606565468ccc0964b0c3a1",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include<bits/stdc++.h>\n#define ll long long\nll val = 1e9+7;\n#include <algorithm>\nusing namespace std;\nll power(ll x, unsigned ll y)  \n{   \n    ll p=val;\n    int res = 1;     // Initialize result  \n  \n    x = x % p; // Update x if it is more than or  \n                // equal to p \n   \n    if (x == 0) return 0; // In case x is divisible by p; \n  \n    while (y > 0)  \n    {  \n        // If y is odd, multiply x with result  \n        if (y & 1)  \n            res = (res*x) % p;  \n  \n        // y must be even now  \n        y = y>>1; // y = y/2  \n        x = (x*x) % p;  \n    }  \n    return res;  \n}  \n\nint main() {\n    // Initialize all numbers as prime \n    ios_base::sync_with_stdio();\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n        bool prime[100001]; \n        for(int i=0;i<100001;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=100001; p++) \n        { \n            // If prime[p] is not changed, then it is a prime \n            if(prime[p] == true) \n            { \n                // Update all multiples of p \n                for(int i = p*p; i <= 100001; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        // Print all prime numbers \n    vector<ll> v;\n        for(ll i = 2; i <= 100001; i++) \n        { \n            if(prime[i] == true) \n                v.push_back(i); \n        } \n    \n    /*for(int i=0;i<10;i++)\n        cout<<v[i]<<\" \";*/\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n;\n        cin>>n;\n        vector<ll> :: iterator it;\n        it = upper_bound(v.begin(),v.end(),n);\n        if(n!=1)\n        {ll j=it - v.begin() -1;\n        cout<<(power(2,j))%val<<\"\\n\";\n        }\n        else\n            cout<<0<<\"\\n\";\n        \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478092,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5616652",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "pavansid69",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978251,
        "updated_at_ms": 1599980651,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:55:33.848Z",
        "__v": 0
    },
    {
        "_id": "5f606570468ccc0964b0c3a2",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    public static int f(int k,int[][] a)\n    {\n        int x=a[k][0],y=a[k][1],sum=0;\n        for(int i=0;i<a.length;i++)\n        {\n            if(i==k)\n                continue;\n            sum=sum+(((x-a[i][0])*(x-a[i][0]))+((y-a[i][1])*(y-a[i][1])));\n        }\n        return sum;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        for(int i=0;i<N;i++)\n        {\n            int n=sc.nextInt();\n            int[][] a=new int[n][2];\n            for(int j=0;j<n;j++)\n            {\n                a[j][0]=sc.nextInt();\n                a[j][1]=sc.nextInt();\n            }\n            int[][] sum=new int[n][2];\n            for(int i1=0;i1<n;i1++)\n            {\n                sum[i1][0]=i1;\n                sum[i1][1]=f(i1,a);\n            }int max=1000,l=0;\n            for(int i1=0;i1<n;i1++)\n            {\n                if(max>sum[i1][1])\n                {\n                    max=sum[i1][1];\n                    l=i1;\n                }\n            }\n            System.out.println(a[l][0]+\" \"+a[l][1]);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478084,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6639502",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "saishivani_wnp",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599978241,
        "updated_at_ms": 1599978241,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:55:44.197Z",
        "__v": 0
    },
    {
        "_id": "5f606579468ccc0964b0c3a3",
        "submission_code": "import sys\nimport math \n\nk=int(input())\nfor i in range(k):\n    c=0\n    n=int(input())\n    for j in range(1,math.factorial(n+1)):\n        for k in range(1,math.factorial(n+1)):\n            if((j<k) and math.gcd(j,k)==1):\n                if(k*j==math.factorial(n)):\n                    c+=1\n    print(c)\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478071,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8595924",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "saitejachalla201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978225,
        "updated_at_ms": 1599979425,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:55:53.056Z",
        "__v": 0
    },
    {
        "_id": "5f60657f468ccc0964b0c3a4",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint func(int x[],int y[],int n,int X,int Y)\n{\n    int i,sum=0;\n    for(i=0;i<n;i++)\n    {\n        sum+=pow(X-x[i],2)+pow(Y-y[i],2);\n    }\n    return sum;\n}\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    int T,i,j,k,res,min;\n    long int N;\n    unsigned int X,Y,xmin,ymin;\n    scanf(\"%d\",&T);\n    for(i=0;i<T;i++)\n    {\n        scanf(\"%ld\",&N);\n        unsigned int x[N],y[N];\n        for(j=0;j<N;j++)\n        {\n            scanf(\"%d\",&x[j]);\n            scanf(\"%d\",&y[j]);\n        }\n        X=x[0];\n        Y=y[0];\n        res=func(x,y,N,X,Y);\n        min=res;\n        xmin=x[0];\n        ymin=y[0];\n        for(k=1;k<N;k++)\n        {\n            X=x[k];\n            Y=y[k];\n            res=func(x,y,N,X,Y);\n            if(res<min)\n            {\n                min=res;\n                xmin=x[k];\n                ymin=y[k];\n            }\n        }\n    printf(\"%d %d\\n\",xmin,ymin);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478068,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5093044",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218737004ITA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599978218,
        "updated_at_ms": 1599978218,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:55:59.847Z",
        "__v": 0
    },
    {
        "_id": "5f606585468ccc0964b0c3a5",
        "submission_code": "\n// --------------------<optimizations>--------------------\n#pragma GCC optimize(\"O3\")\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC optimize(\"unroll-loops\")\n// -------------------</optimizations>--------------------\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp> //lower_bound , upper_bound\n// using namespace __gnu_pbds;//kth smallest : *pd.find_by_order(k-1) , no. of elem < X : pd.order_of_key(X) , delete X : pd.erase(X).\n// typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> pbds;\n#define f(i, a, b) for (ll i = a; i < b; i++)\n#define fb(i, a, b) for (ll i = a; i >= b; i--)\n#define pb push_back\n#define mp make_pair\n#define ff first\n#define ss second\n#define nl '\\n'\n#define pl pair<ll, ll>\n#define all(v) v.begin(), v.end()\n#define lb lower_bound\n#define ub upper_bound\n#define nude(a)           \\\n    for (auto i : a)      \\\n        cout << i << \" \"; \\\n    cout << nl;\n#define tc     \\\n    ll tc;     \\\n    cin >> tc; \\\n    while (tc--)\nconst ll mod = 1e9 + 7;\nconst ll sz = 2e5 + 9;\n#define maxheap priority_queue<ll>\n#define minheap priority_queue<ll, vector<ll>, greater<ll>>\n//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nll gcd(ll a, ll b)\n{\n    if (b == 0)\n        return a;\n    return gcd(b, a % b);\n}\n\nll power(ll x, ll y, ll p)\n{\n    ll res = 1;\n    x = x % p;\n    while (y > 0)\n    {\n        if (y & 1)\n        {\n            res = (res * x) % p;\n        }\n        y = y >> 1;\n        x = (x * x) % p;\n    }\n    return res;\n}\nvector<char> is_prime(1e6 + 1, true);\nvector<ll> prime;\nvoid init()\n{\n    int n = 1e6;\n    is_prime[0] = is_prime[1] = false;\n    for (int i = 2; i <= n; i++)\n    {\n        if (is_prime[i] && (long long)i * i <= n)\n        {\n            for (int j = i * i; j <= n; j += i)\n                is_prime[j] = false;\n        }\n    }\n    f(i, 2, 1e6 + 1)\n    {\n        if (is_prime[i])\n            prime.pb(i);\n    }\n}\n\nvoid bring_me_thanos()\n{\n    ll n, m;\n    cin >> n;\n    ll ans = 0, i = 0;\n    if (n == 1)\n    {\n        cout << 1 << nl;\n        return;\n    }\n    while (true)\n    {\n        if (prime[i++] > n)\n            break;\n        ans += 1;\n    }\n    if (ans > 2)\n        ans++;\n    cout << ans << nl;\n}\n\nvoid solve()\n{\n    init();\n    tc\n    bring_me_thanos();\n}\n\nint main()\n{\n#ifdef JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    clock_t beg = clock();\n    solve();\n    clock_t end = clock();\n    fprintf(stderr, \"%.3f sec, Copyright %c 2019 PyThor. \\n\", double(end - beg) / CLOCKS_PER_SEC, 184);\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478061,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5078334",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "the_pythor",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978204,
        "updated_at_ms": 1599981804,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:56:05.897Z",
        "__v": 0
    },
    {
        "_id": "5f60658b468ccc0964b0c3a6",
        "submission_code": "def gcd(a,b):\n    while b != 0:\n        a, b = b, a%b\n    return a\n\ndef is_coprime(x, y):\n    return gcd(x, y) == 1\n\ndef factors(num):\n    f=[]\n    for i in range(1,num+1):\n        if num%i==0:\n            f.append(i)\n    return f\n\nT = int(input(\"\"))\nfor i in range(T):\n    num = int(input(\"\"))\n    factorial = 1\n    for k in range(1, num + 1):\n        factorial = factorial * k\n    final_list = []\n    fac_list = factors(factorial)\n    fac_list_rev = fac_list\n    for j in range(0, int(len(fac_list) / 2)):\n        temp = []\n        x = fac_list[j]\n        y = fac_list[(len(fac_list)-j - 1)]\n        if is_coprime(x,y):\n            temp.append(x)\n            temp.append(y)\n            final_list.append(temp)\n    print(len(final_list))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478042,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9633653",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "geetikaagarwal22",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978169,
        "updated_at_ms": 1599979369,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:56:11.946Z",
        "__v": 0
    },
    {
        "_id": "5f606594468ccc0964b0c3a7",
        "submission_code": "import math\nfrom math import sqrt \n\ndef __gcd(a, b): \n    if (a == 0 or b == 0): return 0  \n    if (a == b): return a  \n    if (a > b):  \n        return __gcd(a - b, b) \n    return __gcd(a, b - a) \n\ndef countOrderedPairs(n): \n    count_pairs = 0\n    p = int(sqrt(n)) + 1\n    for i in range(1,p): \n        j = n/i\n        k = n//i\n        # print(j,k)\n        if j==k:\n            if(__gcd(i,k)==1):\n                count_pairs+=1\n    return count_pairs \n\nt = int(input())\nm = 1000000007\nwhile(t>0):\n    t-=1\n    n = int(input())\n    nf = (math.factorial(n))%m\n    ans = (countOrderedPairs(nf))%m\n    print(ans)\n    \n\n\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478032,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9686060",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "kedharnathsonu",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978160,
        "updated_at_ms": 1599978160,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:56:20.646Z",
        "__v": 0
    },
    {
        "_id": "5f60659b468ccc0964b0c3a8",
        "submission_code": "n=10**6\nl = [True for i in range(n+1)] \np = 2\nwhile(p*p<=n): \n    if (l[p] == True): \n        for i in range(p*p,n+1, p): \n            l[i] = False\n    p+=1\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=0\n    for i in range(2,n+1):\n        if(l[i]==True):\n            s+=1\n    s=(2**(s-1))%((10**9) + 7)\n    print(s)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478030,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4529175",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "itsbhavya",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978158,
        "updated_at_ms": 1599978158,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:56:27.996Z",
        "__v": 0
    },
    {
        "_id": "5f6065a4468ccc0964b0c3a9",
        "submission_code": "# Enter your code here. Read input from STDIN. Print output to STDOUT\nimport Queue\n class cell:\n        def_init_(self,x,y,dist):\n            self.x=x\n            self.dist=dist\n            def point_is_valid(horse,size):\n                if any(x<1 for x is horse) or any(x>size for x in horse):\n                    return False\n                else:\n                    return False\n                else:\n                    return True\n                def print_path(init,parent):\n                    tup=(init[0],init[1])\n                    if tp in parsent.keys();\n                    prev=parsent[tup]\n                    print_path(prev[0],prev[1]),parent)\n                    int(tup,end='')\n                    def find_path_dijkstra(horse,king,size,a,b);\n                    res_dist=-1\n                    printf(\" \")\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478026,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9685839",
        "submission_status": "Compilation error",
        "submission_language": "python",
        "site_user_handle": "ballaramyasri441",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978153,
        "updated_at_ms": 1599978153,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T06:56:36.903Z",
        "__v": 0
    },
    {
        "_id": "5f6065ae468ccc0964b0c3aa",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include<bits/stdc++.h>\n#define ll long long\nll val = 1e9+7;\n#include <algorithm>\nusing namespace std;\nll power(ll x, unsigned ll y)  \n{   \n    ll p=val;\n    int res = 1;     // Initialize result  \n  \n    x = x % p; // Update x if it is more than or  \n                // equal to p \n   \n    if (x == 0) return 0; // In case x is divisible by p; \n  \n    while (y > 0)  \n    {  \n        // If y is odd, multiply x with result  \n        if (y & 1)  \n            res = (res*x) % p;  \n  \n        // y must be even now  \n        y = y>>1; // y = y/2  \n        x = (x*x) % p;  \n    }  \n    return res;  \n}  \n\nint main() {\n    // Initialize all numbers as prime \n    ios_base::sync_with_stdio();\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n        bool prime[100001]; \n        for(int i=0;i<100001;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=100001; p++) \n        { \n            // If prime[p] is not changed, then it is a prime \n            if(prime[p] == true) \n            { \n                // Update all multiples of p \n                for(int i = p*p; i <= 100001; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        // Print all prime numbers \n    vector<ll> v;\n        for(ll i = 2; i <= 100001; i++) \n        { \n            if(prime[i] == true) \n                v.push_back(i); \n        } \n    \n    /*for(int i=0;i<10;i++)\n        cout<<v[i]<<\" \";*/\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n;\n        cin>>n;\n        vector<ll> :: iterator it;\n        it = upper_bound(v.begin(),v.end(),n);\n        ll j=it - v.begin() -1;\n        cout<<(power(2,j))%val<<\"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478021,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5616652",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "pavansid69",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978145,
        "updated_at_ms": 1599979345,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:56:46.895Z",
        "__v": 0
    },
    {
        "_id": "5f6065b5468ccc0964b0c3ab",
        "submission_code": "import math\ndef factorial(n): \n    if n < 0: \n        return 0\n    elif n == 0 or n == 1: \n        return 1\n    else: \n        fact = 1\n        while(n > 1): \n            fact = (fact*n)%(1000000007); \n            n -= 1\n    return fact \ndef coprime(n):\n    count=1\n    for i in range(2,int(math.sqrt(n))+1):\n        if(n%i==0):\n            while(n%i==0):\n                n//=i\n            if(n>1):\n                count+=1;\n    return count;\n\nn=int(input())\nlst=[]\nfor i in range(0, n): \n    ele = int(input()) \n    lst.append(ele)\nfor i in lst:\n    ans=coprime(factorial(i))\n    print(ans)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478016,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6857762",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733036CSE",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978133,
        "updated_at_ms": 1599981733,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:56:53.095Z",
        "__v": 0
    },
    {
        "_id": "5f6065bd468ccc0964b0c3ac",
        "submission_code": "def gcd(a,b):\n    while b != 0:\n        a, b = b, a%b\n    return a\n\ndef is_coprime(x, y):\n    return gcd(x, y) == 1\n\ndef factors(num):\n    f=[]\n    for i in range(1,num+1):\n        if num%i==0:\n            f.append(i)\n    return f\n\nT = int(input(\"\"))\nfor i in range(T):\n    num = int(input(\"\"))\n    factorial = 1\n    for k in range(1, num + 1):\n        factorial = factorial * k\n    final_list = []\n    fac_list = factors(factorial)\n    fac_list_rev = fac_list\n    for j in range(0, int(len(fac_list) / 2)):\n        temp = []\n        x = fac_list[j]\n        y = fac_list[(len(fac_list)-j - 1)]\n        if is_coprime(x,y):\n            temp.append(x)\n            temp.append(y)\n            final_list.append(temp)\n    print(len(final_list))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326478007,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9633653",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "geetikaagarwal22",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978121,
        "updated_at_ms": 1599978121,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:57:01.887Z",
        "__v": 0
    },
    {
        "_id": "5f6065c6468ccc0964b0c3ad",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        BufferedReader br = new BufferedReader( new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine());\n        while(n!=0){\n            int t=Integer.parseInt(br.readLine());\n            int index=0;\n           \n            int fact=factorial(t);\n            int[] arr=new int[fact];\n            \n            for(int i=1;i<=fact;i++)\n                arr[index++]=i;\n            long count=0;\n            for (int i = 0; i < arr.length-1; i++)  {\n                for (int j = i + 1; j < arr.length; j++){\n                    if(gcd(arr[i],arr[j])==1  &&  ((arr[i]*arr[j])%1000000007)==fact)\n                        count=(count+1)%1000000007;\n                }\n            }\n            System.out.println((int)(count%(Math.pow(10,9)+7)));\n            n--;\n        }\n    }\n    \n    static int factorial(int n) {\n    if (n>=1)\n        return (n*factorial(n-1))%1000000007;\n    else\n        return 1;\n    }\n    \n    static int gcd(int x, int y) \n    {   \n        if (x==0 || y==0) \n        return 0; \n      \n        if (x==y) \n            return x; \n       \n        if (x>y) \n            return gcd(x-y,y); \n              \n        return gcd(x,y-x); \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477996,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675172",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "Likhita_AVL",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978108,
        "updated_at_ms": 1599984108,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:57:10.077Z",
        "__v": 0
    },
    {
        "_id": "5f6065cd468ccc0964b0c3ae",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include<bits/stdc++.h>\n#define ll long long\nll val = 1e9+7;\n#include <algorithm>\nusing namespace std;\nll power(ll x, unsigned ll y)  \n{   \n    ll p=val;\n    int res = 1;     // Initialize result  \n  \n    x = x % p; // Update x if it is more than or  \n                // equal to p \n   \n    if (x == 0) return 0; // In case x is divisible by p; \n  \n    while (y > 0)  \n    {  \n        // If y is odd, multiply x with result  \n        if (y & 1)  \n            res = (res*x) % p;  \n  \n        // y must be even now  \n        y = y>>1; // y = y/2  \n        x = (x*x) % p;  \n    }  \n    return res;  \n}  \n\nint main() {\n    // Initialize all numbers as prime \n    ios_base::sync_with_stdio();\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n        bool prime[100001]; \n        for(int i=0;i<100001;i++) \n            prime[i] = true; \n          \n        for(int p = 2; p*p <=100001; p++) \n        { \n            // If prime[p] is not changed, then it is a prime \n            if(prime[p] == true) \n            { \n                // Update all multiples of p \n                for(int i = p*p; i <= 100001; i += p) \n                    prime[i] = false; \n            } \n        } \n          \n        // Print all prime numbers \n    vector<ll> v;\n        for(ll i = 2; i <= 100001; i++) \n        { \n            if(prime[i] == true) \n                v.push_back(i); \n        } \n    \n    /*for(int i=0;i<10;i++)\n        cout<<v[i]<<\" \";*/\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n;\n        cin>>n;\n        vector<ll> :: iterator it;\n        it = upper_bound(v.begin(),v.end(),n);\n        ll j=it - v.begin() -1;\n        cout<<power(2,j)<<\"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477992,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5616652",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "pavansid69",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978101,
        "updated_at_ms": 1599978101,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:57:17.860Z",
        "__v": 0
    },
    {
        "_id": "5f6065d7468ccc0964b0c3af",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nvector<int> xc,yc;\nint F(int x,int y)\n{\n    int n = xc.size();\n    int sum=0;\n    for(int i=0;i<n;i++)\n    {\n        sum+= pow((x-xc[i]),2)+pow((y-yc[i]),2);\n    }\n    return sum;\n}\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int q;\n    cin>>q;\n    int n,min=10000000,resx=0,resy=0;\n    while(q-->0)\n    {\n        cin>>n;\n        xc.resize(n);\n        yc.resize(n);\n        for(int i=0;i<n;i++)\n            cin>>xc[i]>>yc[i];\n        for(int i=0;i<n;i++)\n        {\n            if(min>F(xc[i],yc[i]))\n            {resx = xc[i];\n            resy = yc[i];\n             min =F(xc[i],yc[i]);\n            }\n        }\n        cout<<resx<<\" \"<<resy<<endl;\n        xc.clear();\n        yc.clear();\n        min=100000;\n    }\n    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477991,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "8732760",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "ayushsngh20",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599978096,
        "updated_at_ms": 1599978096,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:57:27.352Z",
        "__v": 0
    },
    {
        "_id": "5f6065de468ccc0964b0c3b0",
        "submission_code": "def gcd(a,b):\n    while b != 0:\n        a, b = b, a%b\n    return a\n\ndef is_coprime(x, y):\n    return gcd(x, y) == 1\n\ndef factors(num):\n    f=[]\n    for i in range(1,num+1):\n        if num%i==0:\n            f.append(i)\n    return f\n\nT = int(input(\"\"))\nfor i in range(T):\n    num = int(input(\"\"))\n    factorial = 1\n    for k in range(1, num + 1):\n        factorial = factorial * k\n    final_list = []\n    fac_list = factors(factorial)\n    fac_list_rev = fac_list\n    for j in range(0, int(len(fac_list) / 2)):\n        temp = []\n        x = fac_list[j]\n        y = fac_list[(len(fac_list)-j - 1)]\n        if is_coprime(x,y):\n            temp.append(x)\n            temp.append(y)\n            final_list.append(temp)\n    print(len(final_list))\n    \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477987,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2804281",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vishalrajg22",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978091,
        "updated_at_ms": 1599978091,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:57:34.037Z",
        "__v": 0
    },
    {
        "_id": "5f6065e4468ccc0964b0c3b1",
        "submission_code": "import java.util.*;\nimport java.lang.*;\nclass Solution{\nstatic String res;\nstatic String res1;\nstatic boolean valid(int i,int j,int r,int c){\n       if(i<0 || i>=r || j<0 || j>=c)\n         return false;\n       return true;\n}\nstatic void getshortest(char arr[][],int i,int j,int r,int c,String s,String ss){\n    if(!valid(i,j,r,c)){\n        return ;\n    }\n    if(i==r-1 && j==c-1){\n      if(s.compareTo(res)<0){\n        res=s;\n        res1=ss;\n        }\n       if(s.equals(res) && ss.compareTo(res1)<0){\n         res1=ss;\n        }\n        return ;\n    }\n    else{\n          char c1=arr[i][j];\n          arr[i][j]='{';\n          getshortest(arr,i+1,j,r,c,s+c1,ss+\"D\");\n          getshortest(arr,i,j+1,r,c,s+c1,ss+\"R\");\n          arr[i][j]=c1;\n          return;\n         \n    }\n       \n}\npublic static void main(String[] args){\n    Scanner in=new Scanner(System.in);\n    int n=in.nextInt();\n    String fin[]=new String[n];\n    for(int k=0;k<n;k++){\n    int r=in.nextInt();\n    int c=in.nextInt();\n    char arr[][]=new char[r][c];\n    res=\"z\";\n    res1=\"\";\n    for(int i=0;i<r;i++){\n        String sr=in.next();\n      for(int j=0;j<c;j++){\n         arr[i][j]=sr.charAt(j);\n      }\n    }\n     getshortest(arr,0,0,r,c,\"\",\"\");\n     fin[k]=res1;\n    }\n    int i=1;\n    for(String s:fin){\n        System.out.println(\"Case #\"+i+\": \"+s);\n        i++;\n    }\n}\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477985,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "5598553",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "manmeet02012001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599978089,
        "updated_at_ms": 1599978089,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:57:40.898Z",
        "__v": 0
    },
    {
        "_id": "5f6065ec468ccc0964b0c3b2",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    int t;\n    cin>>t;\n    while(t--){\n        long long n;\n        cin>>n;\n        long long i,x[n],y[n],f[n],min,min1=100000000000000000,s1=0,s2=0,s3=0,s4=0;\n        for(i=0;i<n;i++){\n            cin>>x[i]>>y[i];\n            s1+=(x[i]*x[i]);\n            s2+=(y[i]*y[i]);\n            s3+=x[i];\n            s4+=y[i];\n        }\n        min = n-1;\n        for(i=0;i<n;i++){\n            f[i] = n*(x[i]*x[i]+y[i]*y[i])+s1+s2-2*(x[i]*s3+y[i]*s4);\n            if(min1==f[i]){\n                if(min>i){\n                    min=i;\n                }\n            }\n            else if(min1>f[i]){\n                min1 = f[i];\n                min = i;\n            }   \n        }\n        cout<<x[min]<<\" \"<<y[min]<<endl;\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477980,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6986492",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599978077,
        "updated_at_ms": 1599982877,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:57:48.270Z",
        "__v": 0
    },
    {
        "_id": "5f6065f5468ccc0964b0c3b3",
        "submission_code": "def factorial(n): \n    return 1 if (n==1 or n==0) else n * factorial(n - 1); \ndef __gcd(a, b): \n  \n    if (a == 0 or b == 0): return 0\n    if (a == b): return a \n    if (a > b):  \n        return __gcd(a - b, b) \n    return __gcd(a, b - a) \ndef coprime(a, b): \n    if ( __gcd(a, b) == 1): \n        return 1\n    else: \n        return 0         \nn=int(input())\nlst=[]\nfor i in range(0,n):\n    a=int(input())\n    b=factorial(a)\n    c=1\n    for j in range(1,b):\n        for k in range(j,b):\n            if(coprime(i, j)):\n                if(j*k==b):\n                    c=c+1\n    lst.append(c)\nd=len(lst)\nfor i in range(0,d):\n    d=lst[i]\n    print(d)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477964,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4623005",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978048,
        "updated_at_ms": 1599980448,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:57:57.690Z",
        "__v": 0
    },
    {
        "_id": "5f6065fd468ccc0964b0c3b4",
        "submission_code": "import math\nt=int(input())\nfor k in range(1,t+1):\n    count=0\n    n=int(input())\n    n1=math.factorial(n)\n    for i in range(1,n1+1):\n        if(n1%i==0):\n            j=n1//i\n        if (i*j)==n1 and math.gcd(i,j)==1:\n            count=count+1\n    print((count//2)%(1000000000+7))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477959,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4683610",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733092CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978042,
        "updated_at_ms": 1599980442,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:58:05.574Z",
        "__v": 0
    },
    {
        "_id": "5f606607468ccc0964b0c3b5",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst long long LIMIT = 1e9+7;\nconst int SIZE = 1e6+10;\nlong long fact[SIZE+1];\n\nlong long powMod(long long x, int y){\n    int res = 1;\n    while(y){\n        if(y&1) res = (res*x) % LIMIT;\n        y = y >> 1;\n        x = (x*x) % LIMIT;\n    }\n    return res;\n}\n\nlong long invMod(int x){\n    return powMod(x, LIMIT-2);\n}\n\nlong long C(int n, int r){\n   return (fact[n] * invMod(fact[r]) % LIMIT * invMod(fact[n - r]) % LIMIT) % LIMIT;\n}\n\n\n// #WHSafe = #WH - (#BH1*#WHBH1) - (#BH2*#WHBH2) + (#BH1*#BH1BH2)  \n\nvoid solve(){\n    int x1, x2, y1, y2, x, y;\n    cin >> x >> y;\n    cin >> x1 >> y1;\n    cin >> x2 >> y2;\n    \n    long long ans = C(x+y, x)\n    - C(x1+y1, x1)*C(x+y-x1-y1, x-x1)\n    - C(x2+y2, x2)*C(x+y-x2-y2, x-x2)\n    + C(x1+y1, x1)*C(x2+y2-x1-y1, x2-x1)*C(x+y-x2-y2, x-x2);\n    \n    ans = ans%LIMIT;\n    \n    cout << ans << \"\\n\";\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    \n    fact[0] = fact[1] = 1;\n    for(int i = 2; i <= SIZE; ++i){\n        fact[i] = (i*fact[i-1]) % LIMIT;\n    }\n    \n    int T;\n    cin >> T;\n    while(T--){\n        solve();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477957,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599978035,
        "updated_at_ms": 1599978035,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:58:15.098Z",
        "__v": 0
    },
    {
        "_id": "5f60660f468ccc0964b0c3b6",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477955,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5779798",
        "submission_status": "Wrong Answer",
        "submission_language": "c",
        "site_user_handle": "rithvikbhadri789",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599978034,
        "updated_at_ms": 1599978034,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T06:58:23.801Z",
        "__v": 0
    },
    {
        "_id": "5f606616468ccc0964b0c3b7",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        BufferedReader br = new BufferedReader( new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine());\n        while(n!=0){\n            int t=Integer.parseInt(br.readLine());\n            int index=0;\n           \n            int fact=factorial(t);\n            int[] arr=new int[fact];\n            \n            for(int i=1;i<=fact;i++)\n                arr[index++]=i;\n            long count=0;\n            for (int i = 0; i < arr.length-1; i++)  {\n                for (int j = i + 1; j < arr.length; j++){\n                    if(gcd(arr[i],arr[j])==1  &&  (arr[i]*arr[j])==fact)\n                        count=(count+1)%1000000007;\n                }\n            }\n            System.out.println((int)(count%(Math.pow(10,9)+7)));\n            n--;\n        }\n    }\n    \n    static int factorial(int n) {\n    if (n>=1)\n        return n*factorial(n-1);\n    else\n        return 1;\n    }\n    \n    static int gcd(int x, int y) \n    {   \n        if (x==0 || y==0) \n        return 0; \n      \n        if (x==y) \n            return x; \n       \n        if (x>y) \n            return gcd(x-y,y); \n              \n        return gcd(x,y-x); \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477944,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675172",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "Likhita_AVL",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599978012,
        "updated_at_ms": 1599982812,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T06:58:30.748Z",
        "__v": 0
    },
    {
        "_id": "5f606621468ccc0964b0c3b8",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws IOException {\n        int t;\n        BufferedReader reader =  \n                   new BufferedReader(new InputStreamReader(System.in)); \n        t= Integer.parseInt(reader.readLine());\n        while(t>0){\n            int n= Integer.parseInt(reader.readLine());\n            int a[] = new int[n];\n            int b[] = new int[n];\n            for(int i=0;i<n;i++){\n                String s=reader.readLine();\n                String[] numbers=s.split(\" \");\n                a[i]=Integer.parseInt(numbers[0]);\n                b[i]=Integer.parseInt(numbers[1]);\n            }\n            int k=0;\n            int sum=0;\n            int min=0;\n            int c=0;\n            int d=0;\n            if(n==1){\n                            System.out.println(a[0]+\" \"+b[0]);\n            }\n            else{\n            while(k<n){\n                sum=0;\n                for(int j=0;j<n;j++){\n                    int x=(a[k]-a[j])*(a[k]-a[j]);\n                    int y=(b[k]-b[j])*(b[k]-b[j]);\n                    sum=sum+(x+y);\n\n                }\n\n                if(k==0){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                if(sum<min){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                \n                k++;\n            }\n            System.out.println(c+\" \"+d);\n            }\n            t--;\n        }    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477927,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9686060",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "kedharnathsonu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977987,
        "updated_at_ms": 1599983987,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:58:41.110Z",
        "__v": 0
    },
    {
        "_id": "5f606628468ccc0964b0c3b9",
        "submission_code": "def factorial(n): \n    return 1 if (n==1 or n==0) else n * factorial(n - 1); \ndef __gcd(a, b): \n  \n    if (a == 0 or b == 0): return 0\n    if (a == b): return a \n    if (a > b):  \n        return __gcd(a - b, b) \n    return __gcd(a, b - a) \ndef coprime(a, b): \n    if ( __gcd(a, b) == 1): \n        return 1\n    else: \n        return 0         \nn=int(input())\nlst=[]\nfor i in range(0,n):\n    a=int(input())\n    b=factorial(a)\n    c=1\n    for j in range(1,b):\n        for k in range(j,b):\n            if(coprime(i, j)):\n                if(j*k==b):\n                    c=c+1\n    #print(c)\n    lst.append(c)\n    n=n-1\nd=len(lst)\nfor i in range(0,d):\n    d=lst[i]\n    print(d)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477920,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4623005",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977975,
        "updated_at_ms": 1599979175,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:58:48.171Z",
        "__v": 0
    },
    {
        "_id": "5f60662f468ccc0964b0c3ba",
        "submission_code": "import sys\nimport math \n\nk=int(input())\nfor i in range(k):\n    c=0\n    n=int(input())\n    for j in range(1,math.factorial(n+1)):\n        for k in range(1,math.factorial(n+1)):\n            d=k*j\n            if(d==math.factorial(n) and ((j<k) and math.gcd(j,k)==1)):\n                c+=1\n    print(c)\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477911,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8595924",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "saitejachalla201",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977960,
        "updated_at_ms": 1599977960,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T06:58:55.646Z",
        "__v": 0
    },
    {
        "_id": "5f606640468ccc0964b0c3bb",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws IOException {\n        int t;\n        BufferedReader reader =  \n                   new BufferedReader(new InputStreamReader(System.in)); \n        t= Integer.parseInt(reader.readLine());\n        while(t>0){\n            int n= Integer.parseInt(reader.readLine());\n            int a[] = new int[n];\n            int b[] = new int[n];\n            for(int i=0;i<n;i++){\n                String s=reader.readLine();\n                String[] numbers=s.split(\" \");\n                a[i]=Integer.parseInt(numbers[0]);\n                b[i]=Integer.parseInt(numbers[1]);\n            }\n            int k=0;\n            int sum=0;\n            int min=0;\n            int c=0;\n            int d=0;\n            if(n==1){\n                            System.out.println(a[0]+\" \"+b[0]);\n            }\n            else{\n            while(k<n){\n                sum=0;\n                for(int j=0;j<n;j++){\n                    int x=(a[k]-a[j])*(a[k]-a[j]);\n                    int y=(b[k]-b[j])*(b[k]-b[j]);\n                    sum=sum+(x+y);\n\n                }\n\n                if(k==0){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                if(sum<min){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                \n                k++;\n            }\n            System.out.println(c+\" \"+d);\n            }\n            t--;\n        }    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477894,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9686060",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "kedharnathsonu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977927,
        "updated_at_ms": 1599982727,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:59:12.644Z",
        "__v": 0
    },
    {
        "_id": "5f606649468ccc0964b0c3bc",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 1000010\n#define mod 1000000007\n#define ll  long long int\n \n \nll fac[MAXN],infac[MAXN];\n\nll fun(ll x,ll y){\n    ll ans=1;\n    while(y>0){\n        if(y%2==1){\n            ans=(ans*1ll*x)%mod;\n        }\n        y=y/2;\n        x=(x*1ll*x)%mod;\n    }\n    return ans;\n}\n\nvoid fun1(){\n    ll i;\n    fac[0]=1;\n    for(i=1;i<MAXN;i++){\n        fac[i]=fac[i-1]*1ll*i;\n        fac[i]%=mod;\n    }\n    for(i=0;i<MAXN;i++){\n        infac[i]=fun(fac[i],mod-2);\n    }    \n}\n\nll get(ll n,ll m){\n    ll p1,p2,ans;\n    p1=fac[m+n];\n    p2=infac[m]*1ll*infac[n];\n    p1%=mod;\n    p2%=mod;\n    ans=p1*1ll*p2;\n    ans=ans%mod;\n    return ans;\n}\n \nint main(){\n    fun1();\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n,m,x1,y1,x2,y2,i,j,z1,z2,cont1,cont2,p1,p2,ans,ans1,ans2;\n        cin>>n>>m>>x1>>y1>>x2>>y2;\n        ans=get(n,m);\n        // cout<<ans<<endl;\n        \n        ans1=get(n-x1,m-y1);\n        // cout<<ans1<<endl;\n        \n        cont1=get(x1,y1);\n        // cout<<cont1<<endl;\n        \n        ans1=ans1*1ll*cont1;\n        ans1%=mod;\n        // cout<<ans1<<endl;\n        \n        ans2=get(x2,y2);\n        // cout<<ans2<<endl;\n        \n        ll temp=get(x2-x1,y2-y1);\n        ll px=(temp*1ll*cont1)%mod;\n        ans2=ans2-px;\n        ans2+=mod;\n        ans2%=mod;\n        temp=temp%mod;\n        // cout<<ans2<<endl;\n        \n        ll ans3=get(n-x2,m-y2);\n        ans3=ans3*1ll*ans2;\n        ans3%=mod;\n        // cout<<ans3<<endl;\n        \n        ans3=ans3+ans1;\n        ans3%=mod;\n        // cout<<ans3<<endl;\n        \n        ans-=ans3;\n        ans+=mod;\n        ans%=mod;\n        cout<<ans<<endl;\n\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477890,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "3651417",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599977920,
        "updated_at_ms": 1599979120,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:59:21.760Z",
        "__v": 0
    },
    {
        "_id": "5f606653468ccc0964b0c3bd",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int mod = 1000000007,maxn = 3000001;\n\nll powmod(ll a,ll p)\n{\n    int res=1;\n    while(p)\n    {\n        if(p&1)\n        {\n            res=(res*1ll*a)%mod;\n        }\n        p>>=1;\n        a=(a*a)%mod;\n    }\n    return res;\n}\nll f[maxn];\n\nll nCr(ll n, ll r){\n    ll ans = f[n]*powmod(f[r],mod-2); ans %=mod;\n    ans = (ans*powmod(f[n-r],mod-2))%mod;\n    return ans;\n}\n\nvoid init(){\n    f[0] = 1; \n    for(int i=1;i<maxn;++i){\n        f[i] = (f[i-1]*i)%mod;\n    }\n}\n\nint main(){\n    ios_base::sync_with_stdio(false); cin.tie(NULL); \n    init();\n    int t;\n    cin>>t;\n    while(t--){\n        ll x,y,x1,x2,y1,y2;\n        cin >> x >> y >> x1 >> y1 >> x2 >> y2;\n        ll ans = nCr(x+y,x) - ((nCr(x-x1+y-y1,y-y1)*1ll*nCr(x1+y1,x1))%mod) - (nCr(x-x2+y-y2,x-x2)*1ll*nCr(x2+y2,x2))%mod;\n        ans = (ans%mod+mod)%mod;\n        ll extra = (nCr(x2-x1+y2-y1,x2-x1)*1ll*nCr(x-x2+y-y2,x-x2))%mod;\n        extra = (extra*1ll*nCr(x1+y1,x1))%mod;\n        ans = (ans + extra)%mod;\n        cout << ans << '\\n';\n    }\n  return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477885,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9693257",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "sg0071729",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599977909,
        "updated_at_ms": 1599977909,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:59:31.894Z",
        "__v": 0
    },
    {
        "_id": "5f60665e468ccc0964b0c3be",
        "submission_code": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    mini=99999999\n    lx=[]\n    ly=[]\n    ans1=0\n    ans2=0\n    for j in range(n):\n        x,y=map(int,input().split())\n        lx.append(x)\n        ly.append(y)    \n    for j in range(n):\n        sum1=0\n        x=lx[j]\n        y=ly[j]\n        for k in range(n):\n            sum1+=(x-lx[k])*(x-lx[k])+(y-ly[k])*(y-ly[k])\n        if sum1<mini:\n            mini=sum1\n            ans1=x\n            ans2=y\n    print(ans1,ans2)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477882,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4673657",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733104CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977908,
        "updated_at_ms": 1599979108,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:59:42.441Z",
        "__v": 0
    },
    {
        "_id": "5f606668468ccc0964b0c3bf",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define PRIME 1000000007\n    set<long long int> s;\nlong long int binary_exp(long long int x, long long int n)\n{\n    if (n == 0) {\n        return 1;\n    } else if (n == 1) {\n        return x % PRIME;\n    } else {\n        long long int temp = binary_exp(x, n / 2);\n        temp = (temp * temp) % PRIME;\n         \n        if (n % 2 == 0) {\n            return temp;\n        } else {\n            return ((x % PRIME) * temp) % PRIME;\n        }\n    }\n}\nvoid SieveOfEratosthenes(int n) \n{ \n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n  for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        {\n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        }    } \n    for (int p=2; p<=n; p++) \n       if (prime[p]) \n         s.insert(p);\n} \nlong long a[1000001];\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    SieveOfEratosthenes(1000000);\n    a[0]=0;\n    a[1]=0;\n    for(int i=2;i<=1000000;i++){\n        if(s.count(i))\n            a[i]=a[i-1]+1;\n        else\n            a[i]=a[i-1];\n    }\n    \n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n    long long n;\n    scanf(\"%lld\",&n);\n    if(n==1)printf(\"0\\n\");\n    else{\n      printf(\"%lld\\n\",binary_exp(2,a[n]-1));}\n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477873,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4724102",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "18H51A05C3",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977892,
        "updated_at_ms": 1599981492,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T06:59:52.578Z",
        "__v": 0
    },
    {
        "_id": "5f606671468ccc0964b0c3c0",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    static boolean iscoprime(float a,float b)\n    {\n        if(a==b)\n        {\n            return false;\n        }\n        else{\n            float sm=a;\n            float ln=b;\n            float div=0;\n            if(sm>ln)\n            {\n                sm=b;\n                ln=a;\n            }\n            for(float i=1;i<=sm;i++)\n            {\n                if(sm%i==0 && ln%i==0)\n                {\n                    div=div+1;\n                }\n            }\n            if(div==1)\n            {\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        \n    }\n    static float factorial(float n)\n    {\n        float ret=1;\n        for(float i=1;i<=n;i++)\n        {\n            ret=ret*i;\n        }\n        return ret;\n    }\n    static float noofvalues(float a)\n    {\n        ArrayList<Float> lit = new ArrayList();// stores all the factors\n        float val=0;\n        for(float i=1;i<=(a/2);i++)\n        {\n            if(a%i==0)\n            {\n                    if(iscoprime(i,a/i))\n                    {\n                        if(!lit.contains(i)){\n                        lit.add(i);\n                        lit.add(a/i);\n                        val=val+1;\n                        }\n                    }\n            }\n        }\n        return val;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scn = new Scanner(System.in);\n        int notest=scn.nextInt();\n        float[] arr = new float[notest];\n        for(int i=0;i<notest;i++)\n        {\n            arr[i]=scn.nextFloat();\n        }\n        scn.close();\n        for(int i=0;i<notest;i++)\n        {\n            System.out.println(Math.round(noofvalues(factorial(arr[i]))));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477872,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4679580",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "160218733021CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977883,
        "updated_at_ms": 1599983883,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:00:01.589Z",
        "__v": 0
    },
    {
        "_id": "5f606679468ccc0964b0c3c1",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 100010\n#define mod 1000000007\n#define ll  long long int\n \n \nll fac[MAXN],infac[MAXN];\n\nll fun(ll x,ll y){\n    ll ans=1;\n    while(y>0){\n        if(y%2==1){\n            ans=(ans*1ll*x)%mod;\n        }\n        y=y/2;\n        x=(x*1ll*x)%mod;\n    }\n    return ans;\n}\n\nvoid fun1(){\n    ll i;\n    fac[0]=1;\n    for(i=1;i<MAXN;i++){\n        fac[i]=fac[i-1]*1ll*i;\n        fac[i]%=mod;\n    }\n    for(i=0;i<MAXN;i++){\n        infac[i]=fun(fac[i],mod-2);\n    }    \n}\n\nll get(ll n,ll m){\n    ll p1,p2,ans;\n    p1=fac[m+n];\n    p2=infac[m]*1ll*infac[n];\n    p1%=mod;\n    p2%=mod;\n    ans=p1*1ll*p2;\n    ans=ans%mod;\n    return ans;\n}\n \nint main(){\n    fun1();\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n,m,x1,y1,x2,y2,i,j,z1,z2,cont1,cont2,p1,p2,ans,ans1,ans2;\n        cin>>n>>m>>x1>>y1>>x2>>y2;\n        ans=get(n,m);\n        // cout<<ans<<endl;\n        \n        ans1=get(n-x1,m-y1);\n        // cout<<ans1<<endl;\n        \n        cont1=get(x1,y1);\n        // cout<<cont1<<endl;\n        \n        ans1=ans1*1ll*cont1;\n        ans1%=mod;\n        // cout<<ans1<<endl;\n        \n        ans2=get(x2,y2);\n        // cout<<ans2<<endl;\n        \n        ll temp=get(x2-x1,y2-y1);\n        ll px=(temp*1ll*cont1)%mod;\n        ans2=ans2-px;\n        ans2+=mod;\n        ans2%=mod;\n        temp=temp%mod;\n        // cout<<ans2<<endl;\n        \n        ll ans3=get(n-x2,m-y2);\n        ans3=ans3*1ll*ans2;\n        ans3%=mod;\n        // cout<<ans3<<endl;\n        \n        ans3=ans3+ans1;\n        ans3%=mod;\n        // cout<<ans3<<endl;\n        \n        ans-=ans3;\n        ans+=mod;\n        ans%=mod;\n        cout<<ans<<endl;\n\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477871,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "3651417",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599977879,
        "updated_at_ms": 1599977879,
        "misc_notes": "[\"Success\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T07:00:09.173Z",
        "__v": 0
    },
    {
        "_id": "5f606683468ccc0964b0c3c2",
        "submission_code": "#include <bits/stdc++.h> \nusing namespace std; \ntypedef long long ll;\n#define nl \"\\n\";\nll power(ll x,ll y,ll m) { ll res=1; while(y) { if(y&1){res = (res%m*x%m)%m;} y>>=1;x=(x%m*x%m)%m; } return res%m; }\nbool p[1000001]; \nvoid func(int n) \n{  \n    memset(p, true, sizeof(p)); \n    p[0]=0;\n    p[1]=0;\n    for (int i=2;i*i<=n;i++) \n    { \n        if (p[i]==true) \n        { \n            for(int j=i*i;j<=n;j+=i) \n                p[j]=false; \n        } \n    }\n}\nll mod=1e9+7;\nint main(){\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n    ll t,n;\n    cin>>t;\n    func(1e6);\n    ll a[1000001]={0};\n    for(int i=2;i<=1e6;i++){\n        if(p[i]==1) a[i]=a[i-1]+1;\n        else a[i]=a[i-1];\n    }\n    while(t--){\n        cin>>n; \n        if(n==1)\n            cout<<0<<endl;\n        else\n            cout<<power(2,a[n]-1,mod)<<nl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477868,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5687885",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "balajipulugujju1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977872,
        "updated_at_ms": 1599979072,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:00:19.199Z",
        "__v": 0
    },
    {
        "_id": "5f60668a468ccc0964b0c3c3",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define PRIME 1000000007\n    set<long long int> s;\nlong long int binary_exp(long long int x, long long int n)\n{\n    if (n == 0) {\n        return 1;\n    } else if (n == 1) {\n        return x % PRIME;\n    } else {\n        long long int temp = binary_exp(x, n / 2);\n        temp = (temp * temp) % PRIME;\n         \n        if (n % 2 == 0) {\n            return temp;\n        } else {\n            return ((x % PRIME) * temp) % PRIME;\n        }\n    }\n}\nvoid SieveOfEratosthenes(int n) \n{ \n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n  for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        {\n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        }    } \n    for (int p=2; p<=n; p++) \n       if (prime[p]) \n         s.insert(p);\n} \nlong long a[1000001];\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    SieveOfEratosthenes(1000000);\n    a[0]=0;\n    a[1]=0;\n    for(int i=2;i<=1000000;i++){\n        if(s.count(i))\n            a[i]=a[i-1]+1;\n        else\n            a[i]=a[i-1];\n    }\n    \n    int t;\n    scanf(\"%d\",&t);\n    while(t--){\n    long long n;\n    scanf(\"%lld\",&n);\n    if(n==1)printf(\"1\\n\");\n    else{\n      printf(\"%lld\\n\",binary_exp(2,a[n]-1));}\n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477865,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4724102",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "18H51A05C3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977860,
        "updated_at_ms": 1599980260,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:00:26.368Z",
        "__v": 0
    },
    {
        "_id": "5f606693468ccc0964b0c3c4",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nconst long long MAX_SIZE = 1000001; \n  \n// isPrime[] : isPrime[i] is true if number is prime  \n// prime[] : stores all prime number less than N \n// SPF[] that store smallest prime factor of number \n// [for Exp : smallest prime factor of '8' and '16' \n// is '2' so we put SPF[8] = 2 , SPF[16] = 2 ] \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n  \n// function generate all prime number less then N in O(n) \nvoid manipulated_seive(long long N) \n{ \n    // 0 and 1 are not prime \n    isprime[0] = isprime[1] = false ; \n  \n    // Fill rest of the entries \n    for (long long int i=2; i<N ; i++) \n    { \n        // If isPrime[i] == True then i is \n        // prime number \n        if (isprime[i]) \n        { \n            // put i into prime[] vector \n            prime.push_back(i); \n  \n            // A prime number is its own smallest \n            // prime factor \n            SPF[i] = i; \n        } \n  \n        // Remove all multiples of  i*prime[j] which are \n        // not prime by making isPrime[i*prime[j]] = false \n        // and put smallest prime factor of i*Prime[j] as prime[j] \n        // [ for exp :let  i = 5 , j = 0 , prime[j] = 2 [ i*prime[j] = 10 ] \n        // so smallest prime factor of '10' is '2' that is prime[j] ] \n        // this loop run only one time for number which are not prime \n        for (long long int j=0; \n             j < (int)prime.size() && \n             i*prime[j] < N && prime[j] <= SPF[i]; \n             j++) \n        { \n            isprime[i*prime[j]]=false; \n  \n            // put smallest prime factor of i*prime[j] \n            SPF[i*prime[j]] = prime[j] ; \n        } \n    } \n} \n  \n// driver  program to test above function \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n        \n    \nios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long n;\n        scanf(\"%lld\",&n);\n        long long c=0;\n        if(n==2)\n            cout<<1%m<<\"\\n\";\n        else if(n==3)\n            cout<<2%m<<\"\\n\";\n        else\n        {\n        manipulated_seive(n);\n    for (long unsigned int i=0; i<prime.size() && prime[i] <= n; i++) \n    {c=c%m+1;}\n        //cout<<c<<\" \";\n            isprime.clear();\n        prime.clear();\n        SPF.clear();\n       printf(\"%lld\",((long long)pow(2,c-1))%m);\n        \n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477835,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977803,
        "updated_at_ms": 1599985003,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:00:35.596Z",
        "__v": 0
    },
    {
        "_id": "5f60669d468ccc0964b0c3c5",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws IOException {\n        int t;\n        BufferedReader reader =  \n                   new BufferedReader(new InputStreamReader(System.in)); \n        t= Integer.parseInt(reader.readLine());\n        while(t>0){\n            int n= Integer.parseInt(reader.readLine());\n            int a[] = new int[n];\n            int b[] = new int[n];\n            for(int i=0;i<n;i++){\n                String s=reader.readLine();\n                String[] numbers=s.split(\" \");\n                a[i]=Integer.parseInt(numbers[0]);\n                b[i]=Integer.parseInt(numbers[1]);\n            }\n            int k=0;\n            int sum=0;\n            int min=0;\n            int c=0;\n            int d=0;\n            while(k<n){\n                sum=0;\n                for(int j=0;j<n;j++){\n                    int x=(a[k]-a[j])*(a[k]-a[j]);\n                    int y=(b[k]-b[j])*(b[k]-b[j]);\n                    sum=sum+(x+y);\n\n                }\n\n                if(k==0){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                if(sum<min){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                \n                k++;\n            }\n            System.out.println(c+\" \"+d);\n            t--;\n        }    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477826,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9686060",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "kedharnathsonu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977794,
        "updated_at_ms": 1599981394,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:00:45.209Z",
        "__v": 0
    },
    {
        "_id": "5f6066a7468ccc0964b0c3c6",
        "submission_code": "import sys\ndef fact(n):\n    if(n == 1):\n        return n\n    else:\n        return n*fact(n-1)\n\nt=sys.stdin.readline()\nt=int(t)\narr = []\nwhile t!=0:\n    ele = sys.stdin.readline()\n    arr.append(ele)\n    t-=1\n    \nfor n in arr:\n    num=fact(int(n))\n    c=0\n    i=1\n    while(i<=num):\n        k=0\n        if(num%i==0):\n            j=1\n            while(j<=i):\n                if(i%j==0):\n                    k=k+1\n                j=j+1\n            if(k==2):\n                c+=1\n        i=i+1\n    sys.stdout.write(str(pow(2,(c-1)))+'\\n')       ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477824,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675198",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Keerti159",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977788,
        "updated_at_ms": 1599980188,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:00:55.142Z",
        "__v": 0
    },
    {
        "_id": "5f6066af468ccc0964b0c3c7",
        "submission_code": "def factorial(n): \n    if n < 0: \n        return 0\n    elif n == 0 or n == 1: \n        return 1\n    else: \n        fact = 1\n        while(n > 1): \n            fact *= n \n            n -= 1\n        return fact \ndef __gcd(a, b): \n  \n    if (a == 0 or b == 0): return 0\n      \n    # base case \n    if (a == b): return a \n      \n    # a is greater \n    if (a > b):  \n        return __gcd(a - b, b) \n              \n    return __gcd(a, b - a) \ndef coprime(a, b): \n    if ( __gcd(a, b) == 1): \n        return 1\n    else: \n        return 0         \nn=int(input())\nlst=[]\nfor i in range(0,n):\n    a=int(input())\n    b=factorial(a)\n    c=1\n    for j in range(1,b):\n        for k in range(j,b):\n            if(coprime(i, j)):\n                if(j*k==b):\n                    c=c+1\n    #print(c)\n    lst.append(c)\n    n=n-1\nd=len(lst)\nfor i in range(0,d):\n    d=lst[i]\n    print(d)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477818,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4623005",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330268_cse_e",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977777,
        "updated_at_ms": 1599977777,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:01:03.951Z",
        "__v": 0
    },
    {
        "_id": "5f6066b6468ccc0964b0c3c8",
        "submission_code": "t=int(input())\nfor qq in range(t):\n    n,m=map(int,input().split())\n    kn=0\n    if n<=2:\n        kn = n*n\n    elif n%2==0:\n        kn = (n*n)//2\n    else:\n        kn = (((n+1)*(n+1))//2)-n\n    while m:\n        a,b=map(int,input().split())\n        if a%2==b%2:\n            kn-=1\n        m-=1\n    print('Case #{}: {}'.format(qq+1,kn))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477805,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "4613176",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "180330007_CSE_A",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599977750,
        "updated_at_ms": 1599977750,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:01:10.693Z",
        "__v": 0
    },
    {
        "_id": "5f6066c0468ccc0964b0c3c9",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nlong int fact(long int n)\n{\n    int i=1;\n    long int res=1;\n    for(i=1;i<=n;i++)\n    {\n        res=res*i;\n    }\n    return res;\n}\nint hcf(int a, int b)\n{\n    while (a != b)\n    {\n        if (a > b)\n        {\n            a = a - b;\n        }\n        else\n        {\n            b = b - a;\n        }\n    }\n    return a;\n}\nint main() {\n    long int n,a,b=1,c,count,i;\n    scanf(\"%d\",&n);\n    for(int j=0;j<n;j++)\n    {\n        count=0;\n        scanf(\"%d\",&a);\n        b=fact(a);\n        for (i = 1; i * i <= b; i++)\n        {\n            if (b % i == 0) \n            {\n                c= hcf(i,b/i);\n                //printf(\"%d\\n\",c);\n            }\n            if(c==1)\n            {\n                count=count+1;\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477799,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5093044",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218737004ITA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977743,
        "updated_at_ms": 1599981343,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:01:20.027Z",
        "__v": 0
    },
    {
        "_id": "5f6066c7468ccc0964b0c3ca",
        "submission_code": "import sys\nMAX = 1000000\nprefix =[0]*(MAX + 1) \ndef buildPrefix(): \n    prime = [1]*(MAX + 1) \n    p = 2\n    while(p * p <= MAX):  \n        if (prime[p] == 1): \n            i = p * 2\n            while(i <= MAX): \n                prime[i] = 0\n                i += p \n        p+=1\n    for p in range(2,MAX+1):  \n        prefix[p] = prefix[p - 1] \n        if (prime[p]==1): \n            prefix[p]+=1\ndef query(L, R): \n    return prefix[R]-prefix[L - 1] \nt=int(input())\nbuildPrefix()\nfor i in range(t):\n    n=int(sys.stdin.readline())\n    a=query(1,n)-1\n    if a<0:\n        print(\"0\")\n        continue\n    p=(int)(1e9+7)\n    sys.stdout.write(str(pow(2,a,p))+'\\n')",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477796,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4684377",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "karthikreddy_10",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977741,
        "updated_at_ms": 1599977741,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:01:27.908Z",
        "__v": 0
    },
    {
        "_id": "5f6066d2468ccc0964b0c3cb",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define PRIME 1000000007\n    set<long long int> s;\nlong long int binary_exp(long long int x, long long int n)\n{\n    if (n == 0) {\n        return 1;\n    } else if (n == 1) {\n        return x % PRIME;\n    } else {\n        long long int temp = binary_exp(x, n / 2);\n        temp = (temp * temp) % PRIME;\n         \n        if (n % 2 == 0) {\n            return temp;\n        } else {\n            return ((x % PRIME) * temp) % PRIME;\n        }\n    }\n}\nvoid SieveOfEratosthenes(int n) \n{ \n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n  for (int p=2; p*p<=n; p++) \n    { \n        if (prime[p] == true) \n        {\n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        }    } \n    for (int p=2; p<=n; p++) \n       if (prime[p]) \n         s.insert(p);\n} \nlong long a[1000001];\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    SieveOfEratosthenes(1000000);\n    a[0]=0;\n    a[1]=0;\n    for(int i=2;i<=1000000;i++){\n        if(s.count(i))\n            a[i]=a[i-1]+1;\n        else\n            a[i]=a[i-1];\n    }\n    \n    int t;\n    cin>>t;\n    while(t--){\n    long long n;\n    cin>>n;\n    if(n==1)\n    cout<<1<<endl;\n    else{\n      cout<<binary_exp(2,a[n]-1)<<endl;}\n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477790,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4724102",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "18H51A05C3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977727,
        "updated_at_ms": 1599978927,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:01:38.971Z",
        "__v": 0
    },
    {
        "_id": "5f6066da468ccc0964b0c3cc",
        "submission_code": "import math\nt=int(input())\nfor k in range(1,t+1):\n    count=0\n    n=int(input())\n    n1=math.factorial(n)\n    for i in range(1,n1+1):\n        for j in range(1,n1+1):\n            if (i*j)==n1 and math.gcd(i,j)==1:\n                count=count+1\n    print((count//2)%(1000000000+7))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477786,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4683610",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733092CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977713,
        "updated_at_ms": 1599978913,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:01:46.220Z",
        "__v": 0
    },
    {
        "_id": "5f6066e1468ccc0964b0c3cd",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n\n   // exmaple  2  3\n       //res = 2\n       /* exmaple    2 3 5\n       \n          (2 *3) * (5) --\n            (3* 2) * 5 --\n            \n            \n          (2 * 5)  * (3) -\n           (5 * 2) * 3 -\n           \n          (3 *5) * 2 -\n          (5 * 3) * 2 -\n       \n       \n          2 3 4 7\n          \n          (2 * 3 * 4)  * 7\n          (2 * 3 * 7)  * 4\n          (2 * 4 * 7 )  * 3\n          (3 * 4 * 7)  * 2\n       \n       */\n\nint f[100], expo[100],len=-1;\nvoid primeFactorization(long long num){\n    long long d=2;\n    \n    // Untill Not Prime (num value)\n    while(num>1 && d*d <= num){\n        int k=0;\n        while(num%d ==0){\n            k++;\n            num/=d;\n        }\n        if(k>0){\n            len++;\n            f[len]=d;\n            expo[len]=k;\n            \n        }\n        d++;\n    }\n    \n    // If Prime Number( num value ) Found At Last \n    if(num>1){\n        len++;\n        f[len]=num;\n        expo[len]=1;\n    }\n    \n}\nlong long fact(int n){\n    long long f=1;\n    for (int i = 2; i <= n; ++i) {\n            f *= i;\n        }\n    return f;\n}\n\nint main(){\n    // These Two Lines Enables Faster i/O\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    \n    int t;\n    cin>>t;\n    \n    while(t--){\n        int n;\n        cin>>n;\n        long long val = fact(n);\n        len=-1;\n        primeFactorization(val);   \n        \n        //  For Base case\n        long long  res=1;\n\n        res +=(len);\n       cout<<res % (1000000007)<<endl;     \n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477771,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6387750",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "pusupalahemanth1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977694,
        "updated_at_ms": 1599977694,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:01:53.369Z",
        "__v": 0
    },
    {
        "_id": "5f6066ea468ccc0964b0c3ce",
        "submission_code": "from itertools import combinations\nimport math\ndef f(index):\n    s = 0\n    for j in range(N):\n        if index != j:\n            p = pre[tuple(sorted((index,j)))]\n            s += p\n    return s\n\nfor _ in range(int(input())):\n    N = int(input())\n    indexComb = list(combinations(range(N),2))\n    l = []\n    for j in range(N):\n        x,y = map(int,input().split())\n        l.append((x,y))\n    pre = dict()\n    for each in indexComb:\n        pre[each] = 0\n\n    for index in range(0,N):\n        ans = 0\n        x = l[index][0]\n        y = l[index][1]\n        for i in range(N):\n            if index != i and pre[tuple(sorted((index,i)))] == 0:\n                pre[tuple(sorted((index,i)))] += ((x-l[i][0])**2)+((y-l[i][1])**2)\n    mini = math.inf\n    \n    for index in range(N):\n        curr = f(index)\n        if mini > curr:\n            mini = curr\n            i = index\n    print(l[i][0],l[i][1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477764,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "3164622",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "anshmaske743",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977680,
        "updated_at_ms": 1599977680,
        "misc_notes": "[\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:02:02.827Z",
        "__v": 0
    },
    {
        "_id": "5f6066f3468ccc0964b0c3cf",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        BufferedReader br = new BufferedReader( new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine());\n        while(n!=0){\n            int t=Integer.parseInt(br.readLine());\n            int index=0;\n           \n            int fact=factorial(t);\n            int[] arr=new int[fact];\n            \n            for(int i=1;i<=fact;i++)\n                arr[index++]=i;\n            long count=0;\n            for (int i = 0; i < arr.length-1; i++)  {\n                for (int j = i + 1; j < arr.length; j++){\n                    if(gcd(arr[i],arr[j])==1  &&  (arr[i]*arr[j])==fact)\n                        count++;\n                }\n            }\n            System.out.println((int)(count%(Math.pow(10,9)+7)));\n            n--;\n        }\n    }\n    \n    static int factorial(int n) {\n    if (n>=1)\n        return n*factorial(n-1);\n    else\n        return 1;\n    }\n    \n    static int gcd(int x, int y) \n    {   \n        if (x==0 || y==0) \n        return 0; \n      \n        if (x==y) \n            return x; \n       \n        if (x>y) \n            return gcd(x-y,y); \n              \n        return gcd(x,y-x); \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477762,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675172",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "Likhita_AVL",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977678,
        "updated_at_ms": 1599981278,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:02:11.223Z",
        "__v": 0
    },
    {
        "_id": "5f6066fd468ccc0964b0c3d0",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nlong int fact(long int n)\n{\n    int i=1;\n    long int res=1;\n    for(i=1;i<=n;i++)\n    {\n        res=res*i;\n    }\n    return res;\n}\nint hcf(int a, int b)\n{\n    while (a != b)\n    {\n        if (a > b)\n        {\n            return hcf(a - b, b);\n        }\n        else\n        {\n            return hcf(a, b - a);\n        }\n    }\n    return a;\n}\nint main() {\n    long int n,a,b=1,c,count,i;\n    scanf(\"%d\",&n);\n    for(int j=0;j<n;j++)\n    {\n        count=0;\n        scanf(\"%d\",&a);\n        b=fact(a);\n        for (i = 1; i * i <= b; i++)\n        {\n            if (b % i == 0) \n            {\n                c= hcf(i,b/i);\n                //printf(\"%d\\n\",c);\n            }\n            if(c==1)\n            {\n                count=count+1;\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477754,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5093044",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218737004ITA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977668,
        "updated_at_ms": 1599980068,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:02:21.359Z",
        "__v": 0
    },
    {
        "_id": "5f606703468ccc0964b0c3d1",
        "submission_code": "#include<bits/stdc++.h>\n#define ll long long \nusing namespace std;\nll powR(ll a,ll b) // a^b\n{\n    ll r = 1e9+7;\n    if(a==0)\n        return 0;\n    if(b==0)\n        return 1;\n    //\n    if(b%2==0)\n    {\n        ll num = powR(a,b/2)%r;\n        return (num%r*num%r)%r;    \n    }\n    else\n    {\n        ll num = powR(a,(b-1)/2);\n        return ((num%r*a%r)%r*(num%r))%r;\n    }\n    //\n}\n// disjoint set\nvoid makeSet(ll i,vector<ll>& parent, vector<ll>& rank)\n{\n    parent[i] = i;\n    rank[i] = 1;\n}\nll getId(ll i,vector<ll>& parent)\n{\n    if(i==parent[i])\n        return parent[i];\n    parent[i] = getId(parent[i],parent);\n    return parent[i];\n}\nvoid Union(ll i,ll j,vector<ll>& parent,vector<ll>& rank)\n{\n    ll iId = getId(i,parent);\n    ll jId = getId(j,parent);\n    if(iId == jId)\n        return;\n    if(rank[iId]>rank[jId])\n    {\n        parent[jId] = iId;\n        return;\n    }\n    else\n    {\n        parent[iId] = jId;\n        if(rank[iId]==rank[jId])\n        {\n            rank[jId]+=1;\n            return;\n        }\n    }\n}\n//\nint main() \n{\n    ll t;\n    cin>>t;\n    while(t--)\n    {\n        ll n;\n        cin>>n;\n        //\n        if(n==1 or n==2)\n        {\n            cout<<1<<'\\n';\n            continue;\n        }\n        else if(n==3)\n        {\n            cout<<2<<'\\n';\n            continue;\n        }\n        //\n        vector<ll> parent(n+1,-1),rank(n+1,0); //\n        for(ll i=1;i<=n;i++)\n            makeSet(i,parent,rank);\n        //\n        vector<ll> v(n+1,0); // visited!\n        for(ll i=2;i<=n;i++)\n        {\n            if(v[i]==0)\n            {\n                for(ll j=1;i*j<=n;j++)\n                {\n                    Union(i,i*j,parent,rank);\n                    v[i*j] = 1;    \n                }    \n            }\n        }\n        unordered_map<ll,ll> m; // id->freq(size);\n        unordered_map<ll,ll>::iterator it;\n        for(ll i=2;i<=n;i++)\n        {\n            if(m.find(getId(i,parent))==m.end())\n                m[getId(i,parent)] = 0;\n            m[getId(i,parent)]+=1;\n        }\n//        cout<<\"size: \"<<m.size()<<'\\n';\n        ll singles = 0;\n        ll notSingles = 0;\n        for(it=m.begin();it!=m.end();it++)\n        {\n            if(it->second>1)\n                notSingles+=1;\n            else\n                singles+=1;\n        }\n        ll r = 1e9+7;\n//        cout<<\"Not Singles: \"<<notSingles<<'\\n';\n//        cout<<\"Singles: \"<<singles<<'\\n';\n//        for(ll i=1;i<=n;i++)\n//            cout<<getId(i,parent)<<' ';\n//        cout<<'\\n';\n        cout<<powR(2,singles)%r<<'\\n';\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477747,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8391815",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "balasai2712",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977662,
        "updated_at_ms": 1599977662,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:02:27.303Z",
        "__v": 0
    },
    {
        "_id": "5f60670c468ccc0964b0c3d2",
        "submission_code": "import math\nt=int(input())\nfor k in range(1,t+1):\n    count=0\n    n=int(input())\n    n1=math.factorial(n)\n    for i in range(1,n1+1):\n        for j in range(1,n1+1):\n            if (i*j)==n1 and math.gcd(i,j)==1:\n                count=count+1\n    print(count//2)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477733,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4683610",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733092CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977631,
        "updated_at_ms": 1599977631,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:02:36.113Z",
        "__v": 0
    },
    {
        "_id": "5f606713468ccc0964b0c3d3",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\nimport java.lang.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        ArrayList<Integer> arrx=new ArrayList();\n        ArrayList<Integer> arry=new ArrayList();\n        ArrayList<Integer> resx=new ArrayList();\n        ArrayList<Integer> resy=new ArrayList();\n        int min=99999;\n        int T=sc.nextInt();\n        int xf=9999;\n        int yf=9999;\n        \n        for(int i=0;i<T;i++){\n            int n=sc.nextInt();\n            arrx=new ArrayList();\n            arry=new ArrayList();\n            int sum=0;\n            min=9999;\n            for(int j=0;j<n;j++){\n                \n                int x=sc.nextInt();\n                int y=sc.nextInt();\n                arrx.add(x);\n                arry.add(y);\n                    \n            }\n            \n            int f=0;\n            int x1=0;\n            int y1=0;\n            for(int k=0;k<arrx.size();k++){\n                sum=0;\n                \n                if(f<arrx.size()){\n                    x1=arrx.get(f);\n                    y1=arry.get(f);\n    \n                for(int l=0;l<arrx.size();l++){\n                sum=sum+(int)(((arrx.get(l)-x1)*(arrx.get(l)-x1)))+((int)((arry.get(l)-y1)*(arry.get(l)-y1)));\n                }\n                \n                if(sum<min){\n                    min=sum;\n                    \n                    //if(k==arrx.size()-1){\n                        xf=arrx.get(f);\n                        yf=arry.get(f);\n                    //}\n                    \n                }\n                    f=f+1;\n                    \n                }\n                \n            }\n            resx.add(xf);\n            resy.add(yf);\n            \n        }\n        for(int i=0;i<resx.size();i++){\n            System.out.print(resx.get(i)+\" \");\n            System.out.print(resy.get(i));\n            System.out.println();\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477724,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "8908111",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "chandana2k1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977616,
        "updated_at_ms": 1599977616,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:02:43.582Z",
        "__v": 0
    },
    {
        "_id": "5f60671a468ccc0964b0c3d4",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\nvector<pair<string,string>> se;\nbool cmp(pair<string,string> &p1,pair<string,string> &p2)\n{\n    if(p1.first==p2.first)\n    return p1.second<p2.second;\n    return p1.first<p2.first;\n}\n bool vis[1001][1001];\n char a[1000][1000];\n int n,m;\nvoid foo(int i,int j,string s,string dir)\n{\n    if(i<0 || j<0 || i>=n || j>=m ||vis[i][j]==true)\n    return;\n   \n    if(i==n-1 && j==m-1)\n    {\n          se.push_back(make_pair(s,dir));\n          dir.pop_back();\n          return;\n    }\n     vis[i][j]=true;\n    foo(i,j+1,s+a[i][j],dir+\"R\");\n    foo(i+1,j,s+a[i][j],dir+\"D\");\n    vis[i][j]=false;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin>>t;\n    int j=1;\n    while(t--)\n    {\n        cin>>n>>m;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<m;j++)\n        {\n            cin>>a[i][j];\n        }\n    }\n  \n    memset(vis,0,sizeof(vis));\n    foo(0,0,\"\",\"\");\n    sort(se.begin(),se.end(),cmp);\n    cout<<\"Case #\"<<j<<\": \"<<se[0].second<<\"\\n\";\n    se.clear();\n    j++;\n    }\n}\n// #include<bits/stdc++.h>\n// using namespace std;\n// int main()\n// {\n    \n//     int t;\n//     cin>>t;\n//     while(t--)\n//     {\n//         int n,m;\n//         cin>>n>>m;\n//         queue<pair<int,int>> q;\n//         char a[n][m];\n//         for(int i=0;i<n;i++)\n//         {\n//             for(int j=0;j<m;j++)\n//             {\n//                 cin>>a[i][j];\n//             }\n//         }\n//         vector<pair<string,string>> v;\n//         string s1,s2;\n//         q.push(make_pair(0,0));\n//         s1+=a[0][0];\n//         while(!q.empty())\n//         {\n            \n//         }\n//     }\n// }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477716,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "4289507",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "praveen7777",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599977596,
        "updated_at_ms": 1599979996,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:02:50.544Z",
        "__v": 0
    },
    {
        "_id": "5f606721468ccc0964b0c3d5",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    \n    int x_i[100],y_i[100],fx[100];\n    int n,i,j;\n    int test_cases;\n    int min,minx,miny;\n    int fxv,x,y;\n    scanf(\"%d\",&test_cases);\n   \n    do\n    {\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&x_i[i],&y_i[i]);\n    }\n        \n    for(i=0;i<n;i++)\n    {\n        fxv=0;\n        x=x_i[i];\n        y=y_i[i];\n        for(j=0;j<n;j++)\n        {\n            if(j == i)\n                continue;\n            else\n                fxv+=pow((x-x_i[j]),2)+pow((y-y_i[j]),2);\n        }\n        fx[i]=fxv;\n    }\n    min=fx[0];\n    minx=x_i[0];\n    miny=y_i[0];\n    for(i=1;i<n;i++)\n    {\n        if(min>fx[i])\n        {\n            min=fx[i];\n            minx=x_i[i];\n            miny=y_i[i];\n        }\n    }\n    printf(\"%d %d\\n\",minx,miny);\n    test_cases--;\n    }while(test_cases != 0);\n    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477710,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5487386",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "devaduttsanka",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977588,
        "updated_at_ms": 1599982388,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:02:57.507Z",
        "__v": 0
    },
    {
        "_id": "5f606727468ccc0964b0c3d6",
        "submission_code": "import sys\n#import math.pow\nMAX = 1000000\nprefix =[0]*(MAX + 1) \ndef buildPrefix(): \n    prime = [1]*(MAX + 1) \n    p = 2\n    while(p * p <= MAX):  \n        if (prime[p] == 1): \n            i = p * 2\n            while(i <= MAX): \n                prime[i] = 0\n                i += p \n        p+=1\n    for p in range(2,MAX+1):  \n        prefix[p] = prefix[p - 1] \n        if (prime[p]==1): \n            prefix[p]+=1\ndef query(L, R): \n    return prefix[R]-prefix[L - 1] \nt=int(input())\nbuildPrefix()\nfor i in range(t):\n    n=int(sys.stdin.readline())\n    a=query(1,n)-1\n    if a<0:\n        print(\"0\")\n        continue\n    p=(int)(1e9+7)\n    sys.stdout.write(str(pow(2,a,p))+'\\n')",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477698,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4674163",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977573,
        "updated_at_ms": 1599985973,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:03:03.855Z",
        "__v": 0
    },
    {
        "_id": "5f60672e468ccc0964b0c3d7",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    int t;\n    cin>>t;\n    while(t--){\n        long long n;\n        cin>>n;\n        long long i,x[n],y[n],f[n],min=100005,min1=10000000,s1=0,s2=0,s3=0,s4=0;\n        for(i=0;i<n;i++){\n            cin>>x[i]>>y[i];\n            s1+=(x[i]*x[i]);\n            s2+=(y[i]*y[i]);\n            s3+=x[i];\n            s4+=y[i];\n        }\n        for(i=0;i<n;i++){\n            f[i] = n*(x[i]*x[i]+y[i]*y[i])+s1+s2-2*(x[i]*s3+y[i]*s4);\n            if(min1==f[i]){\n                if(min>i){\n                    min=i;\n                }\n            }\n            else if(min1>f[i]){\n                min1 = f[i];\n                min = i;\n            }   \n        }\n        cout<<x[min]<<\" \"<<y[min]<<endl;\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477691,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6986492",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp14",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977565,
        "updated_at_ms": 1599981165,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:03:10.678Z",
        "__v": 0
    },
    {
        "_id": "5f606737468ccc0964b0c3d8",
        "submission_code": "import math\nprimenumber=[]\ndef SieveOfEratosthenes(n): \n      \n    # Create a boolean array \"prime[0..n]\" and initialize \n    #  all entries it as true. A value in prime[i] will \n    # finally be false if i is Not a prime, else true. \n    global primenumber\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n          \n        # If prime[p] is not changed, then it is a prime \n        if (prime[p] == True): \n              \n            # Update all multiples of p \n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n      \n    # Print all prime numbers \n    for p in range(2, n+1): \n        if prime[p]: \n            primenumber.append(p) \nMOD=10**9+7\ndef power(n):\n    a=2\n    c=1\n    while n>0:\n        if n%2==1:\n            c=(c*a)%MOD\n        a=(a*a)%MOD \n        n=int(n/2)\n    return c%MOD\nt=int(input())\nwhile t:\n    primenumber.clear()\n    n=int(input())\n    if(n<=1):\n        print(0)\n    else:\n        SieveOfEratosthenes(n)\n        r=len(set(primenumber))\n        print(power(r-1)%(MOD))\n    t-=1\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477673,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4673657",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733104CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977529,
        "updated_at_ms": 1599978729,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:03:19.623Z",
        "__v": 0
    },
    {
        "_id": "5f60673e468ccc0964b0c3d9",
        "submission_code": "#include<bits/stdc++.h>\n#define FIO                      \\\n    ios::sync_with_stdio(false); \\\n    cin.tie(0);                  \\\n    cout.tie(0);\n#define OJ \\\n    freopen(\"input1.txt\", \"r\", stdin); \\\n    freopen(\"output1.txt\", \"w\", stdout);\nusing namespace std;\n\n\nint f[100], expo[100],len=-1;\nvoid primeFactorization(long long num){\n\tlong long d=2;\n\t\n\t// Untill Not Prime (num value)\n\twhile(num>1 && d*d <= num){\n\t\tint k=0;\n\t\twhile(num%d ==0){\n\t\t\tk++;\n\t\t\tnum/=d;\n\t\t}\n\t\tif(k>0){\n\t\t\tlen++;\n\t\t\tf[len]=d;\n\t\t\texpo[len]=k;\n\t\t}\n\t\td++;\n\t}\n\t\n\t// If Prime Number( num value ) Found At Last \n\tif(num>1){\n\t\tlen++;\n\t\tf[len]=num;\n\t\texpo[len]=1;\n\t}\n\t\n}\nlong long fact(int n){\n\tlong long f=1;\n\tfor (int i = 1; i <= n; ++i) {\n            f *= i;\n    }\n    return f;\n}\n\nint main(){\n\tFIO;\t\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tint n;\n\t\tcin>>n;\n\t\tlong long val = fact(n);\n\t\tlen=-1;\n\t\tprimeFactorization(val);   \n\t\t\n\t\t//  For Base case\n\t\tlong long res=1;\n\n        res +=(len);\n        cout<<(res % 1000000007)<<endl; \t\n\t}\n\treturn 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477668,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4557538",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "prashanth_007",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977524,
        "updated_at_ms": 1599978724,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:03:26.547Z",
        "__v": 0
    },
    {
        "_id": "5f606747468ccc0964b0c3da",
        "submission_code": "/*input\n1\n2 5\nTSNMX\nSRCVK\n*/\n/*\n\n**************************\n*                         *\n* AUTHOR :: shado_w      *\n*                         *\n**************************\n\n*/\n#include<bits/stdc++.h>\n#define lld          long long int\n#define pb          push_back\n#define ppb         pop_back\n#define    endl        '\\n'\n#define mii         map<lld,lld>\n#define msi         map<string,lld>\n#define mis         map<lld, string>\n#define mpi         map<pair<lld ,lld >,lld >\n#define pii         pair<lld,lld>\n#define vi          vector<lld>\n#define vpi         vector<pii>\n#define vs          vector<string>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define sz(x)       (lld)x.size()\n#define hell        1000000007\n#define rrep(i,m,n)    for(lld i=m;i>=n;i--)\n#define rep(i,m,n)    for(lld i=m;i<n;i++)\n#define lbnd        lower_bound\n#define ubnd        upper_bound\n#define bs          binary_search\n#define mp          make_pair\n#define what_is(x)  cerr << #x << \" is \" << x << endl;\n#define pr(x)         cout<< x << \" \";\n#define pre(x)        cout<< x << endl ;\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>; \n//change null_type to get ordered_map\n#define N  100005\nvector <vector<char>> a;\nvector <vector<bool>> Vis;\nint n,m;\nbool check(int i,int j){\n    if(i>=n or j>=m){\n        return false;\n    }\n    return true;\n}\nstring res=\"\",ans=\"\";\nbool dfs(int x,int y){\n    if(x==n-1 && y==m-1){\n        return true;\n    }\n    if(Vis[x][y]){\n        return false;\n    }\n    bool p=false;\n    Vis[x][y]=true;\n    if(check(x+1,y) && a[x+1][y] == ans[x+y+1]){\n        p=dfs(x+1,y);\n        if(p){\n            res+=\"D\";\n            return true;\n        }\n    }\n    if(check(x,y+1) && a[x][y+1] == ans[x+y+1]){\n        p=dfs(x,y+1);\n        if(p){\n            res+=\"R\";\n            return true;\n        }\n    }\n    return false;\n}\nvoid solve()\n{\n    cin >> n >> m;\n    a.clear(),Vis.clear();\n    a.resize(n);\n    Vis.resize(n);\n    rep(i,0,n){\n        a[i].resize(m);\n        Vis[i].resize(m);\n        rep(j,0,m){\n            Vis[i][j]=false;\n            cin >> a[i][j];\n        }\n    }\n    res=\"\",ans=\"\";\n    vector <pair<int,int>> curr;\n    curr.pb({0,0});\n    for(int i=0;i<n+m-1;i++){\n        char mn='Z';\n        for(auto j:curr){\n            mn=min(mn,a[j.F][j.S]);\n        }\n        vector<pair<int,int>> curr2;\n        for(auto j:curr){\n            if(a[j.F][j.S]==mn){\n                int x=j.F,y=j.S;\n                if(check(x+1,y)){\n                    curr2.pb({x+1,y});\n                }\n                if(check(x,y+1)){\n                    curr2.pb({x,y+1});\n                }\n            }\n        }\n        curr=curr2;\n        ans+=mn;\n    }\n    dfs(0,0);\n    reverse(all(res));\n    cout << res << endl;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int tests=1;\n    cin>> tests;\n    int cn=0;\n    while(tests--)\n    {\n        cn++;\n        cout << \"Case #\" << cn <<\": \";\n        solve();\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477665,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "1583809",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599977517,
        "updated_at_ms": 1599978717,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:03:35.444Z",
        "__v": 0
    },
    {
        "_id": "5f60674e468ccc0964b0c3db",
        "submission_code": "import sys\n#import math.pow\nMAX = 1000000\nprefix =[0]*(MAX + 1) \ndef buildPrefix(): \n    prime = [1]*(MAX + 1) \n    p = 2\n    while(p * p <= MAX):  \n        if (prime[p] == 1): \n            i = p * 2\n            while(i <= MAX): \n                prime[i] = 0\n                i += p \n        p+=1\n    for p in range(2,MAX+1):  \n        prefix[p] = prefix[p - 1] \n        if (prime[p]==1): \n            prefix[p]+=1\ndef query(L, R): \n    return prefix[R]-prefix[L - 1] \nt=int(input())\nbuildPrefix()\nfor i in range(t):\n    n=int(sys.stdin.readline())\n    a=query(1,n)-1\n    p=(int)(1e9+7)\n    sys.stdout.write(str(pow(2,a,p))+'\\n')",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477634,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4674163",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977464,
        "updated_at_ms": 1599984664,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:03:42.458Z",
        "__v": 0
    },
    {
        "_id": "5f606757468ccc0964b0c3dc",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        BufferedReader br = new BufferedReader( new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine());\n        while(n!=0){\n            int t=Integer.parseInt(br.readLine());\n            int index=0;\n           \n            int fact=factorial(t);\n            int[] arr=new int[fact];\n            \n            for(int i=1;i<=fact;i++)\n                arr[index++]=i;\n            long count=0;\n            for (int i = 0; i < arr.length-1; i++)  {\n                for (int j = i + 1; j < arr.length; j++){\n                    if(gcd(arr[i],arr[j])==1  &&  (arr[i]*arr[j])==fact)\n                        count++;\n                }\n            }\n            System.out.println(count);\n            n--;\n        }\n    }\n    \n    static int factorial(int n) {\n    if (n>=1)\n        return n*factorial(n-1);\n    else\n        return 1;\n    }\n    \n    static int gcd(int x, int y) \n    {   \n        if (x==0 || y==0) \n        return 0; \n      \n        if (x==y) \n            return x; \n       \n        if (x>y) \n            return gcd(x-y,y); \n              \n        return gcd(x,y-x); \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477615,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675172",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "Likhita_AVL",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977432,
        "updated_at_ms": 1599979832,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:03:51.674Z",
        "__v": 0
    },
    {
        "_id": "5f606762468ccc0964b0c3dd",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 1e18\n#define ll  long long int\n#define deb(x) cout << #x << \" : \" << x << endl\nint main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    ll t;\n    scanf(\"%lld\\n\",&t);\n    ll ti=1;\n    while(t--){\n        ll n,m;\n        scanf(\"%lld %lld\\n\",&n,&m);/*\n        printf(\"%lld %lld\\n\",n,m );*/\n        char arr[n][m];\n        string temp[n+1][m+1];\n        char dir[n+1][m+1];\n        ll i,j;\n        for(i=0;i<n;i++){\n            for(j=0;j<m;j++){\n                dir[i][j]='#';\n            }        \n            scanf(\"%s\\n\",arr[i]);\n        }\n/*        for(i=0;i<n;i++){\n            for(j=0;j<m;j++){\n                printf(\"%c\", arr[i][j]);\n            }\n            printf(\"\\n\");\n        }*/\n        vector<char> ans;\n        for(i=n-1;i>=0;i--){\n            for(j=m-1;j>=0;j--){\n                string ans = \"\";\n                if((i+1)<n){\n                    if(ans == \"\"){\n                        ans = temp[i+1][j];\n                        dir[i][j] = 'D';\n                    }\n                    else{\n                        if(ans > temp[i+1][j]){\n                            ans = temp[i][j];\n                            dir[i][j]='D';\n                        }\n                    }\n                }\n                if((j+1)<m){                    \n                    if(ans == \"\"){\n                        ans = temp[i][j+1];\n                        dir[i][j] = 'R';\n                    }\n                    else{\n                        if(ans > temp[i][j+1]){\n                            ans = temp[i][j+1];\n                            dir[i][j]='R';\n                        }\n                    }\n                }\n                temp[i][j]=arr[i][j];\n                temp[i][j]+=ans;\n            }\n        }\n        string fuck;\n        i=0;\n        j=0;\n        while(i<n && j<m && dir[i][j]!='#'){\n            fuck+=dir[i][j];\n            if(dir[i][j] == 'D'){\n                i++;\n            }\n            else{\n                j++;\n            }\n        }\n        printf(\"Case #%lld: %s\\n\",ti++,fuck.c_str());\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477614,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3651417",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599977431,
        "updated_at_ms": 1599982231,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:04:02.332Z",
        "__v": 0
    },
    {
        "_id": "5f60676b468ccc0964b0c3de",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define N 200005\n#define nl \"\\n\"\ntypedef long long ll;\nll mod=(1e9)+7;\nvoid solve()\n{\n    ll x[N],y[N],n,i,sumx=0,sumy=0,sqx=0,sqy=0,temp1,temp2;\n    cin>>n;\n    for(i=0;i<n;i++)\n    {\n        cin>>x[i]>>y[i];\n        sumx+=x[i];\n        sumy+=y[i];\n        sqx+=(x[i]*x[i]);\n        sqy+=(y[i]*y[i]);\n    }\n    ll ans=1e18,ind=-1;\n    for(i=0;i<n;i++)\n    {\n        temp1=(n*x[i]*x[i])+sqx-(2*x[i]*sumx);\n        temp2=(n*y[i]*y[i])+sqy-(2*y[i]*sumy);\n        temp1+=temp2;\n        if(temp1<ans)\n        {\n            ans=temp1;\n            ind=i;\n        }\n    }\n    cout<<x[ind]<<\" \"<<y[ind]<<nl;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    ll t=1;\n    cin>>t;\n    while(t--)\n    {\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477599,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9631447",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "bugs_overflow",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977409,
        "updated_at_ms": 1599977409,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:04:11.627Z",
        "__v": 0
    },
    {
        "_id": "5f606773468ccc0964b0c3df",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    static boolean iscoprime(double a,double b)\n    {\n        if(a==b)\n        {\n            return false;\n        }\n        else{\n            double sm=a;\n            double ln=b;\n            double div=0;\n            if(sm>ln)\n            {\n                sm=b;\n                ln=a;\n            }\n            // while(ln>sm)\n            // {\n            //     double rem = ln % sm;\n            //     if (rem == 0)\n            //     {\n            //         div = sm;\n            //         break;\n            //     }\n            //     else\n            //     {\n            //         ln = sm;\n            //         sm = rem;\n            //     }\n            // }\n            for(double i=1;i<=sm;i++)\n            {\n                if(sm%i==0 && ln%i==0)\n                {\n                    div=div+1;\n                }\n            }\n            if(div==1)\n            {\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        \n    }\n    static double factorial(double n)\n    {\n        double ret=1;\n        for(double i=1;i<=n;i++)\n        {\n            ret=ret*i;\n        }\n        return ret;\n    }\n    static double noofvalues(double a)\n    {\n        ArrayList<Double> lit = new ArrayList();// stores all the factors\n        double val=0;\n        for(double i=1;i<=(a/2);i++)\n        {\n            if(a%i==0)\n            {\n                    if(iscoprime(i,a/i))\n                    {\n                        if(!lit.contains(i)){\n                        lit.add(i);\n                        lit.add(a/i);\n                        val=val+1;\n                        }\n                    }\n            }\n        }\n        return val;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scn = new Scanner(System.in);\n        int notest=scn.nextInt();\n        double[] arr = new double[notest];\n        for(int i=0;i<notest;i++)\n        {\n            arr[i]=scn.nextDouble();\n        }\n        scn.close();\n        for(int i=0;i<notest;i++)\n        {\n            System.out.println(Math.round(noofvalues(factorial(arr[i]))));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477584,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4679580",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "160218733021CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977383,
        "updated_at_ms": 1599982183,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:04:19.847Z",
        "__v": 0
    },
    {
        "_id": "5f60677d468ccc0964b0c3e0",
        "submission_code": "#include <iostream>\n\n#include<cmath>\nusing namespace std;\nint main()\n{int t;\ncin>>t;\nfor(int z=0;z<t;z++){\n\tint n;\n        cin>>n;\n        int x[n],y[n],res[n];\n        for(int i=0;i<n;i++)\n        {\n            cin>>x[i]>>y[i];\n\n        }\n        for(int i=0;i<n;i++){\n\n            int sum=0;\n            for(int j=0;j<n;j++){\n                sum=sum+(pow((x[i]-x[j]),2.0)+pow((y[i]-y[j]),2.0));\n\n            }\n            res[i]=sum;}\n            int min=999999;\n            int res1;\n            for(int i=0;i<n;i++)\n        {\n            if(min>res[i])\n\n            {\n                min=res[i];\n           res1=i; }\n        }\n        cout<<x[res1]<<\" \"<<y[res1];\n\n\ncout<<\"\\n\";\n}\n\treturn 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477573,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "8372968",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "saishivamaddi2",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977367,
        "updated_at_ms": 1599977367,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:04:29.142Z",
        "__v": 0
    },
    {
        "_id": "5f606786468ccc0964b0c3e1",
        "submission_code": "for _ in range(int(input())):\n\n    n=int(input())\n\n    a=[]\n\n    b=[]\n\n    m=10000\n\n    for i in range(n):\n\n        x,y=map(int,input().split())\n\n        a.append(x)\n        b.append(y)\n\n    for i in range(n):\n\n        x=a[i]\n\n        y=b[i]\n\n        s=0\n\n        for j in range(n):\n\n            xx=x-a[j]\n\n            yy=y-b[j]\n\n            s=s+xx**2+yy**2\n\n        if s<m:\n\n                m=s\n\n                f=x\n\n                p=y\n\n    print(f,p)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477564,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7435030",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Navaneeth__45",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977351,
        "updated_at_ms": 1599977351,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Runtime Error\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:04:38.454Z",
        "__v": 0
    },
    {
        "_id": "5f60678c468ccc0964b0c3e2",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 1e18\n#define ll  long long int\n#define deb(x) cout << #x << \" : \" << x << endl\nint main(){\n    ll t;\n    cin >> t;\n    ll ti=1;\n    while(t--){\n        ll n,m;\n        cin >> n >> m;\n        ll arr[n][n];\n        ll i,j;\n        for(i=0;i<n;i++){\n            for(j=0;j<n;j++){\n                arr[i][j]=1;\n            }\n        }\n        for(i=0;i<m;i++){\n            ll x,y;\n            cin >> x >> y ;\n            x--;\n            y--;\n            arr[x][y]=0;\n        }\n        ll a=0;\n        for(i=0;i<n;i++){\n            for(j=(i%2);j<n;j+=2){\n                a += arr[i][j];\n            }\n        }\n        ll b=0;\n        for(i=0;i<n;i++){\n            for(j=(1 - (i%2));j<n;j+=2){\n                b += arr[i][j];\n            }\n        }\n        cout << \"Case #\"<<ti++<< \": \" << max(a,b) << endl;\n\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477555,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "3651417",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599977334,
        "updated_at_ms": 1599977334,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:04:44.807Z",
        "__v": 0
    },
    {
        "_id": "5f606795468ccc0964b0c3e3",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    static class Pair{\n        int ind1;\n        int ind2;\n        Pair(int i,int j){\n            ind1 = i;\n            ind2 = j;\n        }\n    }\n    public static void main(String[] args) throws IOException {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int T = Integer.parseInt(br.readLine().trim());\n        while(T-- >0){\n            int n = Integer.parseInt(br.readLine().trim());\n            double min = Double.MAX_VALUE;\n            long minx=0,miny=0;\n            int xi[] = new int[n];\n            int yi[] = new int[n];\n            for(int i=0;i<n;i++){\n                String s[] = br.readLine().trim().split(\"\\\\s+\");\n                xi[i] = Integer.parseInt(s[0]);\n                yi[i] = Integer.parseInt(s[1]);\n            }\n            HashMap<Pair,Double> h = new HashMap<Pair,Double>();\n            for(int i=0;i<n;i++){\n                int x = xi[i];\n                int y = yi[i];\n                double res = 0;\n                for(int j=0;j<n;j++){\n                    Pair p2 = new Pair(j,i);\n                    if(!h.containsKey(p2)){\n                        res = res + Math.pow((x - xi[j]),2) + Math.pow((y - yi[j]),2);\n                        h.put(p2,res);\n                    }\n                    else{\n                        res = h.get(p2);\n                    }\n                }\n                if(res < min){\n                    min = res;\n                    minx = x;\n                    miny = y;\n                }\n            }\n            /*Arrays.sort(xi);\n            Arrays.sort(yi);\n            minx = xi[(n-1)/2];\n            miny = yi[(n-1)/2];*/\n            System.out.println(minx+\" \"+miny);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477543,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5773737",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "lakshmimanasamvs",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977319,
        "updated_at_ms": 1599982119,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:04:53.733Z",
        "__v": 0
    },
    {
        "_id": "5f60679d468ccc0964b0c3e4",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\nint t;\n        Scanner sc = new Scanner(System.in);\n        t= sc.nextInt();\n        while(t>0){\n            int n= sc.nextInt();\n            int a[] = new int[n];\n            int b[] = new int[n];\n            for(int i=0;i<n;i++){\n                a[i]=sc.nextInt();\n                b[i]=sc.nextInt();\n            }\n            int k=0;\n            int sum=0;\n            int min=0;\n            int c=0;\n            int d=0;\n            while(k<n){\n                sum=0;\n                for(int j=0;j<n;j++){\n                    int x=(a[k]-a[j])*(a[k]-a[j]);\n                    int y=(b[k]-b[j])*(b[k]-b[j]);\n                    sum=sum+(x+y);\n\n                }\n\n                if(k==0){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                if(sum<min){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                \n                k++;\n            }\n            System.out.println(c+\" \"+d);\n            t--;\n        }    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477539,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9686060",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "kedharnathsonu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977315,
        "updated_at_ms": 1599979715,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:05:01.393Z",
        "__v": 0
    },
    {
        "_id": "5f6067a4468ccc0964b0c3e5",
        "submission_code": "from math import *\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    l = []\n    result = []\n    for i in range(n):\n        l.append([int(i) for i in input().split(\" \")])\n    \n    for i in range(len(l)):\n        x,y = l[i]\n        sum = 0\n        for j in range(n):\n            sum += pow(x-l[j][0],2) + pow(y-l[j][1],2)\n        result.append(sum)\n    k = min(result)\n    for i in range(n):\n        if result[i] == k:\n            print(l[i][0],l[i][1],sep=\" \")\n            break\n    \n    \n    \n    \n    \n    \n        \n            \n    \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477525,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4235687",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733011CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977292,
        "updated_at_ms": 1599977292,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:05:08.868Z",
        "__v": 0
    },
    {
        "_id": "5f6067ac468ccc0964b0c3e6",
        "submission_code": "import sys\n#import math.pow\nMAX = 1000000\nprefix =[0]*(MAX + 1) \ndef buildPrefix(): \n    prime = [1]*(MAX + 1) \n    p = 2\n    while(p * p <= MAX):  \n        if (prime[p] == 1): \n            i = p * 2\n            while(i <= MAX): \n                prime[i] = 0\n                i += p \n        p+=1\n    for p in range(2,MAX+1):  \n        prefix[p] = prefix[p - 1] \n        if (prime[p]==1): \n            prefix[p]+=1\ndef query(L, R): \n    return prefix[R]-prefix[L - 1] \nt=int(input())\nbuildPrefix()\nfor i in range(t):\n    n=int(sys.stdin.readline())\n    a=query(1,n)-1\n    p=(int)(1e9+7)\n    sys.stdout.write(str(pow(2,a,p))+'\\n')",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477519,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4674163",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977287,
        "updated_at_ms": 1599983287,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:05:16.756Z",
        "__v": 0
    },
    {
        "_id": "5f6067b2468ccc0964b0c3e7",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define sz(x) (int)(x).size()\n#define all(x) x.begin(), x.end()\n#define itn int\nconst int mod = 1000000007,maxn = 3000001;\n\nll powmod(ll a,ll b) {ll res=1; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\nll fac[maxn];\n\nll C(int a, int b){\n    ll ans = fac[a]*1ll*powmod(fac[b],mod-2); ans %=mod;\n    ans = (ans*1ll*powmod(fac[a-b],mod-2))%mod;\n    return ans;\n}\n\nint main(){\n    ios_base::sync_with_stdio(false); cin.tie(NULL); \n    int t;\n    cin>>t;\n    fac[0] = 1; fac[1]=1;\n    for(int i=2;i<maxn;++i){\n        fac[i] = (fac[i-1]*i)%mod;\n    }\n    while(t--){\n        int x,y,x1,x2,y1,y2;\n        cin >> x >> y >> x1 >> y1 >> x2 >> y2;\n        ll ans = C(x+y,x),a = C(x1+y1,x1),b=C(x2+y2,x2);\n        ll k = (C(x-x1+y-y1,x-x1)*1ll*a)%mod , q = (C(x-x2+y-y2,x-x2)*1ll*b)%mod;\n        ans = (ans-k-q)%mod;\n        ans = (ans+mod)%mod;\n        a = (a*1ll*C(x2-x1+y2-y1,x2-x1))%mod; a = (a*1ll*C(x-x2+y-y2,x-x2))%mod;\n        ans = (ans + a)%mod;\n        cout << ans << '\\n';\n        \n      /*  ll ans = p2[x+y-1],a = p2[x1+y1-1],b=p2[x2+y2-1];\n        ll k = (p2[-x1+x-y1+y-1]*1ll*a)%mod , q = (p2[-x2+x-y2+y-1]*1ll*b)%mod;\n        ans = (ans-k-q)%mod;\n        ans = (ans+mod)%mod;\n        a = (a*1ll*p2[x2-x1+y2-y1-1])%mod; a = (a*1ll*q)%mod;\n        ans = (ans + a)%mod;\n        cout << ans << '\\n';*/\n    }\n  return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477499,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "6937721",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "ak821",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599977259,
        "updated_at_ms": 1599977259,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:05:22.797Z",
        "__v": 0
    },
    {
        "_id": "5f6067bb468ccc0964b0c3e8",
        "submission_code": "import math  \ndef cop(a):    \n    l=0\n    for i in range(1,a+1):\n        for j in range(i,a+1):\n            if i*j==a and i!=j:\n                g=math.gcd(i,j)\n                if g==1:\n                    l+=1\n    print(l)\nT=int(input()) \nfor t in range(T):\n    n=math.factorial(int(input()))\n    cop(n)\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477477,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4923124",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "ashrutha",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977222,
        "updated_at_ms": 1599977222,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:05:31.913Z",
        "__v": 0
    },
    {
        "_id": "5f6067c4468ccc0964b0c3e9",
        "submission_code": "#include<bits/stdc++.h>\n#define FIO                      \\\n    ios::sync_with_stdio(false); \\\n    cin.tie(0);                  \\\n    cout.tie(0);\n#define OJ \\\n    freopen(\"input1.txt\", \"r\", stdin); \\\n    freopen(\"output1.txt\", \"w\", stdout);\nusing namespace std;\n\n\nint f[100], expo[100],len=-1;\nvoid primeFactorization(int num){\n\tint d=2;\n\t\n\t// Untill Not Prime (num value)\n\twhile(num>1 && d*d <= num){\n\t\tint k=0;\n\t\twhile(num%d ==0){\n\t\t\tk++;\n\t\t\tnum/=d;\n\t\t}\n\t\tif(k>0){\n\t\t\tlen++;\n\t\t\tf[len]=d;\n\t\t\texpo[len]=k;\n\t\t\t\n\t\t}\n\t\td++;\n\t}\n\t\n\t// If Prime Number( num value ) Found At Last \n\tif(num>1){\n\t\tlen++;\n\t\tf[len]=num;\n\t\texpo[len]=1;\n\t}\n\t\n}\nint fact(int n){\n\tint f=1;\n\tfor (int i = 1; i <= n; ++i) {\n            f *= i;\n    }\n    return f;\n}\n\nint main(){\n\t// FIO;OJ;\n    FIO;\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tint n;\n\t\tcin>>n;\n\t\tint val = fact(n);\n\t\tlen=-1;\n\t\tprimeFactorization(val);   \n\t\t\n\t\t//  For Base case\n\t\tint res=1;\n\n        res +=(len);\n        cout<<(res % 1000000007)<<endl; \t\n\t}\n\treturn 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477464,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4557538",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "prashanth_007",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977196,
        "updated_at_ms": 1599977196,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:05:40.107Z",
        "__v": 0
    },
    {
        "_id": "5f6067ca468ccc0964b0c3ea",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint fact(int a);\nint* factors(int x);\nint ans(int a,int* fact,int x);\nint coprime(int x, int y);\nint gcd(int a,int b);\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int t;\n        int i,j,n;\n        int factorial;\n    scanf(\"%d\",&t);\n    \n        for(i=0;i<t;i++){\n            int *b;\n            \n            scanf(\"%d\",&n);\n            factorial=fact(n);\n            b=factors(factorial);\n            for(j=0;b[j]!='\\0';j++);\n            int x=ans(j,b,factorial);\n            printf(\"%d\\n\",x);\n        }\n    return 0;\n}\nint fact(int a){\n        int f=1;\n        int i;\n        for(i=a;i>0;i--){\n            f=f*i;\n        }\n        return f;\n    }\nint* factors(int x){\n    int num=1;\n    static int bh[100];\n    int i=0;\n    while(num<=x){\n        if(x%num==0){\n            bh[i]=num;\n            i++;\n        }\n        num++;\n    }\n    return bh;\n    \n}\nint ans(int a,int* fact,int x){\n    int count=0;\n    for(int i=0;i<a-1;i++){\n        for(int j=i+1;j<a;j++){\n            if((coprime(fact[i],fact[j]))&&(fact[i]*fact[j]==x)){\n                count++;\n            }\n        }\n    }\n    return count;\n    \n}\nint coprime(int x, int y){\n    if(gcd(x,y)==1)\n    return 1;\n    else\n        return 0;\n}\nint gcd(int a,int b){\n    if(a==0||b==0)\n        return 0;\n    if(a==b)\n        return a;\n    if(a>b)\n        return gcd(a-b,a);\n    return gcd(a,b-a);\n        \n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477463,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6570364",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "bhargavikalyani2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977196,
        "updated_at_ms": 1599978396,
        "misc_notes": "[\"Success\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T07:05:46.349Z",
        "__v": 0
    },
    {
        "_id": "5f6067d4468ccc0964b0c3eb",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n#define ll long long\nbool cmp(pair<ll,ll> A,pair<ll,ll> B){\n    if(A.first!=B.first)\n        return A.first<B.first;\n    return A.second<B.second;\n}\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ll t;\n    cin>>t;\n    while(t--){\n        ll n;\n        cin>>n;\n        vector<pair<ll,ll>> v(n);\n        for(ll i=0;i<n;i++){\n            ll x,y;\n            cin>>x>>y;\n            v[i]={x,y};\n        }\n        sort(v.begin(),v.end(),cmp);\n        if(n%2){\n            cout<<v[n/2].first<<\" \"<<v[n/2].second<<\"\\n\";\n        }\n        else{\n            cout<<v[n/2-1].first<<\" \"<<v[n/2-1].second<<\"\\n\";\n        }\n        // for(auto i:v)\n        //     cout<<i.first<<\" \"<<i.second<<\"\\n\";\n        // cout<<\"\\n\";\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477458,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2892432",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "17H51A05M7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599977189,
        "updated_at_ms": 1599977189,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:05:56.743Z",
        "__v": 0
    },
    {
        "_id": "5f6067dc468ccc0964b0c3ec",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nlong long SieveOfEratosthenes(long long n) \n{ \n    long long c=0;\n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n    for (long long p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        {  \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n    for (int p=2; p<=n; p++) \n    { if (prime[p]) \n          c=c%m+1%m;}\n    return c;\n} \nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n        \n    \nios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long n;\n        scanf(\"%lld\",&n);\n        long long c=0;\n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n    for (long long p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        {  \n            for (long long i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n    for (long long  p=2; p<=n; p++) \n    { if (prime[p]) \n          c=c%m+1%m;}\n        printf(\"%lld\",((long long)pow(2,c-1))%m);\n            printf(\"\\n\");\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477456,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977182,
        "updated_at_ms": 1599983182,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:06:04.982Z",
        "__v": 0
    },
    {
        "_id": "5f6067e6468ccc0964b0c3ed",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n         Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int count=0;\n            double fact=1;\n            for(int j=2;j<=n;j++)\n                fact=fact*j;\n            if(fact==2)\n                System.out.println(1);\n            else\n            {\n                for(int k=1;k<fact/2;k++)\n                {\n                    if(fact%k==0)\n                    {\n                        double h=fact/k;\n                        h=h+k;\n                        int cnt=0;\n                        for(int l=2;l<h/2;l++)\n                        {\n                            if(h%l==0)\n                            {\n                                cnt=1;\n                                break;\n                            }\n                        }\n                        if(cnt==0)\n                            count=count+1;\n                    }\n                  }\n             System.out.println(count);\n            }\n            }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477455,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977181,
        "updated_at_ms": 1599981981,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:06:14.706Z",
        "__v": 0
    },
    {
        "_id": "5f6067ec468ccc0964b0c3ee",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0||a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=1;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477448,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977172,
        "updated_at_ms": 1599993972,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:06:20.340Z",
        "__v": 0
    },
    {
        "_id": "5f6067f2468ccc0964b0c3ef",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0||a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=1;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477431,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977139,
        "updated_at_ms": 1599992739,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:06:26.650Z",
        "__v": 0
    },
    {
        "_id": "5f6067fc468ccc0964b0c3f0",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nlong long SieveOfEratosthenes(long long n) \n{ \n    long long c=0;\n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n    for (long long p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        {  \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n    for (int p=2; p<=n; p++) \n    { if (prime[p]) \n          c=c%m+1%m;}\n    return c;\n} \nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        long long n;\n        scanf(\"%lld\",&n);\n        long long c=0;\n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n    for (long long p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        {  \n            for (long long i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n    for (long long  p=2; p<=n; p++) \n    { if (prime[p]) \n          c=c%m+1%m;}\n        printf(\"%lld\",((long long)pow(2,c-1))%m);\n            printf(\"\\n\");\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477409,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977084,
        "updated_at_ms": 1599981884,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:06:36.733Z",
        "__v": 0
    },
    {
        "_id": "5f606822468ccc0964b0c3f1",
        "submission_code": "#include<bits/stdc++.h>\n#define ll  int\n#define db long double \n#define ull unsigned long long int\n// #define mp make_pair\n#define F first\n#define S second\n#define pb push_back\n#define rep(i,a,b)  for(ll i=a;i<=b;i++)\n#define all(a) a.begin(),a.end()\n#define Nmax 1000005\n// #define INF 10000000000000\n#define MOD 1000000007\n#define MAXN 200005\n \nusing namespace std;\n\n// ll a[200005];\nchar matrix[501][501];\n\nint main()\n{\n        ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int tests=1;\n    cin>>tests;\n    // scanf(\"%d\",&tests);\n    int t=1;\n    \n    while(tests--)\n    {\n        ll i,j,n,m;\n        // scanf(\"%lld%lld\",&n,&m);\n        cin>>n>>m;\n        rep(i,1,n)\n        {\n            string s;\n            cin>>s;\n            rep(j,1,m)\n            {\n                matrix[i][j]=s[j-1];\n            }\n            // cout<<s<<\"\\n\";\n        }\n\n        string dp[n+1][m+1];\n        // vector<vector<string>> dp(n+1,vector<string>(m+1,\"\"));\n        string ans[n+1][m+1];\n        ans[1][1]=\"\";\n        dp[1][1]=to_string(matrix[1][1]);\n        // cout<<to_string(matrix[1][1]);\n        // if(\"DS\"<\"DZ\") cout<<\"yooyo\"<<\"\\n\";\n        rep(i,1,n)\n        {\n            rep(j,1,m)\n            {\n                if(i==1 && j==1) continue;\n                if(i==1)\n                {\n                    dp[i][j]=dp[i][j-1]+to_string(matrix[i][j]);\n                    ans[i][j]=ans[i][j-1]+\"R\";\n                }\n                else if(j==1)\n                {\n                    dp[i][j]=dp[i-1][j]+to_string(matrix[i][j]);\n                    ans[i][j]=ans[i-1][j]+\"D\";\n                }\n                else\n                {\n                    if(dp[i-1][j]<dp[i][j-1])\n                    {\n                        dp[i][j]=dp[i-1][j]+to_string(matrix[i][j]);\n                        ans[i][j]=ans[i-1][j]+\"D\";\n                    }\n                    else if(dp[i-1][j]>dp[i][j-1])\n                    {\n                        dp[i][j]=dp[i][j-1]+to_string(matrix[i][j]);\n                        ans[i][j]=ans[i][j-1]+\"R\";\n                    }\n                    else\n                    {\n                        if(ans[i][j-1]>=ans[i-1][j])\n                        {\n                            dp[i][j]=dp[i-1][j]+to_string(matrix[i][j]);\n                            ans[i][j]=ans[i-1][j]+\"D\";\n                        }\n                        else\n                        {\n                            dp[i][j]=dp[i][j-1]+to_string(matrix[i][j]);\n                            ans[i][j]=ans[i][j-1]+\"R\";\n                        }\n                    }\n                }\n            }\n        }\n\n        // rep(i,1,n)\n        // {\n        //     rep(j,1,m)\n        //     {\n        //         cout<<i<<\" \"<<j<<\"-->\"<<dp[i][j]<<\"\\n\";\n        //     }\n        // }\n\n        cout<<\"Case #\"<<t<<\": \"<<ans[n][m]<<\"\\n\";\n        t++;\n    }\n\n    return 0;\n}\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477406,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3583145",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "Ragnar_7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599977077,
        "updated_at_ms": 1599979477,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:07:14.563Z",
        "__v": 0
    },
    {
        "_id": "5f60682c468ccc0964b0c3f2",
        "submission_code": "import math as m\ndef gcd(a,b): \n      \n    # Everything divides 0  \n    if (b == 0): \n         return a \n    return gcd(b,a%b) \nfor i in range(int(input())):\n    n=int(input())\n    if(n==1 or n==2):\n        print(1)\n    else:\n        ans=1\n        for i in range(2,n+1):\n            ans*=i\n        c=0    \n        #print(ans)\n        for i in range(1,int(m.sqrt(ans))+1):\n            if(ans%i==0):\n                #print(i)\n                if(gcd(i,ans//i)==1):\n                    c+=1\n        print(c)            \n            ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477404,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5796840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977072,
        "updated_at_ms": 1599977072,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:07:24.071Z",
        "__v": 0
    },
    {
        "_id": "5f60687f50731f1064908b20",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint fact(int a);\nint* factors(int x);\nint ans(int a,int* fact,int x);\nint coprime(int x, int y);\nint gcd(int a,int b);\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int t;\n        int i,j,n;\n        int factorial;\n    scanf(\"%d\",&t);\n    \n        for(i=0;i<t;i++){\n            int *b;\n            \n            scanf(\"%d\",&n);\n            factorial=fact(n);\n            b=factors(factorial);\n            for(j=0;b[j]!='\\0';j++);\n            int x=ans(j,b,factorial);\n            printf(\"%d\\n\",x);\n        }\n    return 0;\n}\nint fact(int a){\n        int f=1;\n        int i;\n        for(i=a;i>0;i--){\n            f=f*i;\n        }\n        return f;\n    }\nint* factors(int x){\n    int num=1;\n    static int bh[100];\n    int i=0;\n    while(num<=x){\n        if(x%num==0){\n            bh[i]=num;\n            i++;\n        }\n        num++;\n    }\n    return bh;\n    \n}\nint ans(int a,int* fact,int x){\n    int count=0;\n    for(int i=0;i<a-1;i++){\n        for(int j=i+1;j<a;j++){\n            if((coprime(fact[i],fact[j]))&&(fact[i]*fact[j]==x)){\n                count++;\n            }\n        }\n    }\n    return count;\n    \n}\nint coprime(int x, int y){\n    if(gcd(x,y)==1)\n    return 1;\n    else\n        return 0;\n}\nint gcd(int a,int b){\n    if(a==0||b==0)\n        return 0;\n    if(a==b)\n        return a;\n    if(a>b)\n        return gcd(a-b,a);\n    return gcd(a,b-a);\n        \n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477393,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6570364",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "bhargavikalyani2",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977055,
        "updated_at_ms": 1599977055,
        "misc_notes": "[\"Success\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T07:08:47.365Z",
        "__v": 0
    },
    {
        "_id": "5f60688a50731f1064908b21",
        "submission_code": "t=int(input())\ndef fun(x,y,tx,ty,dp):\n    mod=10**9+7\n    sx=0\n    sy=0\n    if(x>tx or y>ty):\n        return 0\n    if(x==tx and y==ty):\n        dp[x][y]=1\n        return 1\n    if(x+1<=tx and y<=ty):\n        if(dp[x+1][y]==-1):\n            dp[x+1][y]=fun(x+1,y,tx,ty,dp)\n        sx=dp[x+1][y]\n    if(x<=tx and y+1<=ty):\n        if(dp[x][y+1]==-1):\n            dp[x][y+1]=fun(x,y+1,tx,ty,dp)\n        sy=dp[x][y+1]\n    dp[x][y]=sx%mod+sy%mod\n    return dp[x][y]\nfor _ in range(t):\n    x,y,x1,y1,x2,y2=[int(j) for j in input().split()]\n    dp=[[-1 for i in range(y+1)]for j in range(x+1)]\n    dp[x1][y1]=0\n    dp[x2][y2]=0\n    print(fun(0,0,x,y,dp))\n    \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477385,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "5298342",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "18pa1a0511",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599977043,
        "updated_at_ms": 1599977043,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:08:58.213Z",
        "__v": 0
    },
    {
        "_id": "5f60689050731f1064908b22",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    public static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0||a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=1;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477384,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977041,
        "updated_at_ms": 1599991441,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:09:04.565Z",
        "__v": 0
    },
    {
        "_id": "5f60689950731f1064908b23",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nlong long SieveOfEratosthenes(long long n) \n{ \n    long long c=0;\n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n    for (long long p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        {  \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n    for (int p=2; p<=n; p++) \n    { if (prime[p]) \n          c=c%m+1%m;}\n    return c;\n} \nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin>>t;\n    while(t--)\n    {\n        long long n;\n        cin>>n;\n        long long c=0;\n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n    for (long long p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        {  \n            for (long long i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n    for (long long  p=2; p<=n; p++) \n    { if (prime[p]) \n          c=c%m+1%m;}\n        cout<<((long long)pow(2,c-1))%m<<\"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477367,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977011,
        "updated_at_ms": 1599980611,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:09:13.164Z",
        "__v": 0
    },
    {
        "_id": "5f6068a050731f1064908b24",
        "submission_code": "\ndef factors(n):\n    l = []\n    for i in range(1,n+1):\n        if(n % i) == 0:\n            l.append(i)\n    return l\n\ndef fact(n):\n    s = 1\n    t = 10000000007\n    for i in range(1,n+1):\n        s  = s%t * i\n    return s\ndef coprime(p,q):\n    pl = factors(p)\n    ql = factors(q)\n    return set(ql).intersection(set(pl)) == {1}\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    \n    val = fact(n)\n    fac = factors(val)\n    c = 0\n    for j in range(len(fac)):\n        for k in range(j+1,len(fac)):\n            if(fac[j] * fac[k] == val and coprime(fac[j],fac[k])): \n                c += 1\n            \n    print(c)\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477357,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7010132",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "karri_balu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599977000,
        "updated_at_ms": 1599978200,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:09:20.535Z",
        "__v": 0
    },
    {
        "_id": "5f6068ab50731f1064908b25",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n       \n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int k=0;k<t;k++){\n        int n=sc.nextInt();\n        ArrayList<Integer> x = new ArrayList<>();\n        ArrayList<Integer> y = new ArrayList<>();\n        ArrayList<Integer> f1 = new ArrayList<>();\n        for(int i=0;i<n;i++){\n            x.add(sc.nextInt());\n            y.add(sc.nextInt());\n        }\n       // System.out.println(x+\" \"+y);\n        int f=0;\n            int min1=9999999;\n        for(int j=1;j<=n;j++){\n            f=0;\n        for(int i=1;i<=n;i++){\n            f=f+(int)Math.pow(Math.abs(x.get(j-1)-x.get(i-1)),2)+(int)Math.pow(Math.abs(y.get(j-1)-y.get(i-1)),2);\n        }\n            if(f<min1){\n                min1=f;\n            }\n        //System.out.println(f);\n            f1.add(f);\n            \n        }\n        int ind=f1.indexOf(min1);\n        System.out.println(x.get(ind)+\" \"+y.get(ind));\n        }\n    }\n    }\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477354,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "8984118",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "hamsiniparimala1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976998,
        "updated_at_ms": 1599979398,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:09:31.081Z",
        "__v": 0
    },
    {
        "_id": "5f6068b350731f1064908b26",
        "submission_code": "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int,input().split())))    \n    \n    totxsum = 0\n    totysum = 0\n    totx2sum = 0\n    toty2sum = 0\n    \n    for i in range(n):\n        totxsum += arr[i][0]\n        totysum += arr[i][1]\n        totx2sum += arr[i][0]**2\n        toty2sum += arr[i][1]**2\n        \n    ans_x = arr[0][0]\n    ans_y = arr[0][1]\n    \n    x2 = arr[0][0]**2\n    y2 = arr[0][1]**2\n    x = arr[0][0]\n    y = arr[0][1]\n    \n    ans = abs(n*x2 + (totx2sum) - 2*x*(totxsum)) + abs(n*y2 + toty2sum - 2*y*totysum)\n    for i in range(1,n):\n        \n        x2 = arr[i][0]**2\n        y2 = arr[i][1]**2\n        x = arr[i][0]\n        y = arr[i][1]\n    \n        temp = abs(n*x2 + (totx2sum) - 2*x*(totxsum)) + abs(n*y2 + toty2sum - 2*y*totysum)\n        if temp<ans:\n            ans = temp\n            ans_x = arr[i][0]\n            ans_y = arr[i][1]\n    \n    print(ans_x,ans_y)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477328,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2923379",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "mahesh_8842",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976961,
        "updated_at_ms": 1599978161,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:09:39.890Z",
        "__v": 0
    },
    {
        "_id": "5f6068bc50731f1064908b27",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    \n    int x_i[10],y_i[10],fx[10];\n    int n,i,j;\n    int test_cases;\n    int min,minx,miny;\n    int fxv,x,y;\n    scanf(\"%d\",&test_cases);\n   \n    do\n    {\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&x_i[i],&y_i[i]);\n    }\n        \n    for(i=0;i<n;i++)\n    {\n        fxv=0;\n        x=x_i[i];\n        y=y_i[i];\n        for(j=0;j<n;j++)\n        {\n            if(j == i)\n                continue;\n            else\n                fxv+=pow((x-x_i[j]),2)+pow((y-y_i[j]),2);\n        }\n        fx[i]=fxv;\n    }\n    min=fx[0];\n    minx=x_i[0];\n    miny=y_i[0];\n    for(i=1;i<n;i++)\n    {\n        if(min>fx[i])\n        {\n            min=fx[i];\n            minx=x_i[i];\n            miny=y_i[i];\n        }\n    }\n    printf(\"%d %d\\n\",minx,miny);\n    test_cases--;\n    }while(test_cases != 0);\n    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477327,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5487386",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "devaduttsanka",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976960,
        "updated_at_ms": 1599980560,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:09:48.212Z",
        "__v": 0
    },
    {
        "_id": "5f6068c250731f1064908b28",
        "submission_code": "import sys\nimport math\nimport bisect\nmod=pow(10,9)+7\ninput=sys.stdin.readline\ndef binary_search(arr, low, high, x): \n\n    if high >= low: \n\n        mid = (high + low) // 2\n        if arr[mid] == x: \n            return mid \n\n        elif arr[mid] > x: \n            return binary_search(arr, low, mid - 1, x) \n        else:\n            return binary_search(arr, mid + 1, high, x) \n\n    else: \n        return -1\ndef gg():\n    n=pow(10,6)\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True):\n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    l1=[0,0]\n    c=0\n    for i in range(2,n+1):\n        if(prime[i]==True):\n            c=c+1\n        l1.append(c)\n    return l1\n        \ndef power(x, y, p) : \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0  \n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1 \n        x = (x * x) % p \n    return res \nl2=gg()\nfor _ in range(int(input())):\n    n=int(input())\n    if(n==1):\n        print(1)\n    else:\n        v=pow(2,l2[n]-1)%mod\n        print(v)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477320,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976943,
        "updated_at_ms": 1599984143,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:09:54.019Z",
        "__v": 0
    },
    {
        "_id": "5f6068c950731f1064908b29",
        "submission_code": "t=int(input())\nfor k in range(t):\n    n=int(input())\n    xi=[]\n    yi=[]\n    temp=0\n    tsum=0\n    xisum=0\n    yisum=0\n    xi2sum=0\n    yi2sum=0\n    cordinates=[]\n    for i in range(n):\n        t1,t2=map(int,input().split())\n        xisum=xisum+t1\n        yisum=yisum+t2\n        xi2sum=xi2sum+t1*t1\n        yi2sum=yi2sum+t2*t2\n        xi.append(t1)\n        yi.append(t2)\n    for i in range(n):\n        temp=n*pow(xi[i],2)+n*pow(yi[i],2)+xi2sum+yi2sum-2*xi[i]*xisum-2*yi[i]*yisum\n        if i==0:\n            tsum=temp\n            cordinates=[xi[i],yi[i]]\n        else:\n            if tsum>temp:\n                tsum=temp\n                cordinates=[xi[i],yi[i]]\n            elif tsum==temp:\n                if xi[i]+yi[i]<cordinates[0]+cordinates[1]:\n                    cordinates=[xi[i],yi[i]]\n                elif xi[i]+yi[i]==cordinates[0]+cordinates[1]:\n                    if xi[i]<cordinates[0]:\n                        cordinates=[xi[i],yi[i]]\n    print(cordinates[0],cordinates[1])\n            ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477319,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4674964",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "160218733110CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976943,
        "updated_at_ms": 1599978143,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:10:01.292Z",
        "__v": 0
    },
    {
        "_id": "5f6068d150731f1064908b2a",
        "submission_code": "#include<bits/stdc++.h>\n#define ll  int\n#define db long double \n#define ull unsigned long long int\n// #define mp make_pair\n#define F first\n#define S second\n#define pb push_back\n#define rep(i,a,b)  for(ll i=a;i<=b;i++)\n#define all(a) a.begin(),a.end()\n#define Nmax 1000005\n// #define INF 10000000000000\n#define MOD 1000000007\n#define MAXN 200005\n \nusing namespace std;\n\n// ll a[200005];\nchar matrix[501][501];\n\nint main()\n{\n        ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int tests=1;\n    cin>>tests;\n    // scanf(\"%d\",&tests);\n    int t=1;\n    \n    while(tests--)\n    {\n        ll i,j,n,m;\n        // scanf(\"%lld%lld\",&n,&m);\n        cin>>n>>m;\n        rep(i,1,n)\n        {\n            string s;\n            cin>>s;\n            rep(j,1,m)\n            {\n                matrix[i][j]=s[j-1];\n            }\n            // cout<<s<<\"\\n\";\n        }\n\n        // string dp[n+1][m+1];\n        vector<vector<string>> dp(n+1,vector<string>(m+1,\"\"));\n        string ans[n+1][m+1];\n        ans[1][1]=\"\";\n        dp[1][1]=to_string(matrix[1][1]);\n        // cout<<to_string(matrix[1][1]);\n        // if(\"DS\"<\"DZ\") cout<<\"yooyo\"<<\"\\n\";\n        rep(i,1,n)\n        {\n            rep(j,1,m)\n            {\n                if(i==1 && j==1) continue;\n                if(i==1)\n                {\n                    dp[i][j]=dp[i][j-1]+to_string(matrix[i][j]);\n                    ans[i][j]=ans[i][j-1]+\"R\";\n                }\n                else if(j==1)\n                {\n                    dp[i][j]=dp[i-1][j]+to_string(matrix[i][j]);\n                    ans[i][j]=ans[i-1][j]+\"D\";\n                }\n                else\n                {\n                    if(dp[i-1][j]<dp[i][j-1])\n                    {\n                        dp[i][j]=dp[i-1][j]+to_string(matrix[i][j]);\n                        ans[i][j]=ans[i-1][j]+\"D\";\n                    }\n                    else if(dp[i-1][j]>dp[i][j-1])\n                    {\n                        dp[i][j]=dp[i][j-1]+to_string(matrix[i][j]);\n                        ans[i][j]=ans[i][j-1]+\"R\";\n                    }\n                    else\n                    {\n                        if(ans[i][j-1]>=ans[i-1][j])\n                        {\n                            dp[i][j]=dp[i-1][j]+to_string(matrix[i][j]);\n                            ans[i][j]=ans[i-1][j]+\"D\";\n                        }\n                        else\n                        {\n                            dp[i][j]=dp[i][j-1]+to_string(matrix[i][j]);\n                            ans[i][j]=ans[i][j-1]+\"R\";\n                        }\n                    }\n                }\n            }\n        }\n\n        // rep(i,1,n)\n        // {\n        //     rep(j,1,m)\n        //     {\n        //         cout<<i<<\" \"<<j<<\"-->\"<<dp[i][j]<<\"\\n\";\n        //     }\n        // }\n\n        cout<<\"Case #\"<<t<<\": \"<<ans[n][m]<<\"\\n\";\n        t++;\n    }\n\n    return 0;\n}\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477313,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3583145",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "Ragnar_7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599976934,
        "updated_at_ms": 1599978134,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:10:09.995Z",
        "__v": 0
    },
    {
        "_id": "5f6068db50731f1064908b2b",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    int t,i;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int n,b=1,j,hcf=0,f=0,k;\n        scanf(\"%d\",&n);\n        for(i=1;i<=n;i++)\n        {\n            b=b*i;\n        }\n        for(i=0;i<b;i++)\n        {\n            for(j=0;j<b;j++)\n            {\n                if(i*j==b)\n                {\n                    int num1=i,num2=j;\n                    for(k=1;k<=num1;k++)\n     {\n      if(num1%k==0 && num2%k==0)\n      {\n       hcf = k;\n      }\n     }\n     if(hcf == 1)\n     {\n     f=f+1;\n     }\n\n                }\n                   \n            }\n        }\n        if(n==2)\n        {\n            printf(\"1\\n\");\n        }\n        else\n        {\n             printf(\"%d\",f);\n        printf(\"\\n\");\n        }\n       \n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477291,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9675923",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "manivardhanredd4",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976884,
        "updated_at_ms": 1599976884,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:10:19.618Z",
        "__v": 0
    },
    {
        "_id": "5f6068e150731f1064908b2c",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n   // Scanner sc=new Scanner(System.in);\n        int t,n,fact=1,count=0,cnt=0,h;\n        scanf(\"%d\",&t);\n        for(int i=0;i<t;i++)\n        {\n           \n            scanf(\"%d\",&n);\n            count=0;\n            fact=1;\n            for(int j=2;j<=n;j++)\n                fact=fact*j;\n            if(fact==2)\n                printf(\"1\\n\");\n            else\n            {\n                for(int k=1;k<fact/2;k++)\n                {\n                    if(fact%k==0)\n                    {\n                        h=fact/k;\n                        h=h+k;\n                        cnt=0;\n                        for(int l=2;l<h/2;l++)\n                        {\n                            if(h%l==0)\n                            {\n                                cnt=1;\n                                break;\n                            }\n                        }\n                        if(cnt==0)\n                            count=count+1;\n                    }\n                  }\n             printf(\"%d\\n\",count);\n            }\n            }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477289,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976882,
        "updated_at_ms": 1599980482,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:10:25.560Z",
        "__v": 0
    },
    {
        "_id": "5f6068ec50731f1064908b2d",
        "submission_code": "import math\ndef factorial(n): \n    if n < 0: \n        return 0\n    elif n == 0 or n == 1: \n        return 1\n    else: \n        fact = 1\n        while(n > 1): \n            fact = (fact*n)%(1000000007); \n            n -= 1\n    return fact \ndef coprime(n):\n    count=1\n    for i in range(2,int(math.sqrt(n))+1):\n        if(n%i==0):\n            while(n%i==0):\n                n//=i\n            if(n>1):\n                count+=1;\n    return count;\n\nn=int(input())\nlst=[]\nfor i in range(0, n): \n    ele = int(input()) \n    lst.append(ele)\nfor i in lst:\n    ans=coprime(factorial(int(i)))\n    print(ans)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477287,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6857762",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733036CSE",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976878,
        "updated_at_ms": 1599979278,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:10:36.003Z",
        "__v": 0
    },
    {
        "_id": "5f6068f150731f1064908b2e",
        "submission_code": "//author:satwik_bhv1\n#include<bits/stdc++.h>\n//datatypes\n#define ll long long\n#define ld long double\n//loops\n#define fr(i,z,n) for(ll i=z;i<n;i++)\n#define br(i,z,n) for(ll i=z;i>n;i--)\n//operations\n#define mp  make_pair\n#define ff  first\n#define ss  second\n#define pub push_back\n#define all(v) v.begin(),v.end()\n//map\n#define mi map<ll,ll>\n//vectors\n#define vi vector<ll>\n#define vpi vector<pair<ll,ll> >\n//constants\n#define pi 3.1415926535897932384626\n#define mod 1000000007\n#define MAXN 100001\n/*notes\n    Don't use inbuilt fun for power\n    Range of longlong=(-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 )\n    INT_MAX = 2147483647(aprox 2*10^10)\n    INT_MIN = -2147483648\n    LLONG_MAX = 9223372036854775807\n    LLONG_MIN = -9223372036854775808\n    __int128_t\n    __gcd is the function in built for hcf\n    priority queue is max heap by default\n    topological sort -> khan's algo use bfs and indegree of node\n    sssp(positive weighted edges) -> Dijkstras\n    apsp -> Floydwarshall\n    MST -> kruskal(DSU)\n*/\nusing namespace std;\n//functions\nll power(ll x,ll y){ll res=1;while(y){if(y%2){res*=x;}y/=2;x*=x;} return res;}\nll power(ll x,ll y,ll z){ll res=1;while(y){if(y%2){res=(res*x)%z;}y/=2;x=(x*x)%z;} return res;}\nvoid fast() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }\nbool sortbysec(const pair<ll, ll>& a, const pair<ll, ll>& b) { return (a.second > b.second); }\nll ceil(ll x,ll y){return (x/y)+(x%y!=0);}\nconst int dx[4] = { -1, 1, 0, 0};\nconst int dy[4] = {0, 0, -1, 1};\nint dxx[] = { -1, -1, -1, 0, 0, 1, 1, 1 };\nint dyy[] = { -1, 0, 1, -1, 1, -1, 0, 1 };\nvoid solve()\n{\n    ll n,m;\n    cin>>n>>m;\n    char arr[n][m];\n    ll vis[n][m];\n    fr(i,0,n)\n    {\n        fr(j,0,m)\n        {\n            cin>>arr[i][j];\n            vis[i][j]=0;\n        }\n    }\n    queue<pair<pair<ll,ll>,pair<string,string> > >q;\n    string s=\"\";\n    s+=arr[0][0];\n    q.push({{0,0},{s,\"\"}});\n    vector<pair<string,string> >v;\n    while(!q.empty())\n    {\n        auto par=q.front();\n        q.pop();\n        ll x=par.ff.ff;\n        ll y=par.ff.ss;\n        string ans=par.ss.ff;\n        string res=par.ss.ss;\n        vis[x][y]=1;\n        if(x==n-1&&y==m-1)\n        {\n            v.pub({ans,res});\n        }\n        char a='z',b='z';\n        if(x+1<n&&!vis[x+1][y])\n        {\n            a=arr[x+1][y];\n        }\n        if(y+1<m&&!vis[x][y+1])\n        {\n            b=arr[x][y+1];\n        }\n        if(a=='z'||b=='z')\n        {\n            if(a!='z')\n            {\n                ans+=a;\n                res+='D';\n                q.push({{x+1,y},{ans,res}});\n            }\n            else if(b!='z')\n            {\n                ans+=b;\n                res+='R';\n                q.push({{x,y+1},{ans,res}});\n            }\n        }\n        else if(a<b)\n        {\n            ans+=a;\n            res+='D';\n            q.push({{x+1,y},{ans,res}});\n        }\n        else if(a>b)\n        {\n            ans+=b;\n            res+='R';\n            q.push({{x,y+1},{ans,res}});\n        }          \n        else\n        {\n            q.push({{x,y+1},{ans+b,res+'R'}});\n            q.push({{x+1,y},{ans+a,res+'D'}});\n        }\n    }\n    string h=v[0].ff,w=v[0].ss;\n    fr(i,0,v.size())\n    {\n        if(v[i].ff<h)\n        {\n            h=v[i].ff;\n            w=v[i].ss;\n        }\n    }\n    fr(i,0,v.size())\n    {\n        if(v[i].ss<w&&v[i].ff==h)\n        {\n            w=v[i].ss;\n        }\n    }\n    cout<<w<<\"\\n\";\n}\nint main()\n{\n    fast();\n    ll t;\n    //t=1;\n    cin>>t;\n    fr(i,0,t)\n    {\n        cout<<\"Case #\"<<i+1<<\": \";\n        solve();\n    }\n}\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477286,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "2801145",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599976877,
        "updated_at_ms": 1599978077,
        "misc_notes": "[\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:10:41.738Z",
        "__v": 0
    },
    {
        "_id": "5f6068fb50731f1064908b2f",
        "submission_code": "import math\ndef primes(n):\n    arr=[j for j in range(1,n)]\n    ct=1\n    m=math.factorial(n)\n    for i in range(len(arr)):\n        d=m//arr[i]\n        if d%arr[i]!=0 and arr[i]%d!=0:\n            ct=ct+1\n    print(ct)\n            \n    \ntest=int(input())\nfor _ in range(test):\n    n=int(input())\n    primes(n)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477283,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4622965",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vision01",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976874,
        "updated_at_ms": 1599980474,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:10:51.770Z",
        "__v": 0
    },
    {
        "_id": "5f60690550731f1064908b30",
        "submission_code": "for t in range(int(input())):\n    n=int(input())\n    l=[]\n    for i in range(n):\n        a=list(map(int,input().split()))\n        l.append(a)\n    l.sort(key= lambda x: x[0]*x[0]+x[1]*x[1])\n    if n%2==1:\n        print(*l[n//2])\n    else:\n        s1=0\n        s2=0\n        for i in range(n):\n            s1+=(l[n//2][0]-l[i][0])**2+(l[(n//2)][1]-l[i][1])**2\n            s2+=(l[(n//2)-1][0]-l[i][0])**2+(l[(n//2)-1][1]-l[i][1])**2\n        \n        if s1<s2:\n            print(*l[n//2])\n        else:\n            print(*l[(n//2)-1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477276,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4674163",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976863,
        "updated_at_ms": 1599979263,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:11:01.091Z",
        "__v": 0
    },
    {
        "_id": "5f60690b50731f1064908b31",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    static boolean iscoprime(double a,double b)\n    {\n        if(a==b)\n        {\n            return false;\n        }\n        else{\n            double sm=a;\n            double ln=b;\n            double div=1;\n            if(sm>ln)\n            {\n                sm=b;\n                ln=a;\n            }\n            while(ln>sm)\n            {\n                double rem = ln % sm;\n                if (rem == 0)\n                {\n                    div = sm;\n                    break;\n                }\n                else\n                {\n                    ln = sm;\n                    sm = rem;\n                }\n            }\n            if(div==1)\n            {\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        \n    }\n    static double factorial(double n)\n    {\n        double ret=1;\n        for(double i=1;i<=n;i++)\n        {\n            ret=ret*i;\n        }\n        return ret;\n    }\n    static double noofvalues(double a)\n    {\n        ArrayList<Double> lit = new ArrayList();\n        double val=0;\n        for(double i=1;i<=(a/2);i++)\n        {\n            if(a%i==0)\n            {\n                    if(iscoprime(i,a/i))\n                    {\n                        if(!lit.contains(i)){\n                        lit.add(i);\n                        lit.add(a/i);\n                        val=val+1;\n                        }\n                    }\n            }\n        }\n        return val;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scn = new Scanner(System.in);\n        int notest=scn.nextInt();\n        double[] arr = new double[notest];\n        for(int i=0;i<notest;i++)\n        {\n            arr[i]=scn.nextDouble();\n        }\n        scn.close();\n        for(int i=0;i<notest;i++)\n        {\n            System.out.println(Math.round(noofvalues(factorial(arr[i]))));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477274,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4679580",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "160218733021CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976860,
        "updated_at_ms": 1599980460,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:11:07.744Z",
        "__v": 0
    },
    {
        "_id": "5f60691350731f1064908b32",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\n# define m 1000000007\nusing namespace std;\n/*code from gfg*/  \nlong long SieveOfEratosthenes(long long n) \n{ \n    long long c=0;\n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n    for (long long p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        {  \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n    for (int p=2; p<=n; p++) \n    { if (prime[p]) \n          c=c%m+1%m;}\n    return c;\n} \nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin>>t;\n    while(t--)\n    {\n        long long a;\n        cin>>a;\n          long long k=SieveOfEratosthenes(a);\n       // cout<<k<<\" \";\n        cout<<((long long)pow(2,k-1))%m<<\"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477267,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976837,
        "updated_at_ms": 1599979237,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:11:15.938Z",
        "__v": 0
    },
    {
        "_id": "5f60691c50731f1064908b33",
        "submission_code": "tc = int(input())\nfor TESTcases in range(tc):\n    n=int(input())\n    x=[]\n    y=[]\n    squaresX=0\n    squaresY=0\n    X=0\n    Y=0\n    a=[]\n    sum11=[]\n    a2=[]\n    for i in range(n):\n        x1,y1=map(int,input().split())\n        squaresX += x1*x1\n        squaresY += y1*y1\n        X += x1\n        Y += y1\n        a.append([x1,y1])\n    for i in a:\n        valx = i[0]\n        valy = i[1]\n        sum1 = 0\n        sum1 += n*valx*valx+squaresX-2*valx*X\n        sum1 += n*valy*valy+squaresY-2*valy*Y\n        sum11.append(sum1)\n    \n    f = min(sum11)\n    for i in range(n):\n        if(f==sum11[i]):\n            a2.append(a[i])\n    print(*min(a2))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477209,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5549332",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "Jayaprakashvenu1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976703,
        "updated_at_ms": 1599977903,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:11:24.949Z",
        "__v": 0
    },
    {
        "_id": "5f60692350731f1064908b34",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int count=0;\n            int fact=1;\n            for(int j=2;j<=n;j++)\n                fact=fact*j;\n            if(fact==2)\n                System.out.println(1);\n            else\n            {\n                for(int k=1;k<fact/2;k++)\n                {\n                    if(fact%k==0)\n                    {\n                        int h=fact/k;\n                        h=h+k;\n                       // System.out.print(k+\" \"+h+\" \");\n                        int cnt=0;\n                        for(int l=2;l<h/2;l++)\n                        {\n                            if(h%l==0)\n                            {\n                                cnt=1;\n                                break;\n                            }\n                        }\n                        if(cnt==0)\n                            count=count+1;\n                    }\n                   \n                }\n             System.out.println(count);\n            }\n            }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477206,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6637308",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "badiniswetha",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976699,
        "updated_at_ms": 1599976699,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:11:31.196Z",
        "__v": 0
    },
    {
        "_id": "5f60692950731f1064908b35",
        "submission_code": "T = int(input())\nfor _ in range(T):\n    n,m = list(map(int,input().split()))\n    board = []\n    for i in range(n):\n        board.append([1 for j in range(n)])\n\n    if m!=0:\n        for i in range(m):\n            x,y = list(map(int,input().split()))\n            board[x-1][y-1] = 0\n    c = 0\n    for i in range(n):\n        for j in range(n):\n            if i%2==0:\n                if i%2==0 and j%2==0 and board[i][j]==1:\n                    c+=1\n            else:\n                if i%2!=0 and j%2!=0 and board[i][j]==1:\n                    c+=1\n    print(\"Case #\"+str(_+1)+\": \"+str(c))\n            \n\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477195,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "8505024",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "sauravns",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599976667,
        "updated_at_ms": 1599976667,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:11:37.646Z",
        "__v": 0
    },
    {
        "_id": "5f60693450731f1064908b36",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n   // Scanner sc=new Scanner(System.in);\n        int t;\n        scanf(\"%d\",&t);\n        for(int i=0;i<t;i++)\n        {\n            int n;\n            scanf(\"%d\",&n);\n            int count=0,fact=1;\n            for(int j=2;j<=n;j++)\n                fact=fact*j;\n            if(fact==2)\n                printf(\"1\\n\");\n            else\n            {\n                for(int k=1;k<fact/2;k++)\n                {\n                    if(fact%k==0)\n                    {\n                        int h=fact/k;\n                        h=h+k;\n                        int cnt=0;\n                        for(int l=2;l<h/2;l++)\n                        {\n                            if(h%l==0)\n                            {\n                                cnt=1;\n                                break;\n                            }\n                        }\n                        if(cnt==0)\n                            count=count+1;\n                    }\n                  }\n             printf(\"%d\\n\",count);\n            }\n            }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477186,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976658,
        "updated_at_ms": 1599979058,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:11:48.181Z",
        "__v": 0
    },
    {
        "_id": "5f60693c50731f1064908b37",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <bits/stdc++.h>\n#include <algorithm>\nusing namespace std;\n/*code from gfg*/  \nlong long SieveOfEratosthenes(long long n) \n{ \n    // Create a boolean array \"prime[0..n]\" and initialize \n    // all entries it as true. A value in prime[i] will \n    // finally be false if i is Not a prime, else true.\n    int c=0;\n    bool prime[n+1]; \n    memset(prime, true, sizeof(prime)); \n  \n    for (int p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        { \n            // Update all multiples of p greater than or  \n            // equal to the square of it \n            // numbers which are multiple of p and are \n            // less than p^2 are already been marked.  \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n  \n    // Print all prime numbers \n    for (int p=2; p<=n; p++) \n    { if (prime[p]) \n          c++;}\n    return c;\n} \nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t;\n    cin>>t;\n    while(t--)\n    {\n        long long a;\n        cin>>a;\n          long long k=SieveOfEratosthenes(a);\n       // cout<<k<<\" \";\n        cout<<(long long)pow(2,k-1)<<\"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477184,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976654,
        "updated_at_ms": 1599977854,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:11:56.385Z",
        "__v": 0
    },
    {
        "_id": "5f60694650731f1064908b38",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int k=0;k<t;k++){\n        int n=sc.nextInt();\n        ArrayList<Integer> x = new ArrayList<>();\n        ArrayList<Integer> y = new ArrayList<>();\n        ArrayList<Integer> f1 = new ArrayList<>();\n        for(int i=0;i<n;i++){\n            x.add(sc.nextInt());\n            y.add(sc.nextInt());\n        }\n       // System.out.println(x+\" \"+y);\n        int f=0;\n        for(int j=1;j<=n;j++){\n            f=0;\n        for(int i=1;i<=n;i++){\n            f=f+(int)Math.pow(Math.abs(x.get(j-1)-x.get(i-1)),2)+(int)Math.pow(Math.abs(y.get(j-1)-y.get(i-1)),2);\n        }\n        //System.out.println(f);\n            f1.add(f);\n            \n        }\n        int ind=f1.indexOf(Collections.min(f1));\n        System.out.println(x.get(ind)+\" \"+y.get(ind));\n        }\n    }\n    }\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477178,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "8984118",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "hamsiniparimala1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976649,
        "updated_at_ms": 1599977849,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:12:06.011Z",
        "__v": 0
    },
    {
        "_id": "5f60694f50731f1064908b39",
        "submission_code": "#include<iostream>\n#include<vector>\n#include<map>\n#include<string>\n#include<stdio.h>\n#include<iterator>\n#include<stack>\n#include<queue>\n#include<set>\n#include<limits>\n#include<algorithm>\n#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 )\n#define all(v) begin(v),end(v)\n\nusing namespace std;\nusing ll = long long;\n\nll m = 1e9 + 7;\nll a[1000010];\n\n\n\nauto T() {\n    ll t;\n    cin>>t;\n    while(t--) {\n        int i;\n        cin>>i;\n        cout<<a[i]<<\"\\n\";\n    }\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    a[0]=0;\n    a[1]=0;\n    a[2]=1;\n    int n;\n    vector<bool> prime(1000011, true);\n    prime[0] = prime[1] = false;\n    for (ll i = 2; i <= 1000010; i++) {\n        if (prime[i] && i * i <= 1000010) {\n            for (ll j = i * i; j <= 1000010; j += i)\n                prime[j] = false;\n        }\n    }\n    for(int i=3;i<=1000000;i++) {\n        if(prime[i]) {\n            a[i] = 2*a[i-1];\n            a[i]%=m;\n        }\n        else {\n            a[i] = a[i-1];\n        }\n    }\n    T();\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477167,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4289507",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "praveen7777",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976622,
        "updated_at_ms": 1599976622,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:12:15.410Z",
        "__v": 0
    },
    {
        "_id": "5f60695550731f1064908b3a",
        "submission_code": "import sys\ndef fact(n):\n    if(n == 1):\n        return n\n    else:\n        return n*fact(n-1)\n\nt=sys.stdin.readline()\nt=int(t)\narr = []\nwhile t!=0:\n    ele = sys.stdin.readline()\n    arr.append(ele)\n    t-=1\n    \nfor n in arr:\n    num=fact(int(n))\n    c=0\n    for i in range(2, num + 1):\n        if(num % i == 0):\n            isprime = 1\n            for j in range(2, (i //2 + 1)):\n                if(i % j == 0):\n                    isprime = 0\n                    break\n            \n            if (isprime == 1):\n                c+=1\n    sys.stdout.write(str(pow(2,(c-1)))+'\\n')       ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477165,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675198",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Keerti159",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976621,
        "updated_at_ms": 1599977821,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:12:21.165Z",
        "__v": 0
    },
    {
        "_id": "5f60695e50731f1064908b3b",
        "submission_code": "import bisect \nimport math\ndef f(a,b,x,n):\n    v=0\n    for i in range(n):\n        v+=pow(abs(x[i][0]-a),2) + pow(abs(x[i][1]-b),2) \n    return v     \ndef find_ge(a, x):\n    i = bisect.bisect_left(a, x)\n    if i != len(a):\n        return i\n    else:\n        return -1\ndef find_le(a, x):\n    i = bisect.bisect_right(a, x)\n    if i:\n        return i-1\n    else:\n        return -1\nfor _ in range(int(input())):\n    n=int(input())\n    l1, l2, l3 = [], [], []\n    d1, d2 = {}, {}\n    x_s, y_s = 0, 0\n    for i in range(n):\n        x, y = map(int, input().split())\n        l1.append(x)\n        l2.append(y)\n        x_s += x\n        y_s += y\n        l3.append([x, y])\n        if x not in d1:\n            d1[x] = i\n        if y not in d2:\n            d2[y] = i\n    a = x_s//n \n    b = y_s//n \n    l1.sort()\n    l2.sort()\n    x1, x2 = find_ge(l1, a), find_le(l1, b)\n    y1, y2 = find_ge(l2, a), find_le(l2, b)\n    i1 = float('inf')\n    j1 = 0\n    if y2!=-1:\n        i1 = min(d2[l2[y2]], i1)\n    if x2!=-1:\n        i1 = min(d1[l1[x2]], i1)\n    if y1!=-1:\n        j1 = max(d2[l2[y1]], j1)\n    if x1!=-1:\n        j1 = max(d1[l1[x1]], j1)\n    ans = n\n    c = float('inf')\n    for i in range(i1, min(j1+1, n)):\n        t = f(l3[i][0], l3[i][1], l3, n)\n        if c>t:\n            c = t\n            ans = i\n    print(*l3[ans])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477160,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5862783",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Satya_raj887",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976604,
        "updated_at_ms": 1599977804,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Runtime Error\",\"Terminated due to timeout\",\"Runtime Error\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:12:30.789Z",
        "__v": 0
    },
    {
        "_id": "5f60696550731f1064908b3c",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        for(int i=0;i<n;i++)\n        {\n            int num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    public static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0||a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=1;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477159,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976602,
        "updated_at_ms": 1599989802,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:12:37.856Z",
        "__v": 0
    },
    {
        "_id": "5f60696d50731f1064908b3d",
        "submission_code": "def compute_hcf(x, y):\n    while(y):\n        x, y = y, x % y\n    return x\n\nt= int(input())\nfor t1 in range(t):\n    x=int(input())\n    n=1\n    p=0\n    for i in range(2,x+1):\n        n*=i\n    f=[]\n    for i in range(1, n+1):\n        if(n % i == 0):\n            for j in f:\n                if(i*j==n and compute_hcf(i,j)==1):\n                    p+=1\n            f.append(i)\n    print(p)\n    \n           \n        \n        \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477156,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5235288",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anudeep_kalitkar",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976597,
        "updated_at_ms": 1599978997,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:12:45.635Z",
        "__v": 0
    },
    {
        "_id": "5f60697850731f1064908b3e",
        "submission_code": "t = int(input())\nwhile t:\n    n = int(input())\n    mx=0\n    my=0\n    min=0\n    l=[]\n    for i in range(n):\n        l.append(list(map(int,input().split())))\n\n    for i in range(n):\n        f=0\n        for j in range(n):\n            f+=((l[i][0]-l[j][0])*(l[i][0]-l[j][0])+(l[i][1]-l[j][1])*(l[i][1]-l[j][1]))\n        if i==0:\n            mx=l[i][0]\n            my=l[i][1]\n            min = f\n        elif f<min:\n            mx=l[i][0]\n            my=l[i][1]\n            min = f\n    print(mx,my)\n    t-=1",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477151,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4613176",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330007_CSE_A",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976581,
        "updated_at_ms": 1599977781,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:12:56.220Z",
        "__v": 0
    },
    {
        "_id": "5f60698250731f1064908b3f",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    public static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0||a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=1;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477130,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976538,
        "updated_at_ms": 1599988538,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:13:06.015Z",
        "__v": 0
    },
    {
        "_id": "5f60698b50731f1064908b40",
        "submission_code": "import sys\nimport math\nimport bisect\nmod=pow(10,9)+7\ninput=sys.stdin.readline\ndef binary_search(arr, low, high, x): \n\n    if high >= low: \n\n        mid = (high + low) // 2\n        if arr[mid] == x: \n            return mid \n\n        elif arr[mid] > x: \n            return binary_search(arr, low, mid - 1, x) \n        else:\n            return binary_search(arr, mid + 1, high, x) \n\n    else: \n        return -1\ndef gg():\n    n=pow(10,5)\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True):\n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    l1=[0,0]\n    c=0\n    for i in range(2,n+1):\n        if(prime[i]==True):\n            c=c+1\n        l1.append(c)\n    return l1\n        \ndef power(x, y, p) : \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0  \n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1 \n        x = (x * x) % p \n    return res \nl2=gg()\nfor _ in range(int(input())):\n    n=int(input())\n    v=power(2,l2[n]-1,mod)\n    print(v)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477127,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976530,
        "updated_at_ms": 1599982530,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:13:15.742Z",
        "__v": 0
    },
    {
        "_id": "5f60699450731f1064908b41",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        BufferedReader br = new BufferedReader( new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine());\n        while(n!=0){\n            int t=Integer.parseInt(br.readLine());\n            Set<Integer> set1=new HashSet<>();\n            int index=0;\n           \n            int fact=factorial(t);\n            int[] arr=new int[fact];\n            \n            for(int i=1;i<=fact;i++)\n                arr[index++]=i;\n            int count=0;\n            for (int i = 0; i < arr.length-1; i++)  {\n                for (int j = i + 1; j < arr.length; j++){\n                    if(gcd(arr[i],arr[j])==1  &&  (arr[i]*arr[j])==fact)\n                        count++;\n                }\n            }\n            System.out.println(count);\n            n--;\n        }\n    }\n    \n    static int factorial(int n) {\n    if (n>=1)\n        return n*factorial(n-1);\n    else\n        return 1;\n    }\n    \n    static int gcd(int x, int y) \n    {   \n        if (x==0 || y==0) \n        return 0; \n      \n        if (x==y) \n            return x; \n       \n        if (x>y) \n            return gcd(x-y,y); \n              \n        return gcd(x,y-x); \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477121,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675172",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "Likhita_AVL",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976525,
        "updated_at_ms": 1599977725,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:13:24.668Z",
        "__v": 0
    },
    {
        "_id": "5f60699d50731f1064908b42",
        "submission_code": "//author:satwik_bhv1\n#include<bits/stdc++.h>\n//datatypes\n#define ll long long\n#define ld long double\n//loops\n#define fr(i,z,n) for(ll i=z;i<n;i++)\n#define br(i,z,n) for(ll i=z;i>n;i--)\n//operations\n#define mp  make_pair\n#define ff  first\n#define ss  second\n#define pub push_back\n#define all(v) v.begin(),v.end()\n//map\n#define mi map<ll,ll>\n//vectors\n#define vi vector<ll>\n#define vpi vector<pair<ll,ll> >\n//constants\n#define pi 3.1415926535897932384626\n#define mod 1000000007\n#define MAXN 100001\n/*notes\n    Don't use inbuilt fun for power\n    Range of longlong=(-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 )\n    INT_MAX = 2147483647(aprox 2*10^10)\n    INT_MIN = -2147483648\n    LLONG_MAX = 9223372036854775807\n    LLONG_MIN = -9223372036854775808\n    __int128_t\n    __gcd is the function in built for hcf\n    priority queue is max heap by default\n    topological sort -> khan's algo use bfs and indegree of node\n    sssp(positive weighted edges) -> Dijkstras\n    apsp -> Floydwarshall\n    MST -> kruskal(DSU)\n*/\nusing namespace std;\n//functions\nll power(ll x,ll y){ll res=1;while(y){if(y%2){res*=x;}y/=2;x*=x;} return res;}\nll power(ll x,ll y,ll z){ll res=1;while(y){if(y%2){res=(res*x)%z;}y/=2;x=(x*x)%z;} return res;}\nvoid fast() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }\nbool sortbysec(const pair<ll, ll>& a, const pair<ll, ll>& b) { return (a.second > b.second); }\nll ceil(ll x,ll y){return (x/y)+(x%y!=0);}\nconst int dx[4] = { -1, 1, 0, 0};\nconst int dy[4] = {0, 0, -1, 1};\nint dxx[] = { -1, -1, -1, 0, 0, 1, 1, 1 };\nint dyy[] = { -1, 0, 1, -1, 1, -1, 0, 1 };\nvoid solve()\n{\n    ll n,m;\n    cin>>n>>m;\n    char arr[n][m];\n    ll vis[n][m];\n    fr(i,0,n)\n    {\n        fr(j,0,m)\n        {\n            cin>>arr[i][j];\n            vis[i][j]=0;\n        }\n    }\n    queue<pair<pair<ll,ll>,pair<string,string> > >q;\n    string s=\"\";\n    s+=arr[0][0];\n    q.push({{0,0},{s,\"\"}});\n    vector<pair<string,string> >v;\n    while(!q.empty())\n    {\n        auto par=q.front();\n        q.pop();\n        ll x=par.ff.ff;\n        ll y=par.ff.ss;\n        string ans=par.ss.ff;\n        string res=par.ss.ss;\n        vis[x][y]=1;\n        if(x==n-1&&y==m-1)\n        {\n            v.pub({ans,res});\n        }\n        char a='z',b='z';\n        if(x+1<n&&!vis[x+1][y])\n        {\n            a=arr[x+1][y];\n        }\n        if(y+1<m&&!vis[x][y+1])\n        {\n            b=arr[x][y+1];\n        }\n        if(a=='z'||b=='z')\n        {\n            if(a!='z')\n            {\n                ans+=a;\n                res+='D';\n                q.push({{x+1,y},{ans,res}});\n            }\n            else if(b!='z')\n            {\n                ans+=b;\n                res+='R';\n                q.push({{x,y+1},{ans,res}});\n            }\n        }\n        else if(a<b)\n        {\n            ans+=a;\n            res+='D';\n            q.push({{x+1,y},{ans,res}});\n        }\n        else if(a>b)\n        {\n            ans+=b;\n            res+='R';\n            q.push({{x,y+1},{ans,res}});\n        }          \n        else\n        {\n            q.push({{x,y+1},{ans+b,res+'R'}});\n            q.push({{x+1,y},{ans+a,res+'D'}});\n        }\n    }\n    sort(all(v));\n    cout<<v[0].ss<<\"\\n\";\n}\nint main()\n{\n    fast();\n    ll t;\n    //t=1;\n    cin>>t;\n    fr(i,0,t)\n    {\n        cout<<\"Case #\"<<i+1<<\": \";\n        solve();\n    }\n}\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477120,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "2801145",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599976521,
        "updated_at_ms": 1599976521,
        "misc_notes": "[\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:13:33.867Z",
        "__v": 0
    },
    {
        "_id": "5f6069a850731f1064908b43",
        "submission_code": "#find the argmin\ndef value_f(cr):\n    f = []\n    for i in range(0,len(cr)):\n        x = cr[i][0]\n        y = cr[i][1]\n        temp = 0\n        for j in range(0,len(cr)):\n            xi = cr[j][0]\n            yi = cr[j][1]\n            temp += ((x-xi)**2) + ((y-yi)**2)\n        f.append((temp,x,y))\n    print(min(f)[1], min(f)[2])\n\n\nt = int(input())\nout = []\nfor i in range(t):\n    n = int(input())\n    cr = []\n    for j in range(n):\n        x, y = map(int, input().split())\n        cr.append([x,y])\n    value_f(cr)\n\n#printing the output    \n# for i in range(0,len(out)):\n#     print(out[i][0], out[i][1])\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477115,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7778720",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "itsabhihere",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976510,
        "updated_at_ms": 1599977710,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:13:44.209Z",
        "__v": 0
    },
    {
        "_id": "5f6069b050731f1064908b44",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint main() {    \n    int x_i[100],y_i[100],fx[100];\n    int n,i,j;\n    int test_cases;\n    int min,minx,miny;\n    int fxv,x,y;\n    scanf(\"%d\",&test_cases);   \n    do\n    {\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&x_i[i],&y_i[i]);\n    }\n        \n    for(i=0;i<n;i++)\n    {\n        fxv=0;\n        x=x_i[i];\n        y=y_i[i];\n        for(j=0;j<n;j++)\n        {\n            if(j == i)\n                continue;\n            else\n                fxv+=pow((x-x_i[j]),2)+pow((y-y_i[j]),2);\n        }\n        fx[i]=fxv;\n    }\n    min=fx[0];\n    minx=x_i[0];\n    miny=y_i[0];\n    for(i=1;i<n;i++)\n    {\n        if(min>fx[i])\n        {\n            min=fx[i];\n            minx=x_i[i];\n            miny=y_i[i];\n        }\n    }\n    printf(\"%d %d\\n\",minx,miny);\n    test_cases--;\n    }while(test_cases != 0);\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477111,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5487386",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "devaduttsanka",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976495,
        "updated_at_ms": 1599978895,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:13:52.137Z",
        "__v": 0
    },
    {
        "_id": "5f6069ba50731f1064908b45",
        "submission_code": "import math\nprime=[]\ndef isPrime(n) : \n    # Corner cases \n    if (n <= 1) : \n        return False\n    if (n <= 3) : \n        return True\n   \n    # This is checked so that we can skip  \n    # middle five numbers in below loop \n    if (n % 2 == 0 or n % 3 == 0) : \n        return False\n   \n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n   \n    return True \n  \n# print all prime numbers  \n# less than equal to N  \ndef printPrime(n): \n    global prime\n    for i in range(2, n + 1): \n        if isPrime(i): \n            prime.append(i)\nMOD=10**9+7\ndef power(n):\n    a=2\n    c=1\n    while n>0:\n        if n%2==1:\n            c=(c*a)%MOD\n        a=(a*a)%MOD \n        n=int(n/2)\n    return c%MOD\nt=int(input())\nwhile t:\n    prime.clear()\n    n=int(input())\n    printPrime(n)\n    r=len(prime)\n    print(power(r-1)%(MOD))\n    t-=1\n    \n  ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477106,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4673657",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733104CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976489,
        "updated_at_ms": 1599976489,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:14:02.641Z",
        "__v": 0
    },
    {
        "_id": "5f6069c450731f1064908b46",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    public static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0||a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=0;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477104,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976479,
        "updated_at_ms": 1599987279,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:14:12.203Z",
        "__v": 0
    },
    {
        "_id": "5f6069ce50731f1064908b47",
        "submission_code": "def fun(i,j,m,ans,s1):\n    if(st1!=[] and s1>st1[-1]):\n        return\n    if(i==len(m)-1 and j==len(m[0])-1):\n        if(st1==[]):\n            st1.append(s1)\n            lis.append(ans)\n            return\n        if(s1==st1[-1]):\n            lis[-1]=min(lis[-1],ans)\n        elif(s1<st1[-1]):\n            lis[-1]=ans\n            st1[-1]=s1\n        return\n    k1,k2=\"\",\"\"\n    if(i+1<len(m)):\n        k1=m[i+1][j]\n    if(j+1<len(m[0])):\n        k2=m[i][j+1]\n    if(k1!=\"\" and k2!=\"\"):\n        if(k1<k2):\n            fun(i+1,j,m,ans+\"D\",s1+k1)\n        elif(k1>k2):\n            fun(i,j+1,m,ans+\"R\",s1+k2)\n        else:\n            fun(i+1,j,m,ans+\"D\",s1+k1)\n            fun(i,j+1,m,ans+\"R\",s1+k2)\n    if(k1!=\"\" and k2==\"\"):\n        fun(i+1,j,m,ans+\"D\",s1+k1)\n    elif(k2!=\"\" and k1==\"\"):\n        fun(i,j+1,m,ans+\"R\",s1+k2)\n    else:\n        return\nT=int(input())\nfor _ in range(T):\n    l=[]\n    lis=[]\n    st1=[]\n    n,m=map(int,input().split())\n    for i in range(n):\n        l.append(input())\n    fun(0,0,l,\"\",\"\")\n    print(\"Case #\",end=\"\")\n    print(_+1,end=\"\")\n    print(\":\",lis[0])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477100,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "6986737",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vegishanmukh7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599976458,
        "updated_at_ms": 1599977658,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:14:22.711Z",
        "__v": 0
    },
    {
        "_id": "5f6069d450731f1064908b48",
        "submission_code": "/*\n _     _                             \n| |__ | |__   __ _  __ _ _   _  __ _ \n| '_ \\| '_ \\ / _` |/ _` | | | |/ _` |\n| |_) | | | | (_| | (_| | |_| | (_| |\n|_.__/|_| |_|\\__,_|\\__, |\\__, |\\__,_|\n                   |___/ |___/       \n*/\n#include<bits/stdc++.h>\n\n#define ll          long long\n#define pb          push_back\n#define ppb         pop_back\n#define BigInt      __int128\n#define endl        '\\n'\n#define mii         map<ll int,ll int>\n#define pii         pair<ll int,ll int>\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define hell        1000000007\n#define sim         template < class c\n#define ris         return * this\n#define dor         > debug & operator <<\n#define eni(x)      sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\n\nusing namespace std;\n\nsim > struct rge {c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cout << *x, 0);\nsim > char dud(...);\nstruct debug \n{\n    ~debug() \n    { \n        cout<<endl; \n    }\n    eni(!=) cout << boolalpha << i; ris; }\n    eni(==) ris << range(begin(i), end(i)); }\n    sim, class b dor(pair < b, c > d) \n    {\n        ris << \"(\" << d.first << \", \" << d.second << \")\";\n    }\n    sim dor(rge<c> d) \n    {\n          *this << \"[\";\n          for (auto it = d.b; it != d.e; ++it)\n            *this << \", \" + 2 * (it == d.b) << *it;\n          ris << \"]\";\n    }\n};\n#define fuck(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define N  1005\n\nchar arr[N][N];\n\nll int n, m;\n\nbool unblock[N][N];\n\nbool vis[N][N];\n\nvoid dfs(int i, int j)\n{\n    vis[i][j] = true;\n    if(unblock[i - 1][j] && !vis[i - 1][j])\n    {\n        dfs(i - 1, j);\n    }\n    if(unblock[i][j - 1] && !vis[i][j - 1])\n    {\n        dfs(i, j - 1);\n    }\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int TESTS=1;\n    cin>>TESTS;\n    int tt = 0;\n    while(TESTS--)\n    {\n        cin >> n >> m;\n        for(ll int i = 0; i <= n + 2; i++)\n        {\n            for(ll int j = 0; j <= m + 2; j++)\n            {\n                unblock[i][j] = 0;\n                vis[i][j] = 0;\n            }\n        }\n        for(ll int i = 1; i <= n; i++)\n        {\n            for(ll int j = 1; j <= m; j++)\n            {\n                cin >> arr[i][j];\n            }\n        }\n        vector<pii> v;\n        v.pb({1, 1});\n        unblock[1][1] = 1;\n        vector<pii> w;\n        for(ll int sm = 3; sm <= n + m; sm++)\n        {\n            w.clear();\n            for(auto it : v)\n            {\n                if(it.F + 1 <= n && !vis[it.F + 1][it.S])\n                { \n                    vis[it.F + 1][it.S] = true;\n                    w.pb({it.F + 1, it.S});\n                }\n                if(it.S + 1 <= m && !vis[it.F][it.S + 1]) \n                {\n                    vis[it.F][it.S + 1] = true;\n                    w.pb({it.F, it.S + 1});\n                }\n            }\n            char mini = 'Z' + 1;\n            for(auto it : w)\n            {\n                mini = min(mini, arr[it.F][it.S]);\n            }\n            v.clear();\n            for(auto it : w)\n            {\n                if(arr[it.F][it.S] == mini)\n                {\n                    v.pb(it);\n                    unblock[it.F][it.S] = true;\n                }\n            }\n        }\n        for(ll int i = 0; i <= n + 2; i++)\n        {\n            for(ll int j = 0; j <= m + 2; j++)\n            {\n                vis[i][j] = 0;\n            }\n        }\n        // cout << \"unblock :\" << endl;\n        // for(ll int i = 1; i <= n; i++)\n        // {\n        //     for(ll int j = 1; j <= m; j++)\n        //     {\n        //         cout << unblock[i][j];\n        //     }\n        //     cout << endl;\n        // }\n        dfs(n, m);\n        assert(vis[1][1]);\n        string s;\n        pii c = {1, 1};\n        for(ll int sm = 3; sm <= n + m; sm++)\n        {\n            if(vis[c.F + 1][c.S])\n            {\n                s += 'D';\n                c.F += 1;\n            }\n            else\n            {\n                s += 'R';\n                c.S += 1;\n            }\n        }\n        cout << \"Case #\" << ++tt << \": \";\n        cout << s << endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477091,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "2968720",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599976437,
        "updated_at_ms": 1599977637,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:14:28.752Z",
        "__v": 0
    },
    {
        "_id": "5f6069dc50731f1064908b49",
        "submission_code": "for i in range(int(input())):\n    n=int(input())\n    x=[]\n    y=[]\n    squaresX=0\n    squaresY=0\n    X=0\n    Y=0\n    a=[]\n    sum11=[]\n    a2=[]\n    for i in range(n):\n        x1,y1=map(int,input().split())\n        squaresX+=x1*x1\n        squaresY+=y1*y1\n        X+=x1\n        Y+=y1\n        a.append([x1,y1])\n    for i in a:\n        valx=i[0]\n        valy=i[1]\n        sum1=0\n        sum1+=n*valx*valx+squaresX-2*valx*X\n        sum1+=n*valy*valy+squaresY-2*valy*Y\n        sum11.append(sum1)\n    #print(sum11) \n    #print(a)\n    f=min(sum11)\n    for i in range(n):\n        if(f==sum11[i]):\n            a2.append(a[i])\n    print(*min(a2))        \n            \n        \n      \n\n             \n                    \n            \n            ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477079,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5796840",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976412,
        "updated_at_ms": 1599977612,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:14:36.329Z",
        "__v": 0
    },
    {
        "_id": "5f6069e550731f1064908b4a",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n int gcd(int a, int b) \n{   \n   if (a == 0 || b == 0) \n       return 0; \n   if (a == b) \n       return a; \n    if (a > b) \n        return gcd(a-b, b); \n                  \n    return gcd(a, b-a); \n} \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int n,a[10000],i,f[10000];\n    cin>>n;\n    for(i=0;i<n;i++)\n    {\n        cin>>a[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        f[i]=1;    \n        for(int j=1;j<=a[i];j++)\n        {\n            f[i]=f[i]*j;\n        }\n    }\n    for(i=0;i<n;i++)\n    {   int count=1;\n        for(int j=2;j<f[i];j++)\n        {  int k=f[i]/j;\n          if(f[i]==j*k && j!=k &&k<j)\n          {\n           if(gcd(j,k)==1)\n           {\n               count=count+1;\n           }\n          }\n        }\n     cout<<count<<\"\\n\";\n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477074,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6639502",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp14",
        "site_user_handle": "saishivani_wnp",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976397,
        "updated_at_ms": 1599977597,
        "misc_notes": "[\"Success\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T07:14:45.420Z",
        "__v": 0
    },
    {
        "_id": "5f6069ed50731f1064908b4b",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint func(int x[],int y[],int n,int X,int Y)\n{\n    int i,sum=0;\n    for(i=0;i<n;i++)\n    {\n        sum+=pow(X-x[i],2)+pow(Y-y[i],2);\n    }\n    return sum;\n}\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    int T,i,j,k,res,min;\n    long int N;\n    unsigned int X,Y,xmin,ymin;\n    scanf(\"%d\",&T);\n    for(i=0;i<T;i++)\n    {\n        scanf(\"%ld\",&N);\n        unsigned int x[N],y[N];\n        for(j=0;j<N;j++)\n        {\n            scanf(\"%d\",&x[j]);\n            scanf(\"%d\",&y[j]);\n        }\n        X=x[0];\n        Y=y[0];\n        res=func(x,y,N,X,Y);\n        min=res;\n        xmin=x[0];\n        ymin=y[0];\n        for(k=1;k<N;k++)\n        {\n            X=x[k];\n            Y=y[k];\n            res=func(x,y,N,X,Y);\n            if(res<min)\n            {\n                min=res;\n                xmin=x[k];\n                ymin=y[k];\n            }\n        }\n    printf(\"%d %d\\n\",xmin,ymin);\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477072,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5093010",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218737014ITA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976394,
        "updated_at_ms": 1599976394,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:14:53.019Z",
        "__v": 0
    },
    {
        "_id": "5f6069f950731f1064908b4c",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 1e18\n#define ll  long long int\n#define deb(x) cout << #x << \" : \" << x << endl\nint main(){\n    ios_base::sync_with_stdio(false);\n    ll t;\n    scanf(\"%lld\\n\",&t);\n    ll ti=1;\n    while(t--){\n        ll n,m;\n        scanf(\"%lld %lld\\n\",&n,&m);/*\n        printf(\"%lld %lld\\n\",n,m );*/\n        char arr[n][m];\n        string temp[n+1][m+1];\n        char dir[n+1][m+1];\n        ll i,j;\n        for(i=0;i<n;i++){\n            for(j=0;j<m;j++){\n                dir[i][j]='#';\n            }        \n            scanf(\"%s\\n\",arr[i]);\n        }\n/*        for(i=0;i<n;i++){\n            for(j=0;j<m;j++){\n                printf(\"%c\", arr[i][j]);\n            }\n            printf(\"\\n\");\n        }*/\n        vector<char> ans;\n        for(i=n-1;i>=0;i--){\n            for(j=m-1;j>=0;j--){\n                string ans = \"\";\n                if((i+1)<n){\n                    if(ans == \"\"){\n                        ans = temp[i+1][j];\n                        dir[i][j] = 'D';\n                    }\n                    else{\n                        if(ans > temp[i+1][j]){\n                            ans = temp[i][j];\n                            dir[i][j]='D';\n                        }\n                    }\n                }\n                if((j+1)<m){                    \n                    if(ans == \"\"){\n                        ans = temp[i][j+1];\n                        dir[i][j] = 'R';\n                    }\n                    else{\n                        if(ans > temp[i][j+1]){\n                            ans = temp[i][j+1];\n                            dir[i][j]='R';\n                        }\n                    }\n                }\n                temp[i][j]=arr[i][j];\n                temp[i][j]+=ans;\n            }\n        }\n        string fuck;\n        i=0;\n        j=0;\n        while(i<n && j<m && dir[i][j]!='#'){\n            fuck+=dir[i][j];\n            if(dir[i][j] == 'D'){\n                i++;\n            }\n            else{\n                j++;\n            }\n        }\n        printf(\"Case #%lld: %s\\n\",ti++,fuck.c_str());\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477071,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3651417",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599976389,
        "updated_at_ms": 1599979989,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:15:05.772Z",
        "__v": 0
    },
    {
        "_id": "5f606a0350731f1064908b4d",
        "submission_code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll =long long int;\n\nll md=pow(10,9)+7;\nll fac[1000001],ans[1000001],fact[1000001],p[1000001];\nunordered_map<ll,ll> mp;\nvoid pp ()\n{\n    p[0]=1;\n    p[1]=1;\n    for(int k=2;k<=1000000;k++)\n    {\n        if(p[k]==0)\n        {\n            for(int j=k+k;j<=1000000;j+=k)\n            {\n                p[j]=1;\n            }\n        }\n    }\n}\n/*void g(int i)\n{\n   // mp.clear();\n    while(i%2==0)\n    {\n        mp[2]++;\n        i/=2;\n    }\n    for(int k=3;k<=sqrt(i);k+=2)\n    {\n        while(i%k==0)\n        {\n            mp[k]++;\n            i/=k;\n        }\n    }\n    if(i>1)\n    {\n        mp[i]++;\n    }\n   // return mp.size();\n}*/\nvoid f()\n{\n    ans[0]=0;\n    ll x;\n    ans[1]=1;\n    for(int i=2;i<=1000000;i++)\n    {\n        x=ans[i-1]*2;\n        x%=md;\n        ans[i]=x;\n    }\n    fac[0]=0;\n    fac[1]=0;\n    fac[2]=1;\n    int v=1;\n    for(int i=3;i<=1000000;i++)\n    {\n        if(p[i]==0)\n        {\n            v++;\n        }\n        fac[i]=v;\n    }\n}\n\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    pp();\n    f();\n    ll t,n;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cout<<ans[fac[n]]<<\"\\n\";\n       //cout<<fact[n]<<\"\\n\";;\n      // cout<<p[4]<<\"\\n\";;\n    }\n    \n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477064,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2892432",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "17H51A05M7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976380,
        "updated_at_ms": 1599979980,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:15:15.048Z",
        "__v": 0
    },
    {
        "_id": "5f606a0d50731f1064908b4e",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 1000005\n#define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\n\n\n\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n    cin>>TESTS;\n    while(TESTS--)\n    {   \n        int n,m;\n        cin >> n >> m;\n        string s[n];\n        rep(i,0,n) cin >> s[i];\n        string ans;\n        set<pair<char,pair<int,int>>> ss;\n        ss.insert({s[0][0],{0,0}});\n        pair<int,int> last = {-1,-1};\n        while(ss.size()){\n            auto it = *ss.begin();\n            if(last.fr != -1){\n                if(last.fr == it.sc.fr-1) ans.pb('D');\n                else ans.pb('R');\n            }\n            last = it.sc;\n            set<pair<char,pair<int,int>>> nss;\n            for(auto j : ss){\n                if(j.fr == it.fr){\n                    int x = it.sc.fr;\n                    int y = it.sc.sc;\n                    if(x < n-1) nss.insert({s[x+1][y], {x+1,y}});\n                    if(y < m-1) nss.insert({s[x][y+1], {x, y+1}});\n                }\n            }\n            ss = nss;\n            // trace(ss);\n        }\n        cout << ans << endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477053,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599976359,
        "updated_at_ms": 1599976359,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:15:25.274Z",
        "__v": 0
    },
    {
        "_id": "5f606a1450731f1064908b4f",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint cnt=0;\nlong long int fact(int n)\n{\n    long long int fac=1;\n    if(n%2==0)\n    {\n        while(n)\n        {\n            fac=fac*n*(n-1);\n            n=n-2;\n        }\n    }\n    else\n    {\n        fac=fac*n;\n        n--;\n        while(n)\n        {\n            fac=fac*n*(n-1);\n            n=n-2;\n        }\n    }\n    return fac;\n}\n\nvoid factorize(long long int n){\n   int count = 0;\n   while (!(n % 2)) {\n      n/= 2;\n      count++;\n   }\n   if (count)\n      cnt++;\n   for (long long i = 3; i <= sqrt(n); i += 2) {\n      count = 0;\n      while (n % i == 0) {\n         count++;\n         n = n / i;\n      }\n      if (count)\n        cnt++;\n   }\n   if (n > 2)\n        cnt++;\n    cout<<pow(2,cnt-1)<<endl;\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    // ios_base::sync_with_stdio(false);\n    // cin.tie(NULL);\n    int t,n;\n    long long int fac=1;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cnt=0;\n        fac=fact(n);\n        // cout<<fac<<endl;\n        factorize(fac);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477044,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675890",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "160218733061CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976334,
        "updated_at_ms": 1599981134,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:15:32.033Z",
        "__v": 0
    },
    {
        "_id": "5f606a1c50731f1064908b50",
        "submission_code": "t= int(input())\n\nfor i in range(t):\n    N=int(input())\n    X=[]\n    for j in range(N):\n        X.append(list(map(int,input().split())))\n    sol=0\n    minval=9999999999\n    for j in range(N):\n        O1=0\n        for k in range(N):\n            O1+=(((X[j][0]-X[k][0])**2)+((X[j][1]-X[k][1])**2))\n        if(O1<minval):\n            minval=O1\n            sol=j\n            if(O1==0):\n                break\n    \n    print(X[sol][0],X[sol][1])\n                \n                \n        \n        \n    \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477032,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5235288",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anudeep_kalitkar",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976295,
        "updated_at_ms": 1599981095,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:15:40.333Z",
        "__v": 0
    },
    {
        "_id": "5f606a2550731f1064908b51",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint fact(int n)\n{\n    if (n == 0)\n        return 1;\n    else {\n        return n*fact(n-1);\n    }\n}\nint hcf(int a, int b)\n{\n    while (a != b)\n    {\n        if (a > b)\n        {\n            return hcf(a - b, b);\n        }\n        else\n        {\n            return hcf(a, b - a);\n        }\n    }\n    return a;\n}\nint main() {\n    long int n,a,b=1,c,count,i;\n    scanf(\"%d\",&n);\n    for(int j=0;j<n;j++)\n    {\n        count=0;\n        scanf(\"%d\",&a);\n        b=fact(a);\n        if(b==1)\n        {\n            count=1;\n            printf(\"%d\",count);\n        }\n        else\n        {\n            for (i = 1; i * i <= b; i++)\n            {\n                if (b % i == 0) \n                {\n                    c= hcf(i,b/i);\n                    //printf(\"%d\\n\",c);\n                }\n                if(c==1)\n                {\n                    count=count+1;\n                }\n            }\n            printf(\"%d\\n\",count);\n        }\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477020,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5012620",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "praveenchetkuri1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976283,
        "updated_at_ms": 1599976283,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:15:49.541Z",
        "__v": 0
    },
    {
        "_id": "5f606a2e50731f1064908b52",
        "submission_code": "T=int(input())\nfor _ in range(T):\n    n=int(input())\n    x=[]\n    y=[]\n    for i in range(n):\n        l=[int(a) for a in input().split()]\n        x.append(l)\n        y.append(l[::-1])\n    x.sort()\n    y.sort()\n    k=(len(x)-1)//2\n    c1=0\n    c2=0\n    for i in range(n):\n        c1+=((abs(x[k][0]-x[i][0]))**2)+((abs(x[k][1]-x[i][1]))**2)\n        c2+=((abs(y[k][0]-y[i][0]))**2)+((abs(y[k][1]-y[i][1]))**2)\n    #print(c1,c2)\n    if(c1<=c2):\n        print(x[k][0],x[k][1])\n    else:\n        print(y[k][0],y[k][1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477016,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6986737",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "vegishanmukh7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976277,
        "updated_at_ms": 1599976277,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:15:58.860Z",
        "__v": 0
    },
    {
        "_id": "5f606a3850731f1064908b53",
        "submission_code": "#include<bits/stdc++.h>\n#define ll           long long int\n#define pb           push_back\n#define F            first\n#define S            second\nusing namespace std;\nvoid solve()\n{\n    int n,m;\n    cin>>n>>m;\n    int ans=n*n;\n    int odd=(n*n)>>1;\n    int even=ans-odd;\n    int x,y;\n    for(int i=0;i<m;++i)\n    {\n        cin>>x>>y;\n        x+=y;\n        if(x&1)\n            --odd;\n        else\n            --even;\n    }\n    ans=max(odd,even);\n    cout<<ans<<\"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin>>t;\n    for(int i=1;i<=t;++i)\n    {\n        cout<<\"Case #\"<<i<<\": \";\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326477002,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "9693257",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "sg0071729",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599976246,
        "updated_at_ms": 1599976246,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:16:08.432Z",
        "__v": 0
    },
    {
        "_id": "5f606a4250731f1064908b54",
        "submission_code": "test=int(input())\nfor _ in range(test):\n    n=int(input())\n    x=[]\n    y=[]\n    for _ in range(n):\n        a,b=map(int,input().split())\n        x.append(a)\n        y.append(b)\n    xmid=sum(x)//n\n    ymid=sum(y)//n\n    xmin=x[0]\n    ymin=y[0]\n    min=(xmid-x[0])**2+ (ymid-y[0])**2\n    for i in range(n):\n      dist=(xmid-x[i])**2 + (ymid-y[i])**2\n      if(dist<min):\n        xmin=x[i]\n        ymin=y[i]\n        min=dist\n    print(xmin,ymin)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476999,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4622965",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "vision01",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976245,
        "updated_at_ms": 1599979845,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:16:18.926Z",
        "__v": 0
    },
    {
        "_id": "5f606a4b50731f1064908b55",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.math.*;\n\npublic class Solution {\n    static int fact(int n)\n    {\n        int s=1;\n        for(int i=1;i<=n;i++)\n            s=s*i;\n        return s;\n    }\n    static int g(int s, int d)\n    {\n        if(s==0 || s==d)\n            return d;\n        if(d==0)\n            return s;\n        if(s>d)\n            return g(s-d,d);\n        return g(s,d-s);\n    }\n    static int countp(int n)\n    {\n        int count=0;\n        for(int ii=2;ii<=Math.sqrt(n);ii++)\n        {\n            if(n%ii==0){\n                if(g(ii,n/ii)==1)\n                    count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        for(int i=0;i<N;i++)\n        {\n            int n=sc.nextInt();\n            System.out.println((countp(fact(n)))+1);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476997,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6636583",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "ramyasreesai2000",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976241,
        "updated_at_ms": 1599976241,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:16:27.428Z",
        "__v": 0
    },
    {
        "_id": "5f606a5150731f1064908b56",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define mod 1000000007\n#define f(i,a,b) for(ll i=a;i<b;i++)\n#define rf(i,a,b) for(ll i=a;i>=b;i--)\n#define sf(i,s) for(ll i=0;s[i]!='\\0';i++)\n#define watch(x) cout << (#x) << \" is \" << (x) << \"\\n\"\n#define inf 1e18\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define all(v) v.begin(),v.end()\n#define rall(v) v.rbegin(),v.rend()\n#define tr(v,i) for(typeof(v).begin() i = v.begin(); i != v.end(); i++)\n#define pre(v,x) (v.find(x) != v.end())\n#define vpre(v,x) (find(all(v),x) != v.end())\n#define gcd(x,y) __gcd(x,y)\n#define bc(x) __builtin_popcountll(x)\n//cin.ignore(1, '\\n');\nll power(ll a, ll b)\n{\n    if (b == 0)\n        return 1;\n    if (b == 1)\n        return a % mod;\n    else\n    {\n        ll t = power(a, b / 2);\n        if (b % 2 == 0)\n            return ((t % mod) * (t % mod)) % mod;\n        else\n            return ((((t % mod) * (t % mod)) % mod) * ((a % mod) % mod)) % mod;\n    }\n}\nll fact[3000001],factinv[3000001],natinv[3000001],N=3000000;\nvoid precompute()\n{\n    ll i;\n    fact[0]=1;\n    fact[1]=1;\n    factinv[0]=factinv[1]=natinv[0]=natinv[1]=1;\n    for(i=2;i<=N;i++)\n    {\n        natinv[i]=((natinv[mod%i]%mod)*(mod-mod/i)%mod)%mod;\n    }\n    for(i=2;i<=N;i++)\n    {\n        fact[i]=((fact[i-1]%mod)*(i%mod))%mod;\n        factinv[i]=((natinv[i]%mod)*(factinv[i-1]%mod))%mod;\n    }\n}\nvoid solve()\n{\nll x,y,x1,y1,x2,y2,z2,z1,x11,y11,z11,x22,y22,z22,x33,y33,z33,ans1,ans2,ans11,ans22,ans33,ansmain,ansextra,z,ans;\n    cin>>x>>y>>x1>>y1>>x2>>y2;\n    z=x+y;\n //   watch(fact[z]);\n    ans=(((fact[z]%mod)*(factinv[x]%mod)%mod)*(factinv[y])%mod)%mod;\n    z1=x1+y1;\n    ans1=(((fact[z1]%mod)*(factinv[x1]%mod)%mod)*(factinv[y1])%mod)%mod;\n    x11=x-x1;\n    y11=y-y1;\n    z11=x11+y11;\n    ans11=(((fact[z11]%mod)*(factinv[x11]%mod)%mod)*(factinv[y11])%mod)%mod;\n    z2=x2+y2;\n    ans2=(((fact[z2]%mod)*(factinv[x2]%mod)%mod)*(factinv[y2])%mod)%mod;\n    x22=x-x2;\n    y22=y-y2;\n    z22=x22+y22;\n    ans22=(((fact[z22]%mod)*(factinv[x22]%mod)%mod)*(factinv[y22])%mod)%mod;\n    x33=x2-x1;\n    y33=y2-y1;\n    z33=x33+y33;\n    ans33=(((fact[z33]%mod)*(factinv[x33]%mod)%mod)*(factinv[y33])%mod)%mod;\n    ansextra=((((ans1 % mod) * (ans22 % mod)) % mod) * ((ans33 % mod) % mod)) % mod;\n    ans1=((ans1%mod)*(ans11%mod))%mod;\n    ans2=((ans2%mod)*(ans22%mod))%mod;\n   // watch(ans);\n   // watch(ans1);\n    ansmain=(ans-ans1-ans2+ansextra+mod)%mod;\n    cout<<ansmain<<\"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll t = 1;\n    precompute();\n    cin >> t;\n    while (t--)\n    {\n        solve();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476996,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9631447",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "bugs_overflow",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599976237,
        "updated_at_ms": 1599978637,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:16:33.368Z",
        "__v": 0
    },
    {
        "_id": "5f606a5950731f1064908b57",
        "submission_code": "t= int(input())\n\nfor i in range(t):\n    N=int(input())\n    X=[]\n    for j in range(N):\n        X.append(list(map(int,input().split())))\n    sol=0\n    minval=9999999999\n    for j in range(N):\n        O1=0\n        for k in range(N):\n            O1+=(((X[j][0]-X[k][0])**2)+((X[j][1]-X[k][1])**2))\n        if(O1<minval):\n            minval=O1\n            sol=j\n    \n    print(X[sol][0],X[sol][1])\n                \n                \n        \n        \n    \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476993,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5235288",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anudeep_kalitkar",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976235,
        "updated_at_ms": 1599979835,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:16:41.955Z",
        "__v": 0
    },
    {
        "_id": "5f606a6450731f1064908b58",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n int gcd(int a, int b) \n{   \n   if (a == 0 || b == 0) \n       return 0; \n   if (a == b) \n       return a; \n    if (a > b) \n        return gcd(a-b, b); \n                  \n    return gcd(a, b-a); \n} \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    int n,a[100],i,f[100];\n    cin>>n;\n    for(i=0;i<n;i++)\n    {\n        cin>>a[i];\n    }\n    for(i=0;i<n;i++)\n    {\n        f[i]=1;    \n        for(int j=1;j<=a[i];j++)\n        {\n            f[i]=f[i]*j;\n        }\n    }\n    for(i=0;i<n;i++)\n    {   int count=1;\n        for(int j=2;j<f[i];j++)\n        {  int k=f[i]/j;\n          if(f[i]==j*k && j!=k &&k<j)\n          {\n           if(gcd(j,k)==1)\n           {\n               count=count+1;\n           }\n          }\n        }\n     cout<<count<<\"\\n\";\n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476989,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6639502",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp14",
        "site_user_handle": "saishivani_wnp",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976218,
        "updated_at_ms": 1599976218,
        "misc_notes": "[\"Success\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T07:16:52.002Z",
        "__v": 0
    },
    {
        "_id": "5f606a6a50731f1064908b59",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner s=new Scanner(System.in);\n        int t=s.nextInt();\n        for(int i=0;i<t;i++){\n            int n=s.nextInt();\n            int a[][]=new int[n][2];\n            int f=0,x,y,mini=Integer.MAX_VALUE,tx=0,ty=0;\n            for(int j=0;j<n;j++){\n                for(int k=0;k<2;k++){\n                    a[j][k]=s.nextInt();\n                }\n            }\n            for(int j=0;j<n;j++){\n                x=a[j][0];\n                y=a[j][1];\n                f=0;\n                for(int k=0;k<n;k++){\n                    f+=((x-a[k][0])*(x-a[k][0]))+((y-a[k][1])*(y-a[k][1]));\n                    \n                }\n                if(f<mini){\n                mini=f;\n                    tx=x;\n                    ty=y;\n                    }\n               \n            }\n             System.out.println(tx+\" \"+ty);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476986,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6547357",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "ashrithareddy8",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976213,
        "updated_at_ms": 1599976213,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:16:58.250Z",
        "__v": 0
    },
    {
        "_id": "5f606a7250731f1064908b5a",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    \n    int x_i[100],y_i[100],fx[100];\n    int n,i,j;\n    int test_cases;\n    int min,minx,miny;\n    int fxv,x,y;\n    scanf(\"%d\",&test_cases);\n   \n    do\n    {\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&x_i[i],&y_i[i]);\n    }\n        \n    for(i=0;i<n;i++)\n    {\n        fxv=0;\n        x=x_i[i];\n        y=y_i[i];\n        for(j=0;j<n;j++)\n        {\n            if(j == i)\n                continue;\n            else\n                fxv+=pow((x-x_i[j]),2)+pow((y-y_i[j]),2);\n        }\n        fx[i]=fxv;\n    }\n    min=fx[0];\n    minx=x_i[0];\n    miny=y_i[0];\n    for(i=1;i<n;i++)\n    {\n        if(min>fx[i])\n        {\n            min=fx[i];\n            minx=x_i[i];\n            miny=y_i[i];\n        }\n    }\n    printf(\"%d %d\\n\",minx,miny);\n    test_cases--;\n    }while(test_cases != 0);\n    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476977,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5487386",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "devaduttsanka",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976201,
        "updated_at_ms": 1599977401,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:17:06.801Z",
        "__v": 0
    },
    {
        "_id": "5f606a7c50731f1064908b5b",
        "submission_code": "// #include <bits/stdc++.h>\n// using namespace std;\n// struct cell\n// {\n//     long long V = 0 , U = -1, D = -1, R = -1, L = -1;  \n// }cell ;\n// void solve()\n// {\n//     int n, m ; cin >> n >> m;\n//     cell mat[n][m];\n\n// }\n// int main()\n// {\n//     ios_base::sync_with_stdio(false);\n//     cin.tie(NULL); cout.tie(NULL);\n//     int t = 1; cin >> t;\n//     while(t--) solve();\n//     return 0;\n// }\n\n\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    int t;\n    cin>>t;\n    while(t--)\n    {\n        ll n,i,j,k=0,l=0,m=0,o=0,maxx=INT_MAX,ind;\n        cin>>n;\n        ll a[n][2],y[1000000]={0},x[1000000]={0},ys[1000000]={0},xs[1000000]={0};\n        for(i=0;i<n;i++)\n        {\n            cin>>a[i][0]>>a[i][1];\n            k+=a[i][0];\n            l+=a[i][1];\n            m+=(a[i][0]*a[i][0]);\n             o+=(a[i][1]*a[i][1]);\n        }\n        \n        for(i=0;i<n;i++)\n        {\n            x[i]=(k-a[i][0]);\n            y[i]=(l-a[i][1]);\n            ys[i]=(m-(a[i][0]*a[i][0]));\n            \n         xs[i]=(o-(a[i][1]*a[i][1]));\n            \n\n}\n        ll ans[n];\n        for(i=0;i<n;i++)\n        {\n           ans[i]=(n-1)*((a[i][0]*a[i][0])+(a[i][1]*a[i][1]))+ys[i]+xs[i]-2*(a[i][0])*(x[i])-2*(a[i][1])*(y[i]);\n            if(ans[i]<maxx)\n            {\n                maxx=ans[i];\n                ind=i;\n            }\n          //  cout<<ans[i]<<\"\\n\";\n        }\n        cout<<a[ind][0]<<\" \"<<a[ind][1]<<\"\\n\";\n        \n        \n        \n        \n}\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476970,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5876221",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp14",
        "site_user_handle": "NMN5G9",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976186,
        "updated_at_ms": 1599976186,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:17:16.578Z",
        "__v": 0
    },
    {
        "_id": "5f606a8750731f1064908b5c",
        "submission_code": "for t in range(int(input())):\n    n=int(input())\n    l=[]\n    for i in range(n):\n        a=list(map(int,input().split()))\n        l.append(a)\n    l.sort(key= lambda x: x[0]*x[0]+x[1]*x[1])\n    if n%2==1:\n        print(*l[n//2])\n    else:\n        print(*l[(n//2)-1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476957,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4674163",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976166,
        "updated_at_ms": 1599977366,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:17:27.225Z",
        "__v": 0
    },
    {
        "_id": "5f606a9050731f1064908b5d",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ \n    \n    int x_i[100],y_i[100],fx[100];\n    int n,i,j;\n    int test_cases;\n    int min,minx,miny;\n    int fxv,x,y;\n    scanf(\"%d\",&test_cases);\n   \n    do\n    {\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d %d\",&x_i[i],&y_i[i]);\n    }\n        \n    for(i=0;i<n;i++)\n    {\n        fxv=0;\n        x=x_i[i];\n        y=y_i[i];\n        for(j=0;j<n;j++)\n        {\n            if(j == i)\n                continue;\n            else\n                fxv+=pow((x-x_i[j]),2)+pow((y-y_i[j]),2);\n        }\n        fx[i]=fxv;\n    }\n    min=fx[0];\n    minx=x_i[0];\n    miny=y_i[0];\n    for(i=1;i<n;i++)\n    {\n        if(min>fx[i])\n        {\n            min=fx[i];\n            minx=x_i[i];\n            miny=y_i[i];\n        }\n    }\n    printf(\"%d %d\\n\",minx,miny);\n    test_cases--;\n    }while(test_cases != 0);\n    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476951,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5487386",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "devaduttsanka",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976149,
        "updated_at_ms": 1599976149,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:17:36.751Z",
        "__v": 0
    },
    {
        "_id": "5f606a9950731f1064908b5e",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws IOException {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int T = Integer.parseInt(br.readLine().trim());\n        while(T-- >0){\n            int n = Integer.parseInt(br.readLine().trim());\n            double min = Double.MAX_VALUE;\n            long minx=0,miny=0;\n            int xi[] = new int[n];\n            int yi[] = new int[n];\n            for(int i=0;i<n;i++){\n                String s[] = br.readLine().trim().split(\"\\\\s+\");\n                xi[i] = Integer.parseInt(s[0]);\n                yi[i] = Integer.parseInt(s[1]);\n            }\n            for(int i=0;i<n;i++){\n                int x = xi[i];\n                int y = yi[i];\n                double res = 0;\n                for(int j=0;j<n;j++){\n                    res = res + Math.pow((x - xi[j]),2) + Math.pow((y - yi[j]),2);\n                }\n                if(res < min){\n                    min = res;\n                    minx = x;\n                    miny = y;\n                }\n            }\n            /*Arrays.sort(xi);\n            Arrays.sort(yi);\n            minx = xi[(n-1)/2];\n            miny = yi[(n-1)/2];*/\n            System.out.println(minx+\" \"+miny);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476949,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5773737",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "lakshmimanasamvs",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976148,
        "updated_at_ms": 1599979748,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:17:45.740Z",
        "__v": 0
    },
    {
        "_id": "5f606a9f50731f1064908b5f",
        "submission_code": "#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;  \n#define min_heap(t) priority_queue<t,vector<t>,greater<t>>\n#define max_heap(t) priority_queue<t>\n#define ordered_set(x) tree<x, null_type, less<x>, rb_tree_tag, tree_order_statistics_node_update>\n#define orderKey order_of_key\n#define findOrder find_by_order\n#define F first\n#define S second\n#define pb emplace_back \n#define mp make_pair\n#define f(i,x,y) for(i=x;i<y;i++) \n#define fo(i,x,y) for(i=x;i>=y;i--)\n#define all(v) v.begin(),v.end()\n#define ss(v) stable_sort(all(v))\n#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define endl '\\n' \n#define pi  3.14159265358\nlong long po(long long int m,long long int n){\nlong long i=1; \nwhile(n>0)\n{\n    if(n%2==1)\n      i=(i*m);\n    n=n/2;\n    m=(m*m);\n}\nreturn(i);\n} \nvoid solve(void){  \n    ll n,m,i,j; \n    cin>>n>>m;\n    scanf(\"%lld %lld\",&n,&m);\n    vector<vector<char>>s(n,vector<char>(m));\n    string D=\"D\",R=\"R\";\n    for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\n            cin>>s[i][j];\n        } \n    }   \n    vector<vector<string>>dp(n,vector<string>(m+1)),point(n+1,vector<string>(m+1));\n    dp[0][0]=s[0][0]; \n    point[0][0]=\"\";\n    for(i=1;i<n;i++){\n        dp[i][0]=dp[i-1][0]+s[i][0];\n        point[i][0]=point[i-1][0]+D;\n    } \n    for(j=1;j<m;j++){\n        dp[0][j]=dp[0][j-1]+s[0][j];\n        point[0][j]=point[0][j-1]+R;\n    } \n    for(i=1;i<n;i++){\n        for(j=1;j<m;j++){\n            if(dp[i-1][j]>dp[i][j-1]){\n                dp[i][j]=dp[i][j-1]+s[i][j];\n                point[i][j]=point[i][j-1]+R;\n            }   \n            else if(dp[i-1][j]<dp[i][j-1]){\n                dp[i][j]=dp[i-1][j]+s[i][j];\n                point[i][j]=point[i-1][j]+D;\n            } \n            else{\n                if(point[i-1][j]<point[i][j-1]){\n                    dp[i][j]=dp[i-1][j]+s[i][j];\n                    point[i][j]=point[i-1][j]+D;\n                } \n                else{\n                    dp[i][j]=dp[i][j-1]+s[i][j];\n                    point[i][j]=point[i][j-1]+R;\n                }\n            }\n        }\n    } \n    cout<<point[n-1][m-1]<<endl;\n}\nint main(void){\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    ll y=1;\n    cin>>y;\n    for(ll x=1;x<=y;x++){\n        cout<<\"Case #\"<<x<<\": \";\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476946,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "5687885",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "balajipulugujju1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599976145,
        "updated_at_ms": 1599978545,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T07:17:51.792Z",
        "__v": 0
    },
    {
        "_id": "5f606aa750731f1064908b60",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n         Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int count=0,fact=1;\n            for(int j=2;j<=n;j++)\n                fact=fact*j;\n            if(fact==2)\n                System.out.println(1);\n            else\n            {\n                for(int k=1;k<fact/2;k++)\n                {\n                    if(fact%k==0)\n                    {\n                        int h=fact/k;\n                        h=h+k;\n                        int cnt=0;\n                        for(int l=2;l<h/2;l++)\n                        {\n                            if(h%l==0)\n                            {\n                                cnt=1;\n                                break;\n                            }\n                        }\n                        if(cnt==0)\n                            count=count+1;\n                    }\n                  }\n             System.out.println(count);\n            }\n            }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476944,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976141,
        "updated_at_ms": 1599977341,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:17:59.791Z",
        "__v": 0
    },
    {
        "_id": "5f606aaf50731f1064908b61",
        "submission_code": "import math\nfrom functools import reduce\n\n\nn=int(input())\nnumbers=[]\ncoprime_count=0\nfor _ in range(n):\n    numbers.append(int(input().strip()))\ndef gcd(x, y):\n    while y != 0:\n        (x, y) = (y, x % y)\n    return x\ndef factors(n):    \n    return list(reduce(list.__add__, \n                ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))\nfor number in numbers:\n    fact=math.factorial(number)\n    coprime_count=0\n    factors_list=factors(fact)\n    length=len(factors_list)\n    factors_list.sort()\n    for i in range(length//2):\n            if factors_list[i]!=factors_list[length-i-1]:\n                if gcd(factors_list[i],factors_list[length-i-1])==1:\n                    coprime_count+=1 \n    print(coprime_count%1000000007)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476936,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9094317",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "divyajomi01",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976128,
        "updated_at_ms": 1599976128,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:18:07.367Z",
        "__v": 0
    },
    {
        "_id": "5f606ab950731f1064908b62",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define PRIME 1000000007\nlong long int binary_exp(long long int x, long long int n)\n{\n    if (n == 0) {\n        return 1;\n    } else if (n == 1) {\n        return x % PRIME;\n    } else {\n        long long int temp = binary_exp(x, n / 2);\n        temp = (temp * temp) % PRIME;\n         \n        if (n % 2 == 0) {\n            return temp;\n        } else {\n            return ((x % PRIME) * temp) % PRIME;\n        }\n    }\n}\n\nlong long a[1000001];\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    \n    a[0]=0;\n    a[1]=1;\n    set<int> s;\n    for(int i=2;i<=1000000;i++){\n        int prime=1;\n         for(int j=2;j<=sqrt(i);j++){\n           if(i%j==0){\n            prime=0;break;\n           }\n         }\n         if(prime){\n             \n         s.insert(i);\n         }\n         a[i]=s.size();\n    }\n    \n    int t;\n    cin>>t;\n    while(t--){\n    long long n;\n    cin>>n;\n    if(n==1)\n    cout<<1<<endl;\n    else{\n      cout<<binary_exp(2,a[n]-1)<<endl;}\n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476910,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4724102",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "18H51A05C3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976091,
        "updated_at_ms": 1599976091,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:18:17.093Z",
        "__v": 0
    },
    {
        "_id": "5f606ac050731f1064908b63",
        "submission_code": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    mini=99999999\n    l=[]\n    sum2=0\n    sum1=0\n    ans1=0\n    ans2=0\n    ans3=0\n    ans4=0\n    for j in range(n):\n        x,y=map(int,input().split())\n        t=(x,y)\n        l.append((t))\n    l=sorted(l)        \n    for k in range(n):\n        sum1+=(l[n//2][0]-l[k][0])*(l[n//2][0]-l[k][0])+(l[n//2][1]-l[k][1])*(l[n//2][1]-l[k][1])     \n    ans1=l[n//2][0]\n    ans2=l[n//2][1]\n    for k in range(n):\n        sum2+=(l[n//2-1][0]-l[k][0])*(l[n//2-1][0]-l[k][0])+(l[n//2-1][1]-l[k][1])*(l[n//2-1][1]-l[k][1])  \n    ans3=l[n//2-1][0]\n    ans4=l[n//2-1][1]\n    #print(sum1,sum2)\n    if sum1>=sum2:\n        print(ans3,ans4)\n    else:\n        print(ans1,ans2)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476908,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4673657",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "160218733104CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976083,
        "updated_at_ms": 1599976083,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:18:24.877Z",
        "__v": 0
    },
    {
        "_id": "5f606aca50731f1064908b64",
        "submission_code": "/******************************************************************************\n\n                              Online C++ Compiler.\n               Code, Compile, Run and Debug C++ program online.\nWrite your code in this editor and press \"Run\" button to compile and execute it.\n\n*******************************************************************************/\n\n#include <bits/stdc++.h>\n\nusing namespace std;\nlong long calc(long long a,long long b,pair<long long,long long> c)\n{\n    return (a-c.first)*(a-c.first)+(b-c.second)*(b-c.second);\n}\n\nint main()\n{\n    int t;\n    cin>>t;\n    while(t)\n    {\n        t--;\n        int n;\n        cin>>n;\n        vector<pair<long,long>> v(n);\n        pair<long,long> c;\n        c.first=0;\n        c.second=0;\n        for(int i=0;i<n;i++)\n        {\n            cin>>v[i].first>>v[i].second;\n            c.first+=v[i].first;\n            c.second+=v[i].second;\n        }\n        c.first/=n;\n        c.second/=n;\n        long long mn=1e15;\n        pair<long long,long long> mni;\n        for(int i=0;i<n;i++)\n        {\n            if(calc(v[i].first,v[i].second,c)<mn)\n            {\n                mn=calc(v[i].first,v[i].second,c);\n                mni=v[i];\n            }\n            else if(calc(v[i].first,v[i].second,c)==mn)\n            {\n                if(v[i].first<mni.first)\n                mni=v[i];\n                else if(v[i].first==mni.first && v[i].second<mni.second)\n                mni=v[i];\n            }\n            \n        }\n        cout<<mni.first<<' '<<mni.second<<'\\n';\n        \n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476898,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "8391815",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "balasai2712",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976074,
        "updated_at_ms": 1599976074,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:18:34.605Z",
        "__v": 0
    },
    {
        "_id": "5f606ad550731f1064908b65",
        "submission_code": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Sep 13 10:54:00 2020\n\n@author: hamsini\n\"\"\"\n\nn=int(input())\nfor i in range(n):\n    t=int(input())\n    k=1\n    for j in range(1,t+1):\n        k=k*j\n    #print(k)  \n    l=[]\n    for j in range(1,k+1):\n        if(k%j==0):\n            l.append(j)\n    #print(l)\n    c=0\n    s=0\n    v=len(l)-1\n    for p in range(0,int(len(l)/2)):\n        f=0\n        if(l[p]*l[v]==k):\n            for i in range(2,l[p]+1):\n                if(l[p]%i==0 and l[v]%i==0):\n                    f=1\n                    break\n            if(f==0):\n                c=c+1\n            v=v-1\n                \n    print(c)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476896,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8984118",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "hamsiniparimala1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976071,
        "updated_at_ms": 1599977271,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:18:45.150Z",
        "__v": 0
    },
    {
        "_id": "5f606ade50731f1064908b66",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint cnt=0;\nlong long int fact(int n)\n{\n    long long int fac=1;\n    if(n%2==0)\n    {\n        while(n)\n        {\n            fac=fac*n*(n-1);\n            n=n-2;\n        }\n    }\n    else\n    {\n        fac=fac*n;\n        n--;\n        while(n)\n        {\n            fac=fac*n*(n-1);\n            n=n-2;\n        }\n    }\n    return fac;\n}\n\nvoid factorize(long long int n){\n   int count = 0;\n   while (!(n % 2)) {\n      n/= 2;\n      count++;\n   }\n   if (count)\n      cnt++;\n   for (long long i = 3; i <= sqrt(n); i += 2) {\n      count = 0;\n      while (n % i == 0) {\n         count++;\n         n = n / i;\n      }\n      if (count)\n        cnt++;\n   }\n   if (n > 2)\n        cnt++;\n    cout<<pow(2,cnt-1)<<endl;\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t,n;\n    long long int fac=1;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cnt=0;\n        // fac=fact(n);\n        fac=3628800;\n        // cout<<fac<<endl;\n        factorize(fac);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476892,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675890",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "160218733061CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599976066,
        "updated_at_ms": 1599979666,
        "misc_notes": "[\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:18:54.339Z",
        "__v": 0
    },
    {
        "_id": "5f606ae550731f1064908b67",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws IOException {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int T = Integer.parseInt(br.readLine().trim());\n        while(T-- >0){\n            int n = Integer.parseInt(br.readLine().trim());\n            long min = Long.MAX_VALUE,minx=0,miny=0;\n            int xi[] = new int[n];\n            int yi[] = new int[n];\n            for(int i=0;i<n;i++){\n                String s[] = br.readLine().trim().split(\"\\\\s+\");\n                xi[i] = Integer.parseInt(s[0]);\n                yi[i] = Integer.parseInt(s[1]);\n            }\n            for(int i=0;i<n;i++){\n                int x = xi[i];\n                int y = yi[i];\n                long res = 0;\n                for(int j=0;j<n;j++){\n                    res = res + (long)Math.pow((x - xi[j]),2) + (long)Math.pow((y - yi[j]),2);\n                }\n                if(res < min){\n                    min = res;\n                    minx = x;\n                    miny = y;\n                }\n            }\n            /*Arrays.sort(xi);\n            Arrays.sort(yi);\n            minx = xi[(n-1)/2];\n            miny = yi[(n-1)/2];*/\n            System.out.println(minx+\" \"+miny);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476881,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5773737",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "lakshmimanasamvs",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976027,
        "updated_at_ms": 1599978427,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:19:01.129Z",
        "__v": 0
    },
    {
        "_id": "5f606aed50731f1064908b68",
        "submission_code": "/*input\n3\n3 3\nAAA\nAAA\nAAA\n3 4\nDSCG\nZFQL\nLMEV\n2 5\nTSNMX\nSRCVK\n*/\n/*\n\n**************************\n*                         *\n* AUTHOR :: shado_w      *\n*                         *\n**************************\n\n*/\n#include<bits/stdc++.h>\n#define lld          long long int\n#define pb          push_back\n#define ppb         pop_back\n#define    endl        '\\n'\n#define mii         map<lld,lld>\n#define msi         map<string,lld>\n#define mis         map<lld, string>\n#define mpi         map<pair<lld ,lld >,lld >\n#define pii         pair<lld,lld>\n#define vi          vector<lld>\n#define vpi         vector<pii>\n#define vs          vector<string>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define sz(x)       (lld)x.size()\n#define hell        1000000007\n#define rrep(i,m,n)    for(lld i=m;i>=n;i--)\n#define rep(i,m,n)    for(lld i=m;i<n;i++)\n#define lbnd        lower_bound\n#define ubnd        upper_bound\n#define bs          binary_search\n#define mp          make_pair\n#define what_is(x)  cerr << #x << \" is \" << x << endl;\n#define pr(x)         cout<< x << \" \";\n#define pre(x)        cout<< x << endl ;\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>; \n//change null_type to get ordered_map\n#define N  100005\nvector <vector<char>> a;\nvector <vector<int>> Vis;\nint n,m;\nbool check(int i,int j){\n    if(i>=n or j>=m){\n        return false;\n    }\n    return true;\n}\nstring res=\"\",ans=\"\";\nvector <vector<bool>> can;\nbool dfs(int x,int y){\n    if(x==n-1 && y==m-1){\n        return true;\n    }\n    if(Vis[x][y]!=-1){\n        return Vis[x][y];\n    }\n    bool p=false;\n    Vis[x][y]=0;\n    if(check(x,y+1) && a[x][y+1] == ans[x+y+1]){\n        p=dfs(x,y+1);\n        if(p){\n            can[x][y+1]=true;\n        }\n    }\n\n    if(check(x+1,y) && a[x+1][y] == ans[x+y+1]){\n        p=dfs(x+1,y);\n        if(p){\n            can[x+1][y]=true;\n        }\n    }\n    Vis[x][y]=p;\n    return p;\n}\nvoid solve()\n{\n    cin >> n >> m;\n    a.clear(),Vis.clear(),can.clear();\n    a.resize(n);\n    Vis.resize(n);\n    can.resize(n);\n    rep(i,0,n){\n        can[i].resize(m);\n        a[i].resize(m);\n        Vis[i].resize(m);\n        rep(j,0,m){\n            Vis[i][j]=-1;\n            can[i][j]=false;\n            cin >> a[i][j];\n        }\n    }\n    res=\"\",ans=\"\";\n    priority_queue <pair<pair<int,int>,pair<int,int>>> pq;\n    pq.push({{-1,'Z'-a[0][1]},{0,1}});\n    pq.push({{-1,'Z'-a[1][0]},{1,0}});\n    int vis[n+m+2];\n    rep(i,0,n+m+2){\n        vis[i]=28;\n    }\n    ans+=a[0][0];\n    while(!pq.empty()){\n        pair<pair<int,int>,pair<int,int>> p = pq.top();\n        pq.pop();\n        int dist = -p.F.F ;\n        int val=25-p.F.S;\n        if(vis[dist]<val){\n            continue;\n        }\n        if(vis[dist]==28){\n            ans+='A'+val;\n        }\n        int x=p.S.F,y=p.S.S;\n        vis[dist] = min(vis[dist],val);\n        if(check(x+1,y)){\n            pq.push({{-(x+y+1),'Z'-a[x+1][y]},{x+1,y}});\n        }\n        if(check(x,y+1)){\n            pq.push({{-(x+y+1),'Z'-a[x][y+1]},{x,y+1}});\n        }\n    }\n    dfs(0,0);\n    int x=0,y=0;\n    rep(i,0,n+m){\n        if(x+1<n && can[x+1][y]==true){\n            res+=\"D\";\n            x=x+1;\n        }\n        else if(y+1<m && can[x][y+1]==true){\n            y=y+1;\n            res+=\"R\";\n        }\n    }\n    cout << res << endl;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int tests=1;\n    cin>> tests;\n    int cn=0;\n    while(tests--)\n    {\n        cn++;\n        cout << \"Case #\" << cn <<\": \";\n        solve();\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476878,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "1583809",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599976025,
        "updated_at_ms": 1599976025,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:19:09.863Z",
        "__v": 0
    },
    {
        "_id": "5f606af450731f1064908b69",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() \n\n{\n    int T,N,i,j,k,minx,miny,min=0,test=0,store;\n    scanf(\"%d\",&T);\n    for(i=0;i<T;i++)\n    {\n    scanf(\"%d\",&N);\n    int * x=(int *)malloc(sizeof(int)*N);\n    int * y=(int *)malloc(sizeof(int)*N);\n        for(j=0;j<N;j++)\n        {\n        scanf(\"%d\",&store);\n            x[j]=store;\n        scanf(\"%d\",&store);\n            y[j]=store;\n        }\n        for(j=0;j<N;j++)\n        {\n            test=0;\n            for(k=0;k<N;k++)\n            {\n                test=test+((x[j]-x[k])*(x[j]-x[k]))+((y[j]-y[k])*(y[j]-y[k]));\n                \n            }\n                \n            if(j==0)\n            {\n                min=test;\n                minx=x[j];\n                miny=y[j];\n                \n            }\n            if(test<min)\n            {\n                min=test;\n                minx=x[j];\n                miny=y[j];\n            }\n            \n        }\n        free(x);\n        free(y);\n        \n        printf(\"%d %d\\n\",minx,miny);\n        \n    }\n    \n    \n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476869,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5970394",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "NISHANK_CH",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599976011,
        "updated_at_ms": 1599976011,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:19:16.589Z",
        "__v": 0
    },
    {
        "_id": "5f606afa50731f1064908b6a",
        "submission_code": "t=int(input())\nan = {'2':'abc','3':'def','4':'ghi','5':'jkl','6':'mno','7':'pqrs','8':'tuv','9':'wxyz'}\nfor er in range(t):\n    n,q=map(int,input().split())\n    nl={}\n    for i in range(n):\n        a,b = map(str,input().split())\n        c=''\n        la=[]\n        la[:0]=a \n        for j in set(la):\n            if j in an['2']:\n                c+='2'\n            elif j in an['3']:\n                c+='3'\n            elif j in an['4']:\n                c+='4'\n            elif j in an['5']:\n                c+='5'\n            elif j in an['6']:\n                c+='6'\n            elif j in an['7']:\n                c+='7'\n            elif j in an['8']:\n                c+='8'\n            elif j in an['9']:\n                c+='9'\n        nl[a]=[b,c]\n    nq=list(map(str,input().split()))\n    print('Case #',end='')\n    print(er+1,end='')\n    print(':',end=' ')\n    for i in nq:\n        s=''\n        ll=[]\n        for j in nl.keys():\n            if j!=i:\n                la=[]\n                la[:0]=nl[j][0]+nl[j][1]\n                ll+=set(la)\n        la=[]\n        la[:0]=nl[i][0]+nl[i][1]\n        if len(set(ll)-set(la))==0:\n            print('2 ',end='')\n        else:\n            print('1 ',end='')",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476847,
        "contest_id": "115291",
        "problem_id": "177480",
        "site_user_id": "4613176",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "180330007_CSE_A",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Keypad Trouble",
        "problem_view_link": "keypad-trouble",
        "created_at_ms": 1599975976,
        "updated_at_ms": 1599975976,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:19:22.460Z",
        "__v": 0
    },
    {
        "_id": "5f606b0150731f1064908b6b",
        "submission_code": "#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define IO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define int long long \n#define endl \"\\n\"\n#define all(x) (x).begin(),(x).end()\nconst int MOD = 1e9+7;\nconst int mxN = 2e5+3;\n\nvoid solve(int num){\n    int n, m;\n    cin >> n >> m;\n    int a[n][m];\n    for(int i = 0; i < n; ++i){\n        for(int j = 0; j < m; ++j){\n            char c;\n            cin >> c;\n            a[i][j] = c - 'a';\n        }\n    }\n    vector<vector<int>> dp(n, vector<int> (m,0));\n    dp[0][0] = a[0][0];\n    for(int i = 1; i < n; ++i)dp[i][0] = dp[i-1][0] + a[i][0];\n    for(int j = 1; j < m; ++j)dp[0][j] = dp[0][j - 1] + a[0][j];\n    for(int i = 1; i < n; ++i){\n        for(int j = 1; j < m; ++j){\n            dp[i][j] = a[i][j] + min(dp[i-1][j] , dp[i][j - 1]);\n        }\n    }\n    \n    queue<pair<int, int>> qu;\n    qu.push(make_pair(n-1, m-1));\n    string ans = \"\";\n    while(!qu.empty()){\n        auto tp = qu.front();\n        qu.pop();\n        if(tp.first == 0 and tp.second == 0)break;\n        if(tp.first != 0 and tp.second != 0){\n            if(dp[tp.first -1][tp.second] < dp[tp.first][tp.second - 1]){\n                ans += 'D';\n                qu.push(make_pair(tp.first -1, tp.second));\n            }else{\n                ans += 'R';\n                qu.push(make_pair(tp.first , tp.second - 1));\n            }\n        }else if(tp.first == 0){\n            ans += 'R';\n            qu.push(make_pair(tp.first, tp.second -1));\n        }else{\n            ans += 'D';\n            qu.push(make_pair(tp.first -1, tp.second));\n        }\n    }\n    reverse(ans.begin(), ans.end());\n    cout << \"Case #\" << num << \": \" << ans << endl;\n}\n\nint32_t main(){\n    IO;\n    \n    int nT = 1;\n    cin >> nT;\n    for(int i = 1; i <= nT; ++i)\n        solve(i);\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476842,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "7776882",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "17131a0588",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599975967,
        "updated_at_ms": 1599975967,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:19:29.081Z",
        "__v": 0
    },
    {
        "_id": "5f606b0b50731f1064908b6c",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n       if(n==0) return 1; \n        return n*factorial(n-1);\n    }\n    public static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0||a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=0;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476839,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975966,
        "updated_at_ms": 1599985566,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:19:39.308Z",
        "__v": 0
    },
    {
        "_id": "5f606b1250731f1064908b6d",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint fact(int n)\n{\n    if (n == 0)\n        return 1;\n    else {\n        return n*fact(n-1);\n    }\n}\nint hcf(int a, int b)\n{\n    while (a != b)\n    {\n        if (a > b)\n        {\n            return hcf(a - b, b);\n        }\n        else\n        {\n            return hcf(a, b - a);\n        }\n    }\n    return a;\n}\nint main() {\n    long int n,a,b=1,c,count,i;\n    scanf(\"%d\",&n);\n    for(int j=0;j<n;j++)\n    {\n        count=0;\n        scanf(\"%d\",&a);\n        b=fact(a);\n        for (i = 1; i * i <= b; i++)\n        {\n            if (b % i == 0) \n            {\n                c= hcf(i,b/i);\n                //printf(\"%d\\n\",c);\n            }\n            if(c==1)\n            {\n                count=count+1;\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476829,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5093044",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218737004ITA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975945,
        "updated_at_ms": 1599977145,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:19:46.315Z",
        "__v": 0
    },
    {
        "_id": "5f606b1950731f1064908b6e",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst long long LIMIT = 1000000007;\nconst int SIZE = 1e6;\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    vector<int> primes(SIZE+100, 1);\n    vector<int> ans(SIZE+100, true);\n    \n    // Sieve \n    for (int i = 2; i*i <= SIZE+99; i++) { \n        if (primes[i] == 1) { \n            for (int j = i*i; j <= SIZE+99; j += i) \n                primes[j] = 0; \n        } \n    } \n    \n    long long pow2 = 1;\n    ans[1] = ans[0] = 0;\n    ans[2] = 1;\n    \n    \n    for(int i = 3; i <= SIZE+99; ++i){\n        if(primes[i] == 1){\n            pow2 = (2*pow2) % LIMIT;\n        }\n        ans[i] = pow2;\n    }\n  \n    int T;\n    cin >> T;\n    int N;\n    while(T--){\n        cin >> N;\n        cout << ans[N] << \"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476826,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9687262",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975930,
        "updated_at_ms": 1599978330,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:19:53.886Z",
        "__v": 0
    },
    {
        "_id": "5f606b2150731f1064908b6f",
        "submission_code": "#find the argmin\ndef value_f(cr):\n    f = []\n    for i in range(0,len(cr)):\n        x = cr[i][0]\n        y = cr[i][1]\n        temp = 0\n        for j in range(0,len(cr)):\n            xi = cr[j][0]\n            yi = cr[j][1]\n            temp += ((x-xi)**2) + ((y-yi)**2)\n        f.append((temp,x,y))\n    return min(f)[1], min(f)[2]\n\n\nt = int(input())\nout = []\nfor i in range(t):\n    n = int(input())\n    cr = []\n    for j in range(n):\n        x, y = map(int, input().split())\n        cr.append([x,y])\n    out.append(value_f(cr))\n\n#printing the output    \nfor i in range(0,len(out)):\n    print(out[i][0], out[i][1])\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476821,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7778720",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "itsabhihere",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975926,
        "updated_at_ms": 1599975926,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:20:01.336Z",
        "__v": 0
    },
    {
        "_id": "5f606b2850731f1064908b70",
        "submission_code": "import math\ndef factorial(n): \n    if n < 0: \n        return 0\n    elif n == 0 or n == 1: \n        return 1\n    else: \n        fact = 1\n        while(n > 1): \n            fact *= n \n            n -= 1\n    return fact \ndef coprime(n):\n    count=1\n    for i in range(2,int(math.sqrt(n))+1):\n        if(n%i==0):\n            while(n%i==0):\n                n//=i\n            if(n>1):\n                count+=1;\n    return count;\n\nn=int(input())\nlst=[]\nfor i in range(0, n): \n    ele = int(input()) \n    lst.append(ele)\nfor i in lst:\n    ans=coprime(factorial(int(i)))\n    print(ans)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476819,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6857762",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733036CSE",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975924,
        "updated_at_ms": 1599977124,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:20:08.076Z",
        "__v": 0
    },
    {
        "_id": "5f606b2f50731f1064908b71",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define mod 1000000007\n#define f(i,a,b) for(ll i=a;i<b;i++)\n#define rf(i,a,b) for(ll i=a;i>=b;i--)\n#define sf(i,s) for(ll i=0;s[i]!='\\0';i++)\n#define watch(x) cout << (#x) << \" is \" << (x) << \"\\n\"\n#define inf 1e18\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define all(v) v.begin(),v.end()\n#define rall(v) v.rbegin(),v.rend()\n#define tr(v,i) for(typeof(v).begin() i = v.begin(); i != v.end(); i++)\n#define pre(v,x) (v.find(x) != v.end())\n#define vpre(v,x) (find(all(v),x) != v.end())\n#define gcd(x,y) __gcd(x,y)\n#define bc(x) __builtin_popcountll(x)\n//cin.ignore(1, '\\n');\nll power(ll a, ll b)\n{\n    if (b == 0)\n        return 1;\n    if (b == 1)\n        return a % mod;\n    else\n    {\n        ll t = power(a, b / 2);\n        if (b % 2 == 0)\n            return ((t % mod) * (t % mod)) % mod;\n        else\n            return ((((t % mod) * (t % mod)) % mod) * ((a % mod) % mod)) % mod;\n    }\n}\nll fact[1000001],factinv[1000001],natinv[1000001],N=1000000;\nvoid precompute()\n{\n    ll i;\n    fact[0]=1;\n    fact[1]=1;\n    factinv[0]=factinv[1]=natinv[0]=natinv[1]=1;\n    for(i=2;i<=N;i++)\n    {\n        natinv[i]=((natinv[mod%i]%mod)*(mod-mod/i)%mod)%mod;\n    }\n    for(i=2;i<=N;i++)\n    {\n        fact[i]=((fact[i-1]%mod)*(i%mod))%mod;\n        factinv[i]=((natinv[i]%mod)*(factinv[i-1]%mod))%mod;\n    }\n}\nvoid solve()\n{\nll x,y,x1,y1,x2,y2,z2,z1,x11,y11,z11,x22,y22,z22,x33,y33,z33,ans1,ans2,ans11,ans22,ans33,ansmain,ansextra,z,ans;\n    cin>>x>>y>>x1>>y1>>x2>>y2;\n    z=x+y;\n //   watch(fact[z]);\n    ans=(((fact[z]%mod)*(factinv[x]%mod)%mod)*(factinv[y])%mod)%mod;\n    z1=x1+y1;\n    ans1=(((fact[z1]%mod)*(factinv[x1]%mod)%mod)*(factinv[y1])%mod)%mod;\n    x11=x-x1;\n    y11=y-y1;\n    z11=x11+y11;\n    ans11=(((fact[z11]%mod)*(factinv[x11]%mod)%mod)*(factinv[y11])%mod)%mod;\n    z2=x2+y2;\n    ans2=(((fact[z2]%mod)*(factinv[x2]%mod)%mod)*(factinv[y2])%mod)%mod;\n    x22=x-x2;\n    y22=y-y2;\n    z22=x22+y22;\n    ans22=(((fact[z22]%mod)*(factinv[x22]%mod)%mod)*(factinv[y22])%mod)%mod;\n    x33=x2-x1;\n    y33=y2-y1;\n    z33=x33+y33;\n    ans33=(((fact[z33]%mod)*(factinv[x33]%mod)%mod)*(factinv[y33])%mod)%mod;\n    ansextra=((((ans1 % mod) * (ans22 % mod)) % mod) * ((ans33 % mod) % mod)) % mod;\n    ans1=((ans1%mod)*(ans11%mod))%mod;\n    ans2=((ans2%mod)*(ans22%mod))%mod;\n   // watch(ans);\n   // watch(ans1);\n    ansmain=(ans-ans1-ans2+ansextra+mod)%mod;\n    cout<<ansmain<<\"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll t = 1;\n    precompute();\n    cin >> t;\n    while (t--)\n    {\n        solve();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476818,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9631447",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "bugs_overflow",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599975922,
        "updated_at_ms": 1599977122,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:20:15.980Z",
        "__v": 0
    },
    {
        "_id": "5f606b3750731f1064908b72",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n        \n        return n*factorial(n-1);\n    }\n    public static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0)\n            return a;\n        if(a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=0;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476802,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975902,
        "updated_at_ms": 1599984302,
        "misc_notes": "[\"Runtime Error\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:20:23.147Z",
        "__v": 0
    },
    {
        "_id": "5f606b3d50731f1064908b73",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n#define all(v) v.begin(), v.end()\n#define endl   '\\n'\n\nconst int MOD = 1e9 + 7;\n\nstruct pt {\n    int x, y;\n    double z;\n};\n\npt min(vector<pt> &v) {\n    pt min = v[0];\n    for (int i = 0; i < v.size(); ++i)\n        if (min.z > v[i].z)\n            min = v[i];\n    return min;\n}\n\npt solve(vector<pt> &v) {\n\n    {\n        sort(all(v), [](auto a, auto b) { return a.x < b.x; });\n        auto T = accumulate(all(v), 0., [](auto a, auto b) { return a + b.x; });\n        for (int i = 0; i < v.size(); ++i)\n            v[i].z += v[i].x * (v.size() * v[i].x - 2 * T);\n    }\n\n    {\n        sort(all(v), [](auto a, auto b) { return a.y < b.y; });\n        auto T = accumulate(all(v), 0., [](auto a, auto b) { return a + b.y; });\n        for (int i = 0; i < v.size(); ++i)\n            v[i].z += v[i].y * (v.size() * v[i].y - 2 * T);\n    }\n\n    return min(v);\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    if (fopen(\"in.txt\", \"r\"))\n        freopen(\"in.txt\", \"r\", stdin);\n\n    int t;\n    cin >> t;\n    while (t--) {\n        int n;\n        cin >> n;\n\n        vector<pt> v(n, {0, 0, 0.});\n        for (auto &&i : v) cin >> i.x >> i.y;\n\n        auto ans = solve(v);\n        cout << ans.x << ' ' << ans.y;\n\n        cout << endl;\n    }\n\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476794,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4669945",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "160218733078CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975883,
        "updated_at_ms": 1599975883,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:20:29.392Z",
        "__v": 0
    },
    {
        "_id": "5f606b4350731f1064908b74",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int count=0;\n            int fact=1;\n            for(int j=2;j<=n;j++)\n                fact=fact*j;\n            if(fact==2)\n                System.out.println(1);\n            else\n            {\n                for(int k=1;k<fact/2;k++)\n                {\n                    if(fact%k==0)\n                    {\n                        int h=fact/k;\n                        h=h+k;\n                       // System.out.print(k+\" \"+h+\" \");\n                        int cnt=0;\n                        for(int l=2;l<h/2;l++)\n                        {\n                            if(h%l==0)\n                            {\n                                cnt=1;\n                                break;\n                            }\n                        }\n                        if(cnt==0)\n                            count=count+1;\n                    }\n                   \n                }\n             System.out.println(count);\n            }\n            }\n        }\n    }\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476793,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975882,
        "updated_at_ms": 1599975882,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:20:35.321Z",
        "__v": 0
    },
    {
        "_id": "5f606b4b50731f1064908b75",
        "submission_code": "#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;  \n#define min_heap(t) priority_queue<t,vector<t>,greater<t>>\n#define max_heap(t) priority_queue<t>\n#define ordered_set(x) tree<x, null_type, less<x>, rb_tree_tag, tree_order_statistics_node_update>\n#define orderKey order_of_key\n#define findOrder find_by_order\n#define F first\n#define S second\n#define pb emplace_back \n#define mp make_pair\n#define f(i,x,y) for(i=x;i<y;i++) \n#define fo(i,x,y) for(i=x;i>=y;i--)\n#define all(v) v.begin(),v.end()\n#define ss(v) stable_sort(all(v))\n#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define endl '\\n' \n#define pi  3.14159265358\nlong long po(long long int m,long long int n){\nlong long i=1; \nwhile(n>0)\n{\n    if(n%2==1)\n      i=(i*m);\n    n=n/2;\n    m=(m*m);\n}\nreturn(i);\n} \nvoid solve(void){  \n    ll n,m,i,j; \n    cin>>n>>m;\n    // scanf(\"%lld\",&n);\n    // scanf(\"%lld\",&m); \n    vector<vector<char>>s(n,vector<char>(m));\n    string D=\"D\",R=\"R\";\n    for(i=0;i<n;i++){\n        for(j=0;j<m;j++){\n            cin>>s[i][j];\n        } \n    }   \n    vector<vector<string>>dp(n,vector<string>(m+1)),point(n+1,vector<string>(m+1));\n    dp[0][0]=s[0][0]; \n    point[0][0]=\"\";\n    for(i=1;i<n;i++){\n        dp[i][0]=dp[i-1][0]+s[i][0];\n        point[i][0]=point[i-1][0]+D;\n    } \n    for(j=1;j<m;j++){\n        dp[0][j]=dp[0][j-1]+s[0][j];\n        point[0][j]=point[0][j-1]+R;\n    } \n    for(i=1;i<n;i++){\n        for(j=1;j<m;j++){\n            if(dp[i-1][j]>dp[i][j-1]){\n                dp[i][j]=dp[i][j-1]+s[i][j];\n                point[i][j]=point[i][j-1]+R;\n            }   \n            else if(dp[i-1][j]<dp[i][j-1]){\n                dp[i][j]=dp[i-1][j]+s[i][j];\n                point[i][j]=point[i-1][j]+D;\n            } \n            else{\n                if(point[i-1][j]<point[i][j-1]){\n                    dp[i][j]=dp[i-1][j]+s[i][j];\n                    point[i][j]=point[i-1][j]+D;\n                } \n                else{\n                    dp[i][j]=dp[i][j-1]+s[i][j];\n                    point[i][j]=point[i][j-1]+R;\n                }\n            }\n        }\n    } \n    cout<<point[n-1][m-1]<<endl;\n}\nint main(void){\n    fastio\n    ll __=1;\n    cin>>__;\n    for(ll x=1;x<=__;x++){\n        cout<<\"Case #\"<<x<<\": \";\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476769,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "5687885",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "balajipulugujju1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599975840,
        "updated_at_ms": 1599977040,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:20:43.931Z",
        "__v": 0
    },
    {
        "_id": "5f606b5150731f1064908b76",
        "submission_code": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Sep 13 10:54:00 2020\n\n@author: hamsini\n\"\"\"\n\nn=int(input())\nfor i in range(n):\n    t=int(input())\n    k=1\n    for j in range(1,t+1):\n        k=k*j\n    #print(k)  \n    l=[]\n    for j in range(1,k+1):\n        if(k%j==0):\n            l.append(j)\n    #print(l)\n    c=0\n    s=0\n    v=len(l)-1\n    for p in range(0,int(len(l)/2)):\n        f=0\n        if(l[p]*l[v]==k):\n            for i in range(2,l[p]+1):\n                if(l[p]%i==0 and l[v]%i==0):\n                    f=1\n                    break\n            if(f==0):\n                c=c+1\n            v=v-1\n                \n    print(c)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476758,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8984118",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "hamsiniparimala1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975825,
        "updated_at_ms": 1599975825,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:20:49.942Z",
        "__v": 0
    },
    {
        "_id": "5f606b5a50731f1064908b77",
        "submission_code": "import math\ndef factorial(n): \n    if n < 0: \n        return 0\n    elif n == 0 or n == 1: \n        return 1\n    else: \n        fact = 1\n        while(n > 1): \n            fact *= n \n            n -= 1\n    return fact \ndef coprime(n):\n    count=1\n    for i in range(2,int(math.sqrt(n))+1):\n        if(n%i==0):\n            while(n%i==0):\n                n//=i\n            if(n>1):\n                count+=1;\n    return count;\n\nn=int(input())\nlst=[]\nfor i in range(0, n): \n    ele = int(input()) \n    lst.append(ele)\nfor i in lst:\n    ans=coprime(factorial(int(i)))\n    print(ans)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476757,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6857762",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733036CSE",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975825,
        "updated_at_ms": 1599975825,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:20:58.265Z",
        "__v": 0
    },
    {
        "_id": "5f606b6350731f1064908b78",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n        if(n==0)\n            return 1;\n        return n*factorial(n-1);\n    }\n    public static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0)\n            return a;\n        if(a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=0;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476756,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975824,
        "updated_at_ms": 1599983024,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:21:07.565Z",
        "__v": 0
    },
    {
        "_id": "5f606b6b50731f1064908b79",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    public static int fun(int a,int b,int[] x,int[] y)\n    {\n        int r=0;\n        int N=x.length;\n        for(int j=0;j<N;j++)\n        {\n            r=r+((a-x[j])*(a-x[j]))+((b-y[j])*(b-y[j]));\n        }\n        return r;\n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int test=sc.nextInt();\n        int p=1,min=0,m=0;\n        while(p<=test){\n            int n=sc.nextInt();\n            int[] A=new int[n];\n            int[] x=new int[n];\n            int[] y=new int[n];\n            for(int i=0;i<(2*n);i++)\n            {\n                if(i%2==0)\n                {\n                    x[i/2]=sc.nextInt();\n                }\n                else{\n                    y[i/2]=sc.nextInt();\n                }\n            }\n            for(int i=0;i<n;i++)\n            {\n                A[i]=fun(x[i],y[i],x,y);\n                //System.out.print(A[i]+\" \");\n            }\n            p++;\n            min=A[0];\n            m=0;\n            for(int i=0;i<n;i++)\n            {\n                if(A[i]<min)\n                {\n                    min=A[i];\n                    m=i;\n                }\n            }\n            System.out.println(x[m]+\" \"+y[m]);\n            \n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476752,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6639775",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vangaveetimanis1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975811,
        "updated_at_ms": 1599975811,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:21:15.470Z",
        "__v": 0
    },
    {
        "_id": "5f606b7550731f1064908b7a",
        "submission_code": "import math\nfrom itertools import combinations\nn=int(input())\nl=[]\nfor i in range(n):\n    def gcd(a,b):\n        minimum=min(a,b)\n        for i in range(2,minimum+1):\n            if(a%i==0 and b%i==0):\n                return False\n        return True\n    def factors(x):\n        y=[]\n        for i in range(1, x + 1):\n            if x % i == 0:\n               y.append(i)\n        return y\n    x=int(input())\n    f=math.factorial(x)\n    #print(f)\n    c=0\n    p=factors(f)\n    for i in range(0,len(p)):\n        for j in range(i+1,len(p)):\n            if(p[i]*p[j]==f):\n                if(gcd(p[i],p[j])==True):\n                    c+=1\n    l.append(c)\nfor i in l:\n    print(i)\n    \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476743,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7170209",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "srujith2k",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975795,
        "updated_at_ms": 1599975795,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:21:25.302Z",
        "__v": 0
    },
    {
        "_id": "5f606b7e50731f1064908b7b",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    static boolean iscoprime(long a,long b)\n    {\n        if(a==b)\n        {\n            return false;\n        }\n        else{\n            long sm=a;\n            long ln=b;\n            long div=1;\n            if(sm>ln)\n            {\n                sm=b;\n                ln=a;\n            }\n            while(ln>sm)\n            {\n                long rem = ln % sm;\n                if (rem == 0)\n                {\n                    div = sm;\n                    break;\n                }\n                else\n                {\n                    ln = sm;\n                    sm = rem;\n                }\n            }\n            if(div==1)\n            {\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        \n    }\n    static long factorial(long n)\n    {\n        long ret=1;\n        for(long i=1;i<=n;i++)\n        {\n            ret=ret*i;\n        }\n        return ret;\n    }\n    static long noofvalues(long a)\n    {\n        ArrayList<Long> lit = new ArrayList();\n        long val=0;\n        for(long i=1;i<=(a/2);i++)\n        {\n            if(a%i==0)\n            {\n                    if(iscoprime(i,a/i))\n                    {\n                        if(!lit.contains(i)){\n                        lit.add(i);\n                        lit.add(a/i);\n                        val=val+1;\n                        }\n                    }\n            }\n        }\n        return val;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scn = new Scanner(System.in);\n        int notest=scn.nextInt();\n        long[] arr = new long[notest];\n        for(int i=0;i<notest;i++)\n        {\n            arr[i]=scn.nextLong();\n        }\n        scn.close();\n        for(int i=0;i<notest;i++)\n        {\n            System.out.println(noofvalues(factorial(arr[i])));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476741,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4679580",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "160218733021CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975793,
        "updated_at_ms": 1599978193,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:21:34.974Z",
        "__v": 0
    },
    {
        "_id": "5f606b8750731f1064908b7c",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n        if(n==0)\n            return 1;\n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0)\n            return a;\n        if(a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=0;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476728,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975777,
        "updated_at_ms": 1599981777,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:21:43.424Z",
        "__v": 0
    },
    {
        "_id": "5f606b9150731f1064908b7d",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\nusing namespace std;\n#define all(a)       a.begin(), a.end()\n#define pb           push_back\n#define mp           make_pair\n#define FAST_IO      ios_base::sync_with_stdio(false); cin.tie(NULL);\ntypedef long long int ll;\ntypedef long double ld;\nconst int MOD = 1e9 + 7;\nll power(ll a, ll n) {ll p = 1; while (n > 0) {if (n % 2) {p = p * a;} n >>= 1; a *= a;} return p;}\nll power(ll a, ll n, ll mod) {ll p = 1; while (n > 0) {if (n % 2) {p = p * a; p %= mod;} n >>= 1; a *= a; a %= mod;} return p % mod;}\n\nvoid solve(ll test){\n    ll n,m;\n    cin>>n>>m;\n    vector<string> s;\n    for(ll i = 0; i < n; i++) {\n        string str;\n        cin>>str;\n        s.push_back(str);\n    }\n    \n    pair<string,string> dp[n][m];\n    //edge case\n    dp[n-1][m-1].second = s[n-1][m-1];\n    dp[n-1][m-1].first = \"\";\n    \n    for(ll i = n-1; i >= 0; i--) {\n        for(ll j = m-1; j>= 0; j--) {\n            if(i == n-1 && j == m-1) {\n                continue;\n            }\n            string tmp;\n            if(j+1 < m) {\n                tmp = s[i][j] + dp[i][j+1].second ;\n                dp[i][j].second = tmp;\n                dp[i][j].first = \"R\" + dp[i][j+1].first;\n            }\n            if(i+1 < n) {\n                if(tmp == \"\") {\n                    dp[i][j].first = \"D\" + dp[i+1][j].first;\n                    dp[i][j].second = s[i][j] + dp[i+1][j].second;\n                }\n                else if(dp[i][j].second >= s[i][j] + dp[i+1][j].second) {\n                    if(dp[i][j].second == s[i][j] + dp[i+1][j].second) {\n                        dp[i][j].first = min(dp[i][j].first,\"D\" + dp[i+1][j].first);\n                    } else {\n                    dp[i][j].first = \"D\" + dp[i+1][j].first;\n                    dp[i][j].second = min(dp[i][j].second,s[i][j] + dp[i+1][j].second);\n                    dp[i][j].second = tmp;\n                    }\n                }\n            }\n        }\n    }\n    string ans = \"\";\n    reverse(ans.begin(),ans.end());\n    cout<<\"Case #\"<<test<<\": \"<<dp[0][0].first<<endl;\n}\n\nint main() {\n  FAST_IO\n  ll t;\n  cin>>t;\n  //t = 1;\n  for(ll i = 1; i <= t; i++)\n  {\n    solve(i);\n  }\n  return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476718,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "5043696",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "nimmi_001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599975763,
        "updated_at_ms": 1599975763,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:21:53.868Z",
        "__v": 0
    },
    {
        "_id": "5f606b9950731f1064908b7e",
        "submission_code": "import sys\nMAX = 1000000\nprefix =[0]*(MAX + 1) \ndef buildPrefix(): \n    prime = [1]*(MAX + 1) \n    p = 2\n    while(p * p <= MAX):  \n        if (prime[p] == 1): \n            i = p * 2\n            while(i <= MAX): \n                prime[i] = 0\n                i += p \n        p+=1\n    for p in range(2,MAX+1):  \n        prefix[p] = prefix[p - 1] \n        if (prime[p]==1): \n            prefix[p]+=1\ndef query(L, R): \n    return prefix[R]-prefix[L - 1] \ndef pow(n,mod):\n    ans=1\n    if n==0:\n        return 0\n    for i in range(n-1):\n        ans=((ans%mod)*2)%mod\n    return ans\nt=int(input())\nbuildPrefix()\nfor i in range(t):\n    n=int(sys.stdin.readline())\n    sys.stdout.write(str(pow(query(1,n),1000000007))+'\\n')",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476707,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4674163",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975740,
        "updated_at_ms": 1599980540,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:22:01.444Z",
        "__v": 0
    },
    {
        "_id": "5f606ba050731f1064908b7f",
        "submission_code": "\ndef fact(n):\n    if(n == 1):\n        return n\n    else:\n        return n*fact(n-1)\n\nt=int(input())\narr = []\nwhile True:\n    try:\n        ele = int(input())\n    except EOFError:\n        break\n    arr.append(ele)\nfor n in arr:\n    num=fact(n)\n    c=0\n    for i in range(2, num + 1):\n        if(num % i == 0):\n            isprime = 1\n            for j in range(2, (i //2 + 1)):\n                if(i % j == 0):\n                    isprime = 0\n                    break\n            \n            if (isprime == 1):\n                c+=1\n    print(pow(2,(c-1)))          ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476705,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675198",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Keerti159",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975737,
        "updated_at_ms": 1599975737,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:22:08.715Z",
        "__v": 0
    },
    {
        "_id": "5f606baa50731f1064908b80",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n  int n,fact=1,num,i,coount=0;\n    printf(\"enter a number \\n\");\n    scanf(\"%d\",&n);\n    while(n>0)\n    {\n        fact=fact*n;\n    n--;\n}\nprintf(\"factorial value of a number is %d \\n\",fact);\n    printf(\"\\n enter the number : \");\n    scanf(\"%d\",&num);\n    printf(\"\\n the factors of %d are:\",num);\nfor(i=1;1<=num;i++)\n{\n    if(num % i==0)\n    {\n        ++count;\n        printf(\"%d\",i);\n    }\n}\n}    \n\n  \n      \n return 0;       \n}    \n    \n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476690,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9676171",
        "submission_status": "Compilation error",
        "submission_language": "c",
        "site_user_handle": "chippasowmya123",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975697,
        "updated_at_ms": 1599975697,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T07:22:18.569Z",
        "__v": 0
    },
    {
        "_id": "5f606bb050731f1064908b81",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define mod 1000000007\n#define f(i,a,b) for(ll i=a;i<b;i++)\n#define rf(i,a,b) for(ll i=a;i>=b;i--)\n#define sf(i,s) for(ll i=0;s[i]!='\\0';i++)\n#define watch(x) cout << (#x) << \" is \" << (x) << \"\\n\"\n#define inf 1e18\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define all(v) v.begin(),v.end()\n#define rall(v) v.rbegin(),v.rend()\n#define tr(v,i) for(typeof(v).begin() i = v.begin(); i != v.end(); i++)\n#define pre(v,x) (v.find(x) != v.end())\n#define vpre(v,x) (find(all(v),x) != v.end())\n#define gcd(x,y) __gcd(x,y)\n#define bc(x) __builtin_popcountll(x)\n//cin.ignore(1, '\\n');\nll power(ll a, ll b)\n{\n    if (b == 0)\n        return 1;\n    if (b == 1)\n        return a % mod;\n    else\n    {\n        ll t = power(a, b / 2);\n        if (b % 2 == 0)\n            return ((t % mod) * (t % mod)) % mod;\n        else\n            return ((((t % mod) * (t % mod)) % mod) * ((a % mod) % mod)) % mod;\n    }\n}\nll fact[1000001],factinv[1000001],natinv[1000001],N=1000000;\nvoid precompute()\n{\n    ll i;\n    fact[0]=1;\n    fact[1]=1;\n    factinv[0]=factinv[1]=natinv[0]=natinv[1]=1;\n    for(i=2;i<=N;i++)\n    {\n        natinv[i]=natinv[mod%i]*(mod-mod/i)%mod;\n    }\n    for(i=2;i<=N;i++)\n    {\n        fact[i]=((fact[i-1]%mod)*(i%mod))%mod;\n        factinv[i]=((natinv[i]%mod)*(factinv[i-1]%mod))%mod;\n    }\n}\nvoid solve()\n{\nll x,y,x1,y1,x2,y2,z2,z1,x11,y11,z11,x22,y22,z22,x33,y33,z33,ans1,ans2,ans11,ans22,ans33,ansmain,ansextra,z,ans;\n    cin>>x>>y>>x1>>y1>>x2>>y2;\n    z=x+y;\n //   watch(fact[z]);\n    ans=(((fact[z]*factinv[x])%mod)*(factinv[y])%mod)%mod;\n    z1=x1+y1;\n    ans1=(((fact[z1]*factinv[x1])%mod)*(factinv[y1])%mod)%mod;\n    x11=x-x1;\n    y11=y-y1;\n    z11=x11+y11;\n    ans11=(((fact[z11]*factinv[x11])%mod)*(factinv[y11])%mod)%mod;\n    z2=x2+y2;\n    ans2=(((fact[z2]*factinv[x2])%mod)*(factinv[y2])%mod)%mod;\n    x22=x-x2;\n    y22=y-y2;\n    z22=x22+y22;\n    ans22=(((fact[z22]*factinv[x22])%mod)*(factinv[y22])%mod)%mod;\n    x33=x2-x1;\n    y33=y2-y1;\n    z33=x33+y33;\n    ans33=(((fact[z33]*factinv[x33])%mod)*(factinv[y33])%mod)%mod;\n    ansextra=((((ans1 % mod) * (ans22 % mod)) % mod) * ((ans33 % mod) % mod)) % mod;\n    ans1=((ans1%mod)*(ans11%mod))%mod;\n    ans2=((ans2%mod)*(ans22%mod))%mod;\n   // watch(ans);\n   // watch(ans1);\n    ansmain=ans-ans1-ans2+ansextra;\n    cout<<ansmain<<\"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll t = 1;\n    precompute();\n    cin >> t;\n    while (t--)\n    {\n        solve();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476687,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "9631447",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "bugs_overflow",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599975691,
        "updated_at_ms": 1599975691,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:22:24.591Z",
        "__v": 0
    },
    {
        "_id": "5f606bba50731f1064908b82",
        "submission_code": "test=int(input())\nfor _ in range(test):\n    n=int(input())\n    x=[]\n    y=[]\n    for _ in range(n):\n        a,b=map(int,input().split())\n        x.append(a)\n        y.append(b)\n    xmid=sum(x)//n\n    ymid=sum(y)//n\n    xmin=x[0]\n    ymin=y[0]\n    min=(xmid-x[0])**2+ (ymid-y[0])**2\n    for i in range(n):\n      dist=(xmid-x[i])**2+ (ymid-y[i])**2\n      if(dist<min):\n        xmin=x[i]\n        ymin=y[i]\n    print(xmin,ymin)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476683,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4622965",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "vision01",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975684,
        "updated_at_ms": 1599978084,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:22:34.315Z",
        "__v": 0
    },
    {
        "_id": "5f606bc350731f1064908b83",
        "submission_code": "t= int(input())\nfor t1 in range(t):\n    N=list(map(int,input().split()))\n    M=[]\n    for i in range(N[1]):\n        M.append(list(map(int,input().split())))\n    print(M)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476676,
        "contest_id": "115291",
        "problem_id": "178172",
        "site_user_id": "5235288",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "anudeep_kalitkar",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Well Placed Knights",
        "problem_view_link": "well-placed-knights",
        "created_at_ms": 1599975677,
        "updated_at_ms": 1599975677,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:22:43.633Z",
        "__v": 0
    },
    {
        "_id": "5f606bcd50731f1064908b84",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\nint t;\n        Scanner sc = new Scanner(System.in);\n        t= sc.nextInt();\n        while(t>0){\n            int n= sc.nextInt();\n            int a[] = new int[n];\n            int b[] = new int[n];\n            for(int i=0;i<n;i++){\n                a[i]=sc.nextInt();\n                b[i]=sc.nextInt();\n            }\n            int k=0;\n            int sum=0;\n            int min=0;\n            int c=0;\n            int d=0;\n            while(k<n){\n                sum=0;\n                for(int j=0;j<n;j++){\n                    int x=(a[k]-a[j])*(a[k]-a[j]);\n                    int y=(b[k]-b[j])*(b[k]-b[j]);\n                    sum=sum+(x+y);\n\n                }\n\n                if(k==0){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                if(sum<min){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                \n                k++;\n            }\n            System.out.println(c+\" \"+d);\n            t--;\n        }    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476667,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9686060",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "kedharnathsonu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975656,
        "updated_at_ms": 1599976856,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:22:53.201Z",
        "__v": 0
    },
    {
        "_id": "5f606bd350731f1064908b85",
        "submission_code": "def gcd(a,b):\n    while(b!=0):\n        a,b =b,a%b\n    return a\n\ndef coprime(a,b):\n    return gcd(a,b)==1\n\ndef fact(n):\n    if(n==0 or n==1):\n        return 1\n    else:\n        return n*fact(n-1)\n    \nn=int(input())\nl=[]\nfor i in range(n):\n    a=int(input())\n    f=fact(a)\n    count=0\n    for i in range(1,a):\n        if(coprime(i,f//i)==1):\n            count+=1\n    l.append(count)\nfor i in l:\n    print(i)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476648,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4670161",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "AnvithaGutha",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975615,
        "updated_at_ms": 1599979215,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:22:59.913Z",
        "__v": 0
    },
    {
        "_id": "5f606bdb50731f1064908b86",
        "submission_code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll =long long int;\n\nll md=pow(10,9)+7;\nll fac[1000001],ans[1000001],fact[1000001];\nunordered_map<ll,ll> mp;\nvoid g(int i)\n{\n   // mp.clear();\n    while(i%2==0)\n    {\n        mp[2]++;\n        i/=2;\n    }\n    for(int k=3;k<=sqrt(i);k+=2)\n    {\n        while(i%k==0)\n        {\n            mp[k]++;\n            i/=k;\n        }\n    }\n    if(i>1)\n    {\n        mp[i]++;\n    }\n   // return mp.size();\n}\nvoid f()\n{\n    ans[0]=0;\n    ll x;\n    ans[1]=1;\n    for(int i=2;i<=1000000;i++)\n    {\n        x=ans[i-1]*2;\n        x%=md;\n        ans[i]=x;\n    }\n    fac[0]=0;\n    fac[1]=0;\n    fac[2]=1;\n    fac[3]=1;\n    mp[2]=1;\n    //mp[3]=1;\n    for(int i=3;i<=1000000;i++)\n    {\n        g(i);\n        fac[i]=mp.size();\n    }\n    /*fact[1]=1;\n    for(int k=2;k<=1000000;k++)\n    {\n        x=k*fact[k-1];\n        x%=md;\n        fact[k]=x;\n    }*/\n}\n\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    f();\n    ll t,n;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cout<<ans[fac[n]]<<\"\\n\";\n       //cout<<fact[n]<<\"\\n\";;\n    }\n    \n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476645,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2892432",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "17H51A05M7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975609,
        "updated_at_ms": 1599978009,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:23:07.284Z",
        "__v": 0
    },
    {
        "_id": "5f606be150731f1064908b87",
        "submission_code": "import sys\nimport math\nimport bisect\nmod=pow(10,9)+7\ninput=sys.stdin.readline\ndef binary_search(arr, low, high, x): \n\n    if high >= low: \n\n        mid = (high + low) // 2\n        if arr[mid] == x: \n            return mid \n\n        elif arr[mid] > x: \n            return binary_search(arr, low, mid - 1, x) \n        else:\n            return binary_search(arr, mid + 1, high, x) \n\n    else: \n        return -1\ndef gg():\n    n=pow(10,6)\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True):\n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    l1=[0,0]\n    c=0\n    for i in range(2,n+1):\n        if(prime[i]==True):\n            c=c+1\n        l1.append(c)\n    return l1\n        \ndef power(x, y, p) : \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0  \n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1 \n        x = (x * x) % p \n    return res \nl2=gg()\nfor _ in range(int(input())):\n    n=int(input())\n    v=power(2,l2[n]-1,mod)\n    print(v)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476642,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975598,
        "updated_at_ms": 1599980398,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:23:13.530Z",
        "__v": 0
    },
    {
        "_id": "5f606be850731f1064908b88",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n/*code from gfg*/  \n// to store euler's totient function \nint phi[100000]; \n  \n// to store required answer \nint S[10000]; \n  \n// Computes and prints totient of all numbers \n// smaller than or equal to N. \nvoid computeTotient(int N) \n{ \n    // Initialise the phi[] with 1 \n    for (int i = 1; i < N; i++) \n        phi[i] = i; \n  \n    // Compute other Phi values \n    for (int p = 2; p < N; p++) { \n  \n        // If phi[p] is not computed already, \n        // then number p is prime \n        if (phi[p] == p) { \n  \n            // Phi of a prime number p is \n            // always equal to p-1. \n            phi[p] = p - 1; \n  \n            // Update phi values of all \n            // multiples of p \n            for (int i = 2 * p; i < N; i += p) { \n  \n                // Add contribution of p to its \n                // multiple i by multiplying with \n                // (1 - 1/p) \n                phi[i] = (phi[i] / p) * (p - 1); \n            } \n        } \n    } \n} \n  \n// function to compute number coprime pairs \nvoid CoPrimes(int a) \n{ \n    // function call to compute \n    // euler totient function \n    computeTotient(a); \n  \n    // prefix sum of all euler totient function values \n    for (int i = 1; i < a; i++) \n        S[i] = S[i - 1] + phi[i]; \n} \n  \n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t;\n    cin>>t;\n    while(t--)\n    {\n        long long a;\n        cin>>a;\n        for(int i=a-1;i>=1;i--)\n        {\n            a*=i;\n        }\n          CoPrimes(a);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476638,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6288064",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "iyanampudinavya2",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975594,
        "updated_at_ms": 1599975594,
        "misc_notes": "[\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:23:20.640Z",
        "__v": 0
    },
    {
        "_id": "5f606bee50731f1064908b89",
        "submission_code": "from sys import stdin,stdout\nimport math\nfor _ in range(int(stdin.readline())):\n    n=int(stdin.readline())\n    a=10**9+7\n    if n==1:\n          (stdout.write(1))\n    elif n==2:\n            print(1)     \n    else:    \n        n=math.factorial(n)\n        m=round(n**0.5)\n        cnt=0\n        for i in range(2,m+1):\n            if n%i==0:\n                if math.gcd(i,n//i)==1:\n                    cnt+=1\n        s=str((cnt+1)%a)           \n        (stdout.write((s)+'\\n'))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476636,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7435030",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "Navaneeth__45",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975589,
        "updated_at_ms": 1599976789,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:23:26.435Z",
        "__v": 0
    },
    {
        "_id": "5f606bf450731f1064908b8a",
        "submission_code": "/* ****Ragnar7 _Lawliet_**** */\n/* First, solve the problem.Then write the code. */\n#include<bits/stdc++.h>\n#define ll          long long\n#define ld             long double\n#define hell        1000000007\n#define time        cerr << \"\\nTime elapsed: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\nstd::mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());\nusing namespace std;\n\nll check(string &a,string &b)\n{\n    if(a.size()==0)\n        return 1;\n    if(b.size()==0)\n        return 0;\n    for(ll i =0;i<a.size();i++)\n    {\n        if(a[i]<b[i])\n            return 0;\n        else if(a[i]>b[i])\n            return 1;\n    }\n    return 2;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    // #ifndef ONLINE_JUDGE\n    // freopen (\"input.txt\",\"r\",stdin);\n    // // freopen (\"output.txt\",\"w\",stdout);\n    // #endif\n    ll t = 1;\n    cin>>t;\n    for(ll tt=1;tt<=t;tt++)\n    {\n        ll n,m;\n        cin>>n>>m;\n        char arr[n][m];\n        for(ll i=0;i<n;i++)\n            for(ll j=0;j<m;j++)\n                cin>>arr[i][j];\n\n        ll x = 0,y=0;\n        ll cnt = 0;\n        cout<<\"Case #\"<<tt<<\": \";\n        while((x!=n-1 or y!=m-1))\n        {\n            string a = \"\",b=\"\";\n            for(ll i = y+1; i<=m-1; i++)\n                a+=arr[x][i];\n            for(ll i = x+1; i<=n-1; i++ )\n            {\n                a+=arr[i][m-1];\n            }\n\n            for(ll i = x+1;i<=n-1;i++)\n                b+=arr[i][y];\n            for(ll i = y+1;i<=m-1;i++)\n                b+=arr[n-1][i];\n            // cout<<a<<\" \"<<b<<endl;\n            if(check(a,b)==0 and y<m-1)\n            {\n                cout<<\"R\";\n                    y++;\n            }\n            else if(check(a,b)==1 and x<n-1)\n            {\n                cout<<\"D\";\n                x++;\n            }\n            else if(check(a,b)==2)\n            {\n                if(x<n-1)\n                {\n                   cout<<\"D\";\n                    x++; \n                }\n                else\n                {\n                   cout<<\"R\";\n                    y++;  \n                }\n            }\n            else if(x<n-1)\n            {\n               cout<<\"D\";\n                    x++;  \n            }\n            else\n            {\n                cout<<\"R\";\n                    y++; \n            }\n            // cnt++;\n            // if(cnt>20)\n            //     break;\n        }\n        cout<<'\\n';\n        \n    }\n\n    \n    time\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476625,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3583145",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "Ragnar_7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599975572,
        "updated_at_ms": 1599975572,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:23:32.583Z",
        "__v": 0
    },
    {
        "_id": "5f606bfd50731f1064908b8b",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint fact(int n)\n{\n    if (n == 0)\n        return 1;\n    else {\n        return n*fact(n-1);\n        }\n}\nint hcf(int a, int b)\n{\n    while (a != b)\n    {\n        if (a > b)\n        {\n            return hcf(a - b, b);\n        }\n        else\n        {\n            return hcf(a, b - a);\n        }\n    }\n    return a;\n}\nint main() {\n    long int n,a,b,c,count,i;\n    scanf(\"%d\",&n);\n    for(int j=0;j<n;j++)\n    {\n        count=0;\n        scanf(\"%d\",&a);\n        b=fact(a);\n        for (i = 1; i * i <= b; i++)\n        {\n            if (b % i == 0) \n            {\n                c= hcf(i,b/i);\n                //printf(\"%d\\n\",c);\n            }\n            if(c==1)\n            {\n                count=count+1;\n            }\n        }\n        printf(\"%d\\n\",count);\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476620,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5093044",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218737004ITA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975561,
        "updated_at_ms": 1599975561,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:23:41.383Z",
        "__v": 0
    },
    {
        "_id": "5f606c0650731f1064908b8c",
        "submission_code": "import sys\nimport math\nimport bisect\nmod=pow(10,9)+7\ninput=sys.stdin.readline\ndef binary_search(arr, low, high, x): \n\n    if high >= low: \n\n        mid = (high + low) // 2\n        if arr[mid] == x: \n            return mid \n\n        elif arr[mid] > x: \n            return binary_search(arr, low, mid - 1, x) \n        else:\n            return binary_search(arr, mid + 1, high, x) \n\n    else: \n        return -1\ndef gg():\n    n=pow(10,6)\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True):\n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    l1=[0,0]\n    c=0\n    for i in range(2,n+1):\n        if(prime[i]==True):\n            c=c+1\n        l1.append(c)\n    return l1\n        \ndef power(x, y, p) : \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0  \n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1 \n        x = (x * x) % p \n    return res \nl2=gg()\nfor _ in range(int(input())):\n    n=int(input())\n    v=2**(l2[n]-1)%mod\n    print(v)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476616,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975553,
        "updated_at_ms": 1599979153,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:23:50.701Z",
        "__v": 0
    },
    {
        "_id": "5f606c1150731f1064908b8d",
        "submission_code": "import math\nm=int(input())\nwhile m>0:\n         n=int(input())\n         n=math.factorial(n)\n         count = 0\n         for i in range(1, int(math.sqrt(n)) + 1) : \n                  if n % i == 0 :\n                           if math.gcd(i, n // i) == 1 :  \n                                    count += 1\n         count=count%1000000007\n         print( count) \n         m-=1 \n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476610,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4544619",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vallalasaivishw1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975533,
        "updated_at_ms": 1599975533,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:24:01.145Z",
        "__v": 0
    },
    {
        "_id": "5f606c1b50731f1064908b8e",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\nint f(int a[],int b[],int a[o],int b[o],int q);\nint main() {\n    \n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int i,t,n,x[50],y[50],j,k,result[50],min,val,l;\n    scanf(\"%d %d\",&t,&n);\n    for(i=0;i<t;i++){\n        for(j=0;j<n;j++){\n            scanf(\"%d %d\",&x[j],&y[j]);\n            }\n        for(k=0;k<n;k++){\n            result[k]=f(x[],y[],x[k],y[k],n);\n            }\n        min=result[0];\n        for(l=0;l<n;l++){\n            if(min>result[l]){\n                min=result[l];\n                val=l;\n            }\n        }\n        printf(\"%d %d\",x[val],y[val]);\n    }\n    return 0;\n}\nint f(a[],b[],a[o],b[o],q)\n    {\n    int sum=0,p;\n    for(p=0;p<q;p++){\n        sum=sum+(a[o]-a[p])*(a[o]-a[p])+(b[o]-b[p])*(b[o]-b[p]);\n        }\n    return sum;\n    }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476605,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9618012",
        "submission_status": "Compilation error",
        "submission_language": "c",
        "site_user_handle": "ahladachintalap1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975528,
        "updated_at_ms": 1599975528,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T07:24:11.489Z",
        "__v": 0
    },
    {
        "_id": "5f606c2350731f1064908b8f",
        "submission_code": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    a,b=[],[]\n    for i in range(n):\n        xy=input().split()\n        x=int(xy[0])\n        y=int(xy[1])\n        a.append(x)\n        b.append(y)\n    l=[]\n    for i in range(n):\n        sum=0\n        for j in range(n):\n            sum+=pow((a[i]-a[j]),2)+pow(b[i]-b[j],2)\n        l.append([sum,(a[i],b[i])])\n    l.sort(key = lambda l: l[0])\n    a=l[0][1]\n    print(a[0],end=' ')\n    print(a[1],end=' ')\n    print('\\r')",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476589,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4696216",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anurimavaishnav1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975494,
        "updated_at_ms": 1599975494,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:24:19.985Z",
        "__v": 0
    },
    {
        "_id": "5f606c2950731f1064908b90",
        "submission_code": "T=int(input())\ndef fun(i,j,m,ans,res):\n    if(i==len(m)-1 and j==len(m[0])-1):\n        lis.append([res,ans])\n    k1,k2=\"\",\"\"\n    if(i+1<len(m)):\n        k1=m[i+1][j]\n    if(j+1<len(m[0])):\n        k2=m[i][j+1]\n    if(k1!=\"\" and k2!=\"\"):\n        if(k1>k2):\n            fun(i,j+1,m,ans+\"R\",res+k2)\n        elif(k1<k2):\n            fun(i+1,j,m,ans+\"D\",res+k1)\n        else:\n            fun(i+1,j,m,ans+\"D\",res+k1)\n            fun(i,j+1,m,ans+\"R\",res+k2)\n    if(k1==\"\" and k2!=\"\"):\n        fun(i,j+1,m,ans+\"R\",res+k2)\n    elif(k1!=\"\" and k2==\"\"):\n        fun(i+1,j,m,ans+\"D\",res+k1)\nfor _ in range(T):\n    x=[int(a) for a in input().split()]\n    m=[]\n    for i in range(x[0]):\n        m.append(input())\n    lis=[]\n    fun(0,0,m,\"\",\"\")\n    lis.sort()\n    print(\"Case #\",end=\"\")\n    print(_+1,end=\"\")\n    print(\":\",lis[0][1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476582,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "6986737",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vegishanmukh7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599975486,
        "updated_at_ms": 1599975486,
        "misc_notes": "[\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:24:25.926Z",
        "__v": 0
    },
    {
        "_id": "5f606c3050731f1064908b91",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int i,j,T=0,N=0,x[100000],y[100000],a,b,k,sum,minsum,x_c,y_c;\n    scanf(\"%d\",&T);\n    for(i=0;i<T;i++)\n    {\n        scanf(\"%d\",&N);\n        for(j=0;j<N;j++)\n        {\n            scanf(\"%d\",&x[j]);\n            scanf(\"%d\",&y[j]);\n            //printf(\"%d\",x[j]);\n            //printf(\"%d\\n\",y[j]);\n        }\n        for(j=0;j<N;j++)\n        {\n            //minsum=0;\n            sum=0;\n            a=x[j];\n            b=y[j];\n            //printf(\"%d%d\",a,b);\n            for(k=0;k<N;k++){\n                sum=sum+(abs(a-x[k])+abs(b-y[k]));\n            }\n            //printf(\"%d\\n\",sum);\n            if(j==0)\n            {\n                minsum=sum;\n                x_c=x[j];\n                y_c=y[j];\n            }\n            if(sum<minsum)\n            {\n                //printf(\"%d\\n\",sum);\n                minsum=sum;\n                x_c=x[j];\n                y_c=y[j];\n            }\n            //sum=0;\n        }\n        printf(\"%d %d\\n\",x_c,y_c);\n    }\n    //printf(\"%d\",x_c);\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476565,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975446,
        "updated_at_ms": 1599979046,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:24:32.682Z",
        "__v": 0
    },
    {
        "_id": "5f606c3850731f1064908b92",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int[] arr2=new int[n];\n        while(n!=0){\n            int index=0;\n            int t=sc.nextInt();\n            int fact=factorial(t);\n            int[] arr=new int[fact];\n            \n            for(int i=1;i<=fact;i++)\n                arr[index++]=i;\n            int count=0;\n            for (int i = 0; i < arr.length-1; i++)  {\n                for (int j = i + 1; j < arr.length; j++){\n                    if(gcd(arr[i],arr[j])==1  &&  (arr[i]*arr[j])==fact)\n                        count++;\n                }\n            }\n            System.out.println(count);\n            n--;\n        }\n    }\n    \n    static int factorial(int n) {\n    if (n>=1)\n        return n*factorial(n-1);\n    else\n        return 1;\n    }\n    \n    static int gcd(int x, int y) \n    {   \n        if (x==0 || y==0) \n        return 0; \n      \n        if (x==y) \n            return x; \n       \n        if (x>y) \n            return gcd(x-y,y); \n              \n        return gcd(x,y-x); \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476556,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675172",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "Likhita_AVL",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975432,
        "updated_at_ms": 1599975432,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:24:40.772Z",
        "__v": 0
    },
    {
        "_id": "5f606c4150731f1064908b93",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n   static int gcd(int a,int b){\n        if(b==0)return a;\n        a=a%b;\n        return gcd(b,a);\n    }\n     static int fac(int n){\n         int f=1;\n         if(n==0)\n             return 1;\n         else {\n             for(int i=1;i<=n;i++)\n                 f*=i;\n         }\n             return f;\n     }\n    static int factor(int fac){\n        int count=0;\n        for(int i=1;i<=fac;i++){\n            if(fac%i==0){\n                count++;\n            }\n        }\n        return count;\n    }\n\n\n    \n    \n    \n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    Scanner sc=new Scanner(System.in);\n      int n=sc.nextInt();\n      while(n!=0){\n          int count=1;\n          int x=sc.nextInt();\n          int factorial=fac(x);\n         // System.out.println(factorial);\n         int factors=factor(factorial)/2;\n          //System.out.println(factors);\n          for(int i=2;i<factorial/factors;i++){\n              if(factorial%i==0){\n                  int a=i;\n                  int b=(int)factorial/a;\n                  int result=gcd(a,b);\n               //  System.out.println(result+\" \"+a+\" \"+b+\" \"+x);\n                  if(result==1){\n                      count++;\n                  }\n              }\n          }\n\n          System.out.println(count);\n          n--;\n      }\n\n    \n    \n    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476555,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6547357",
        "submission_status": "Runtime Error",
        "submission_language": "java",
        "site_user_handle": "ashrithareddy8",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975432,
        "updated_at_ms": 1599979032,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:24:49.038Z",
        "__v": 0
    },
    {
        "_id": "5f606c4750731f1064908b94",
        "submission_code": "from sys import stdin,stdout\nimport math\nfor _ in range(int(stdin.readline())):\n    n=int(stdin.readline())\n    a=10**9+7\n    if n==1:\n          (stdout.write(str(1)+'\\n'))\n    elif n==2:\n            stdout.write(str(1)+'\\n')    \n    else:    \n        n=math.factorial(n)\n        m=int(n**0.5)\n        cnt=0\n        for i in range(2,m+1):\n            if n%i==0:\n                if math.gcd(i,n//i)==1:\n                    cnt+=1\n        s=str((cnt+1)%a)          \n        (stdout.write((s)+'\\n'))   ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476540,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9623064",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "srikanthsupraja1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975384,
        "updated_at_ms": 1599978984,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:24:55.517Z",
        "__v": 0
    },
    {
        "_id": "5f606c4f50731f1064908b95",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n   static int gcd(int a,int b){\n        if(b==0)return a;\n        a=a%b;\n        return gcd(b,a);\n    }\n     static int fac(int n){\n         if(n==0)\n             return 1;\n         else \n             return n*fac(n-1);\n     }\n    static int factor(int fac){\n        int count=0;\n        for(int i=1;i<=fac;i++){\n            if(fac%i==0){\n                count++;\n            }\n        }\n        return count;\n    }\n\n\n    \n    \n    \n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    Scanner sc=new Scanner(System.in);\n      int n=sc.nextInt();\n      while(n!=0){\n          int count=1;\n          int x=sc.nextInt();\n          int factorial=fac(x);\n         // System.out.println(factorial);\n         int factors=factor(factorial)/2;\n          //System.out.println(factors);\n          for(int i=2;i<factorial/factors;i++){\n              if(factorial%i==0){\n                  int a=i;\n                  int b=(int)factorial/a;\n                  int result=gcd(a,b);\n               //  System.out.println(result+\" \"+a+\" \"+b+\" \"+x);\n                  if(result==1){\n                      count++;\n                  }\n              }\n          }\n\n          System.out.println(count);\n          n--;\n      }\n\n    \n    \n    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476518,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6547357",
        "submission_status": "Runtime Error",
        "submission_language": "java",
        "site_user_handle": "ashrithareddy8",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975344,
        "updated_at_ms": 1599977744,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:25:03.810Z",
        "__v": 0
    },
    {
        "_id": "5f606c5650731f1064908b96",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define mod 100000007\nlong long int fact(long long int a)\n{\n    if(a==1||a==0)\n    return 1;\n    else\n    return (a%mod)*fact(a-1)%mod;\n}\nint main() {\n    long long t,n;\n    cin>>t;\n    while(t--){\n        long long fac1[100000],fac2[1000000],c=0,c1=0,p,count=0,i;\n        cin>>n;\n        p = fact(n);\n        for(i=1;i<sqrt(p);i++){\n            if(p%i==0){\n                fac1[c++]=i;\n                fac2[c1++]=p/i;\n            }\n        }\n        for(i=0;i<c1 && i<c;i++){\n            if(__gcd(fac1[i],fac2[i])==1){\n                count++;\n            }\n        }\n        printf(\"%llu\\n\",count);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476486,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975281,
        "updated_at_ms": 1599976481,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:25:10.878Z",
        "__v": 0
    },
    {
        "_id": "5f606c5f50731f1064908b97",
        "submission_code": "MAX = 1000000\nprefix =[0]*(MAX + 1) \ndef buildPrefix(): \n    prime = [1]*(MAX + 1) \n    p = 2\n    while(p * p <= MAX):  \n        if (prime[p] == 1): \n            i = p * 2\n            while(i <= MAX): \n                prime[i] = 0\n                i += p \n        p+=1\n    for p in range(2,MAX+1):  \n        prefix[p] = prefix[p - 1] \n        if (prime[p]==1): \n            prefix[p]+=1\ndef query(L, R): \n    return prefix[R]-prefix[L - 1] \ndef pow(n,mod):\n    ans=1\n    if n==0:\n        return 0\n    for i in range(n-1):\n        ans=((ans%mod)*2)%mod\n    return ans\nt=int(input())\nbuildPrefix()\nfor i in range(t):\n    n=int(input())\n    print(pow(query(1,n),1000000007))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476482,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4674163",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975276,
        "updated_at_ms": 1599978876,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:25:19.988Z",
        "__v": 0
    },
    {
        "_id": "5f606c6750731f1064908b98",
        "submission_code": "from functools import reduce\nfrom sys import stdin, stdout\ndef numbers(n):\n    return set(reduce(list.__add__,([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))\n\n\nfact = {0:1, 1:1}\ndef factorial_of(n):\n    if n in fact:\n        return fact[n]\n    else:\n        fa = list(fact.keys())[-1]\n        for i in range(fa,n+1):\n            fact[i] = fact[i-1] * i\n        return fact[n]\n\nfrom math import factorial,gcd\nn=int(input())\nfor _ in range(n):\n    a=int(stdin.readline())\n    f=factorial_of(a)\n    # f=factorial(a)\n    lst=numbers(f)\n    lst=list(lst)\n    k=len(lst)\n    cnt=0\n    for i in range(k):\n        for j in range(i+1,k):\n            if lst[i]*lst[j]==f and gcd(lst[i],lst[j])==1 and lst[i]!=lst[j]:\n                cnt+=1\n                break\n    cnt=cnt%((10**9)+7)\n    stdout.write(str(cnt)+\"\\n\")\n\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476477,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6619310",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Rahul_Sripada",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975271,
        "updated_at_ms": 1599980071,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:25:27.055Z",
        "__v": 0
    },
    {
        "_id": "5f606c7150731f1064908b99",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    static boolean iscoprime(long a,long b)\n    {\n        if(a==b)\n        {\n            return false;\n        }\n        else{\n            long sm=a;\n            long ln=b;\n            long div=1;\n            if(sm>ln)\n            {\n                sm=b;\n                ln=a;\n            }\n            while(ln>sm)\n            {\n                long rem = ln % sm;\n                if (rem == 0)\n                {\n                    div = sm;\n                    break;\n                }\n                else\n                {\n                    ln = sm;\n                    sm = rem;\n                }\n            }\n            if(div==1)\n            {\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        \n    }\n    static long factorial(long n)\n    {\n        long ret=1;\n        for(long i=1;i<=n;i++)\n        {\n            ret=ret*i;\n        }\n        return ret;\n    }\n    static long noofvalues(long a)\n    {\n        ArrayList<Long> lit = new ArrayList();\n        long val=0;\n        for(long i=1;i<=a;i++)\n        {\n            if(a%i==0)\n            {\n                if(!lit.contains(i)){\n                    lit.add(i);\n                    lit.add(a/i);\n                    if(iscoprime(i,a/i))\n                    {\n                        val=val+1;\n                    }\n                }\n            }\n        }\n        return val;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scn = new Scanner(System.in);\n        int notest=scn.nextInt();\n        long[] arr = new long[notest];\n        for(int i=0;i<notest;i++)\n        {\n            arr[i]=scn.nextLong();\n        }\n        scn.close();\n        for(int i=0;i<notest;i++)\n        {\n            System.out.println(noofvalues(factorial(arr[i])));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476471,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4679580",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "160218733021CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975258,
        "updated_at_ms": 1599976458,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:25:37.140Z",
        "__v": 0
    },
    {
        "_id": "5f606c7950731f1064908b9a",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\nint a[100000][2]={0};\nint find_func(int a[][2],int n,int i)\n{\n    int s,j;\n    s=0;\n    for(j=0;j<n;j++)\n    {\n        if(j!=i)\n        {\n            s = pow(a[i][0]-a[j][0],2)+pow(a[j][1]-a[i][1],2) + s;\n        }\n    }\n    return s;\n}\nvoid ntest_case(int n)\n{\n    int sm,x,y,i,s;\n           for(i=0;i<n;i++)\n            {\n                scanf(\"%d %d\\n\",&a[i][0],&a[i][1]);\n            }\n            sm = find_func(a,n,0);\n            x = a[0][0];\n            y = a[0][1];\n            for(i=1;i<n;i++)\n            {\n                s=find_func(a,n,i);\n                if(sm>s)\n                {\n                    sm=s;\n                    x=a[i][0];\n                    y=a[i][1];\n                }\n            }\n        printf(\"%d %d\\n\",x,y);\n}\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int t,n,k;\n    scanf(\"%d\",&t);\n    for(k=0;k<t;k++)\n    {\n        scanf(\"%d\",&n);\n        ntest_case(n);\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476470,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6832311",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "19H51A05E3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975257,
        "updated_at_ms": 1599977657,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:25:45.964Z",
        "__v": 0
    },
    {
        "_id": "5f606c8350731f1064908b9b",
        "submission_code": "#include<bits/stdc++.h>\n#define ll           long long int\n#define pb           push_back\n#define F            first\n#define S            second\nusing namespace std;\nvoid solve()\n{\n    int n,m;\n    cin>>n>>m;\n    char a[n][m];\n    for(int i=0;i<n;++i)\n    {\n        for(int j=0;j<m;++j)            \n        {\n            cin>>a[i][j];\n        }\n    }\n    bool ch=1;\n    char x=a[0][0];\n    for(int i=0;i<n;++i)\n    {\n        for(int j=0;j<m;++j)\n        {\n            if((i)||(j))\n            {\n                if(x!=a[i][j])\n                {\n                    ch=0;break;\n                }\n            }\n        }\n        if(!ch)\n           break;\n    }\n    if(ch)\n    {\n        for(int i=1;i<n;++i)\n            cout<<\"D\";\n        for(int i=1;i<m;++i)\n            cout<<\"R\";\n        cout<<\"\\n\";\n        return;\n    }\n    string ans[n][m];\n    string comp[n][m];\n    ans[0][0]=a[0][0];\n    comp[0][0]=\"\";\n    for(int i=0;i<n;++i)\n    {\n        for(int j=0;j<m;++j)\n        {\n            if(i&&j)\n            {\n                if((ans[i-1][j]<ans[i][j-1])||((ans[i-1][j]==ans[i][j-1])&&(comp[i-1][j]<=comp[i][j-1])))\n                {\n                    ans[i][j]=(ans[i-1][j]+a[i][j]);\n                    comp[i][j]=comp[i-1][j]+'D';\n                }\n                else\n                {\n                    ans[i][j]=(ans[i][j-1]+a[i][j]);\n                    comp[i][j]=comp[i][j-1]+'R';\n                }\n            }\n            else if(i)\n            {\n                ans[i][j]=ans[i-1][j]+a[i][j];\n                comp[i][j]=comp[i-1][j]+'D';\n            }\n            else if(j)\n            {\n                ans[i][j]=ans[i][j-1]+a[i][j];\n                comp[i][j]=comp[i][j-1]+'R';\n            }\n        }\n    }\n    cout<<comp[n-1][m-1]<<\"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin>>t;\n    for(int i=1;i<=t;++i)\n    {\n        cout<<\"Case #\"<<i<<\": \";\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476468,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9693257",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "sg0071729",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599975249,
        "updated_at_ms": 1599976449,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:25:55.829Z",
        "__v": 0
    },
    {
        "_id": "5f606c8950731f1064908b9c",
        "submission_code": "from sys import stdin,stdout\nimport math\nfor _ in range(int(stdin.readline())):\n    n=int(stdin.readline())\n    a=10**9+7\n    if n==1:\n          (stdout.write(1))\n    elif n==2:\n            stdout.write(1)    \n    else:    \n        n=math.factorial(n)\n        m=int(n**0.5)\n        cnt=0\n        for i in range(2,m+1):\n            if n%i==0:\n            if math.gcd(i,n//i)==1:\n                  cnt+=1\n        s=str((cnt+1)%a)          \n        (stdout.write((s)+'\\n'))   ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476459,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9623064",
        "submission_status": "Compilation error",
        "submission_language": "python3",
        "site_user_handle": "srikanthsupraja1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975243,
        "updated_at_ms": 1599977643,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T07:26:01.767Z",
        "__v": 0
    },
    {
        "_id": "5f606c8f50731f1064908b9d",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n   static int gcd(int a,int b){\n        if(b==0)return a;\n        a=a%b;\n        return gcd(b,a);\n    }\n     static int fac(int n){\n         if(n==0)\n             return 1;\n         else \n             return n*fac(n-1);\n     }\n    static int factor(int fac){\n        int count=0;\n        for(int i=1;i<=fac;i++){\n            if(fac%i==0){\n                count++;\n            }\n        }\n        return count;\n    }\n\n\n    \n    \n    \n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    Scanner sc=new Scanner(System.in);\n      int n=sc.nextInt();\n      while(n!=0){\n          int count=0;\n          int x=sc.nextInt();\n          int factorial=fac(x);\n         // System.out.println(factorial);\n         int factors=factor(factorial)/2;\n          //System.out.println(factors);\n          for(int i=1;i<factorial/factors;i++){\n              if(factorial%i==0){\n                  int a=i;\n                  int b=(int)factorial/a;\n                  int result=gcd(a,b);\n               //  System.out.println(result+\" \"+a+\" \"+b+\" \"+x);\n                  if(result==1){\n                      count++;\n                  }\n              }\n          }\n\n          System.out.println(count);\n          n--;\n      }\n\n    \n    \n    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476453,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6547357",
        "submission_status": "Runtime Error",
        "submission_language": "java",
        "site_user_handle": "ashrithareddy8",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975222,
        "updated_at_ms": 1599976422,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:26:07.812Z",
        "__v": 0
    },
    {
        "_id": "5f606c9850731f1064908b9e",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <climits>\nusing namespace std;\n#define ll long long int\nstruct cor{\n    ll x,y;\n};\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    ll n,t,x1,xt,yt;\n    ll sum,mi;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cor a[n];\n        mi=LONG_LONG_MAX;\n        xt=0;\n        yt=0;\n        x1=0;\n        for(int i=0;i<n;i++)\n        {\n            cin>>a[i].x>>a[i].y;\n            xt+=a[i].x;\n            yt+=a[i].y;\n        }\n        xt+=xt;\n        yt+=yt;\n        for(int i=0;i<n;i++)\n        {\n            sum=n*pow(a[i].x,2) + n*pow(a[i].y,2)- (xt*a[i].x) -(yt*a[i].y);\n            if(mi>sum)\n            {\n                mi=sum;\n                x1=i;\n            }\n        }\n        printf(\"%lld %lld\\n\",a[x1].x,a[x1].y);\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476447,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5413147",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "SNV18H51A05B2",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975201,
        "updated_at_ms": 1599978801,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:26:16.364Z",
        "__v": 0
    },
    {
        "_id": "5f606ca150731f1064908b9f",
        "submission_code": "def fact(num):\n    factorial = 1\n    for i in range(1,num + 1):\n       factorial = factorial*i\n    return factorial\n    \ndef factors(x):\n    result = []\n    for i in range(1, x + 1):\n        if x % i == 0:\n            result.append(i)\n    return result\n          \ndef primeNumber(x):\n    if x >= 2:\n        for y in range(2,x):\n            if not ( x % y ):\n                return False\n    else:\n        return False\n    return True\n\ndef gcd(p,q):\n# Create the gcd of two positive integers.\n    while q != 0:\n        p, q = q, p%q\n    return p\ndef coprime(x, y):\n    return gcd(x, y) == 1\n\ncase = int(input())\nresult =[]\nfor i in range(case): \n    num = int(input())\n    count = 1\n    factorial = fact(num)\n    collection = factors(factorial)\n    for i in range(1,len(collection)):\n        for j in range(i,len(collection)):\n            if coprime(collection[i], collection[j]) and collection[i]*collection[j] == factorial:\n                count +=1\n    result.append(count%1000000007)\n        \n    \nprint(\"\\n\".join(map(str,result)))\n        \n        \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476444,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8492552",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "rishadp2747",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975197,
        "updated_at_ms": 1599977597,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:26:25.318Z",
        "__v": 0
    },
    {
        "_id": "5f606ca750731f1064908ba0",
        "submission_code": "MAX = 1000000\nprefix =[0]*(MAX + 1) \ndef buildPrefix(): \n    prime = [1]*(MAX + 1) \n    p = 2\n    while(p * p <= MAX):  \n        if (prime[p] == 1): \n            i = p * 2\n            while(i <= MAX): \n                prime[i] = 0\n                i += p \n        p+=1\n    for p in range(2,MAX+1):  \n        prefix[p] = prefix[p - 1] \n        if (prime[p]==1): \n            prefix[p]+=1\ndef query(L, R): \n    return prefix[R]-prefix[L - 1] \ndef pow(n,mod):\n    ans=1\n    if n==0:\n        return 0\n    for i in range(n-1):\n        ans=(ans*2)%mod\n    return ans\nt=int(input())\nbuildPrefix()\nfor i in range(t):\n    n=int(input())\n    print(pow(query(1,n),1000000007))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476435,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4674163",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975184,
        "updated_at_ms": 1599977584,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:26:31.666Z",
        "__v": 0
    },
    {
        "_id": "5f606cae50731f1064908ba1",
        "submission_code": "from functools import reduce\ndef numbers(n):\n    return set(reduce(list.__add__,([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))\n\n\nfact = {0:1, 1:1}\ndef factorial_of(n):\n    if n in fact:\n        return fact[n]\n    else:\n        fa = list(fact.keys())[-1]\n        for i in range(fa,n+1):\n            fact[i] = fact[i-1] * i\n        return fact[n]\n\nfrom math import factorial,gcd\nn=int(input())\nfor _ in range(n):\n    a=int(input())\n    f=factorial_of(a)\n    # f=factorial(a)\n    lst=numbers(f)\n    lst=list(lst)\n    k=len(lst)\n    cnt=0\n    for i in range(k):\n        for j in range(i+1,k):\n            if lst[i]*lst[j]==f and gcd(lst[i],lst[j])==1 and lst[i]!=lst[j]:\n                cnt+=1\n                break\n    cnt=cnt%((10**9)+7)\n    print(cnt)\n\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476431,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6619310",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Rahul_Sripada",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975181,
        "updated_at_ms": 1599978781,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:26:38.629Z",
        "__v": 0
    },
    {
        "_id": "5f606cb550731f1064908ba2",
        "submission_code": "from sys import stdin\n\nt = int(stdin.readline())\nfor _ in range(t):\n    n,m = map(int,stdin.readline().split())\n    grid = []\n    dp = []\n    path = []\n    for i in range(n):\n        a = stdin.readline()\n        arr = []\n        for j in range(m):\n            arr.append(a[j])\n        grid.append(arr)\n        dp.append([])\n        path.append([])\n    dp[0].append(grid[0][0])\n    path[0].append(\"\")\n    for i in range(1,m):\n        dp[0].append(dp[0][i-1]+grid[0][i])\n        path[0].append(path[0][i-1]+'R')\n    for i in range(1,n):\n        dp[i].append(dp[i-1][0]+grid[i][0])\n        path[i].append(path[i-1][0]+'D')\n    for i in range(1,n):\n        for j in range(1,m):\n            val1 = dp[i][j-1]+grid[i][j]\n            val2 = dp[i-1][j]+grid[i][j]\n            if(val1<=val2):\n                dp[i].append(val1)\n                path[i].append(path[i][j-1]+'R')\n            else:\n                dp[i].append(val2)\n                path[i].append(path[i-1][j]+'D')\n    print(\"Case #{}: \".format(_+1)+str(path[-1][-1]))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476428,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "4312249",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599975177,
        "updated_at_ms": 1599976377,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:26:45.058Z",
        "__v": 0
    },
    {
        "_id": "5f606cbc50731f1064908ba3",
        "submission_code": "#include <bits/stdc++.h>\n#define FIO                      \\\n    ios::sync_with_stdio(false); \\\n    cin.tie(0);                  \\\n    cout.tie(0);\n#define OJ \\\n    freopen(\"input1.txt\", \"r\", stdin); \\\n    freopen(\"output1.txt\", \"w\", stdout);\n#define ll long long\nusing namespace std;\n\nfloat distance(int x1, int y1, int x2, int y2) {\n    return (pow(x2 - x1, 2) +  pow(y2 - y1, 2) * 1.0);\n}\n\nint main() {\n    // FIO;OJ;\n    int t;\n    cin >> t;\n    while(t--) {\n        int n, x, y;\n        cin >> n;\n        vector<pair<int, int> > cii;\n        \n        for(int i=0; i<n; ++i) {\n            cin >> x >> y;\n            cii.push_back(make_pair(x, y));\n        }\n\n        float minSum = INT_MAX;\n        int minX = INT_MIN, minY = INT_MIN;\n\n        for(int i=0; i<n; ++i) {\n            int sum = 0;\n            for(int j=0; j<n; ++j) {\n                if(i != j)\n                    sum += distance(cii[i].first, cii[i].second, cii[j].first, cii[j].second);\n            }\n            if(sum < minSum) {\n                minSum = sum;\n                minX = cii[i].first;\n                minY = cii[i].second;\n            }\n        }\n        cout << minX << \" \" << minY << endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476427,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4557538",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "prashanth_007",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975175,
        "updated_at_ms": 1599975175,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:26:52.350Z",
        "__v": 0
    },
    {
        "_id": "5f606cc550731f1064908ba4",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 100005\n#define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\n\nvector<pair<int,int>> g[N];\nvector<int> v[N];\nvector<int> vis;\nvoid dfs(int u){\n    if(vis[u]) return;\n    vis[u] = 1;\n    for(auto j : v[u]){\n        dfs(j);\n    }\n}\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n    cin>>TESTS;\n    while(TESTS--)\n    {   \n        int n,m;\n        cin >> n >> m;\n        pair<int,int> curx = {1,m+1};\n        pair<int,int> cury = {1,2};\n        int flag = 0;\n        rep(i,0,2*n*m-n-m){\n            int t;\n            cin >> t;\n            if(curx.sc > n*m) flag = 1;\n            if(flag == 0){\n                g[curx.fr].pb({curx.sc,t});\n                g[curx.sc].pb({curx.fr,t});\n                if(curx.fr % m == 0) flag = 0;\n                else flag = 1;\n                curx.fr++;\n                curx.sc++;\n            }\n            else{\n                g[cury.fr].pb({cury.sc,t});\n                g[cury.sc].pb({cury.fr,t});\n                cury.sc++;\n                cury.fr++;\n                if(cury.fr % m == 0){\n                    cury.fr++;\n                    cury.sc++;\n                }\n                flag = 0;\n            }\n        }\n        int ans = 0;\n        for(int l = 63; l >= 0; l--){\n            rep(i,0,n){\n                rep(j,1,m+1){\n                    int p = i*m+j;\n                    v[p].clear();\n                    for(int k = 0; k < g[p].size(); k++){\n                        if((g[p][k].sc & (1ll<<l))) v[p].pb(g[p][k].fr);\n                    }\n                }\n            }\n            // rep(i,0,n){\n            //     rep(j,1,m+1) trace(i*m+j, v[i*m+j])\n            // }\n            // cout << endl;\n            vis.assign(n*m+1,0);\n            dfs(1);\n            if(vis[n*m]){\n                // trace(l);\n                ans += (1ll<<l);\n                rep(i,0,n){\n                    rep(j,1,m+1){\n                        int p = i*m+j;\n                        vector<pair<int,int>> ng;\n                        for(int k = 0; k < g[p].size(); k++){\n                            if((g[p][k].sc & (1ll<<l))) ng.pb(g[p][k]);\n                        }\n                        g[p] = ng;\n                    }\n                }\n            }\n        }\n        cout << ans << endl;\n        rep(i,1,n+1){\n            rep(j,1,m+1) g[(i-1)*m+j].clear();\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476426,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "2968720",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599975175,
        "updated_at_ms": 1599979975,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:27:01.946Z",
        "__v": 0
    },
    {
        "_id": "5f606cce50731f1064908ba5",
        "submission_code": "def fact(n):\n    if n==1:\n        return 1\n    return n*fact(n-1)\ndef isprime(i):\n    if i == 1:\n        return True\n    for x in range (2,i):\n        if (i%x == 0) :\n            return False\n    return True\n\n#gcd and coprime functions used from https://www.geeksforgeeks.org/check-two-numbers-co-prime-not/*/\ndef gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n\ndef coprime(a, b):\n    if (gcd(a, b) == 1):\n        return True\n    else:\n        return False\nfor _ in range (int(input())):\n    n=int(input())\n    count=0\n    l=[]\n    fa=fact(n)\n    for i in range(1,fa//2):\n        if (isprime(i)):\n            if (fa%i == 0):\n                if (coprime(fa//i,i) and fa//i != i):\n                    if fa // i not in l and i not in l:\n                        count += 1\n                        l.append(i)\n                        l.append(fa // i)\n    print(count)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476422,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5993493",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "jaswanthrocks900",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975164,
        "updated_at_ms": 1599977564,
        "misc_notes": "[\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:27:10.683Z",
        "__v": 0
    },
    {
        "_id": "5f606cd450731f1064908ba6",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws IOException {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int T = Integer.parseInt(br.readLine().trim());\n        while(T-- >0){\n            int n = Integer.parseInt(br.readLine().trim());\n            int min = Integer.MAX_VALUE,minx=0,miny=0;\n            int xi[] = new int[n];\n            int yi[] = new int[n];\n            for(int i=0;i<n;i++){\n                String s[] = br.readLine().trim().split(\"\\\\s+\");\n                xi[i] = Integer.parseInt(s[0]);\n                yi[i] = Integer.parseInt(s[1]);\n            }\n            for(int i=0;i<n;i++){\n                int x = xi[i];\n                int y = yi[i];\n                int res = 0;\n                for(int j=0;j<n;j++){\n                    res = res + (int)Math.pow((x - xi[j]),2) + (int)Math.pow((y - yi[j]),2);\n                }\n                if(res < min){\n                    min = res;\n                    minx = x;\n                    miny = y;\n                }\n            }\n            System.out.println(minx+\" \"+miny);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476411,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5773737",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "lakshmimanasamvs",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975132,
        "updated_at_ms": 1599976332,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:27:16.928Z",
        "__v": 0
    },
    {
        "_id": "5f606cdf50731f1064908ba7",
        "submission_code": "#include<bits/stdc++.h>\n\n#ifndef LOCAL\n#pragma GCC optimize(\"O3\")\n#endif\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//#pragma GCC optimize(\"unroll-loops\")\n\n#define endl        '\\n'\n#define ll          long long\n#define pb          push_back\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define rs(v,n)     v.resize(n)\n#define hell        1000000007\n#define peak        9123372036854775807\n#define pii         acos(-1)\n#define clr(a,x)    memset(a,x,sizeof(a))\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\n\nnamespace InOp{\ntemplate<class x,class y>\nistream &operator>>(istream &in,pair<x,y> &p) \n{ \n    in>>p.F>>p.S;\n    return in;\n}\ntemplate<class x>\nistream &operator>>(istream &in,vector<x> &v) \n{\n    for(auto& i:v)\n        in>>i;\n    return in;\n}\ntemplate<class x,class y>\nostream &operator<<(ostream &out,pair<x,y> &p) \n{ \n    out<<\"(\"<<p.F<<\",\"<<p.S<<\") \";\n    return out; \n}\ntemplate<class x>\nostream &operator<<(ostream &out,vector<x> &v) \n{ \n    out<<v.size()<<endl;\n    for(auto i:v)\n        out<<i<<\" \";\n    out<<endl;\n    return out; \n}\n}\nusing namespace InOp;\n\nnamespace ModOp{\ntemplate<class x,class y,class z> z add(x a,y b,z m){return (a+b)%m;}\ntemplate<class x,class y,class z> z sub(x a,y b,z m){return (a-b+m)%m;}\ntemplate<class x,class y,class z> z mul(x a,y b,z m){return ((ll)a*b)%m;}\ntemplate<class y,class z> z expo(ll b,y e,z m){ll a=1;b%=m;while(e!=0){if((e&1)==1){a=a*b;a=a%m;}b=b*b;b%=m;e>>=1;}return a%m;}\ntemplate<class x,class z> z inv(x b,z m){return expo(b,m-2,m);}\ntemplate<class x,class y> x invGeneral(x a,y b){if(a==0)return b==1?0:-1;x m=invGeneral(b%a,a);return m==-1?-1:((1-(ll)b*m)/a+b)%b;}\ntemplate<class x,class y,class z> z div(x a,y b,z m){ll c=inv(b,m);return mul(a,c,m);}\n}\nusing namespace ModOp;\n\nnamespace Debug{\ntemplate<class x> void deb(x a){cerr<<\"a\"<<\": \"<<a<<endl;}\ntemplate<class x,class y> void deb(x a,y b){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<endl;}\ntemplate<class x,class y,class z> void deb(x a,y b,z c){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<endl;}\ntemplate<class x,class y,class z,class xy> void deb(x a,y b,z c,xy d){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<\" | \"<<\"d\"<<\": \"<<d<<endl;}\n}\nusing namespace Debug;\n\n#define N  1000005\nvoid dfs(ll x,ll y,ll n,ll m,ll p,vector<vector<ll>>& le,vector<vector<ll>>& up,vector<vector<ll>>& vis)\n{\n    if(x<0||y<0||x>=n||y>=m)return;\n    if(vis[x][y]==1)return;\n    // deb(x,y);\n    vis[x][y]=1;\n    if(y<m-1)\n    {\n        if((le[x][y+1]&p)==p)\n        {\n            dfs(x,y+1,n,m,p,le,up,vis);\n        }\n    }\n    if(y>0)\n    {\n        if((le[x][y]&p)==p)\n        {\n            dfs(x,y-1,n,m,p,le,up,vis);\n        }\n    }\n    if(x<n-1)\n    {\n        if((up[x+1][y]&p)==p)\n        {\n            dfs(x+1,y,n,m,p,le,up,vis);\n        }\n    }\n    if(x>0)\n    {\n        if((up[x][y]&p)==p)\n        {\n            dfs(x-1,y,n,m,p,le,up,vis);\n        }\n    }\n}\nll solve(ll x,ll n,ll m,vector<vector<ll>>& le,vector<vector<ll>>& up)\n{\n    vector<vector<ll>> vis(n,vector<ll>(m,0));\n    dfs(0,0,n,m,x,le,up,vis);\n    return vis[n-1][m-1];\n    // for(ll i=0;i<n;i++)\n    // {\n    //     for(ll j=0;j<m;j++)\n    //     {\n    //         if(j!=0)\n    //         {\n    //             if((le[i][j]&x)==x&&vis[i][j-1]==1)\n    //             {\n    //                 vis[i][j]=1;\n    //             }\n    //         }\n    //         if(i!=0)\n    //         {\n    //             if((up[i][j]&x)==x&&vis[i-1][j]==1)\n    //             {\n    //                 vis[i][j]=1;\n    //             }\n    //         }\n    //     }\n    // }\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    ll tt=1;\n    cin>>tt;\n    while(tt--)\n    {\n        ll i,j,k,l,r,x,y,m,n;\n        cin>>n>>m;\n        vector<vector<ll>> le(n,vector<ll>(m,0)),up(n,vector<ll>(m,0));\n        for(i=0;i<n-1;i++)\n        {\n            for(j=0;j<2*m-1;j++)\n            {\n                if(j%2==0)\n                {\n                    cin>>up[i+1][j/2];\n                }\n                else\n                {\n                    cin>>le[i][(j+1)/2];\n                }\n            }\n        }\n        for(j=0;j<m-1;j++)\n        {\n            cin>>le[n-1][j+1];\n        }\n        ll ans=0;\n        // ll xx=(1ll<<62);\n        // deb(xx);\n        for(i=62;i>=0;i--)\n        {\n            ll x=ans|(1ll<<i);\n            if(solve(x,n,m,le,up))\n            {\n                ans=x;\n            }\n        }\n        cout<<ans<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476406,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "1583809",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599975113,
        "updated_at_ms": 1599977513,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:27:27.269Z",
        "__v": 0
    },
    {
        "_id": "5f606ce550731f1064908ba8",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\nvector<pair<string,string>> se;\nbool cmp(pair<string,string> &p1,pair<string,string> &p2)\n{\n    return p1.first<p2.first;\n}\n bool vis[1001][1001];\nchar a[1000][1000];\nint n,m;\nvoid foo(int i,int j,string s,string dir)\n{\n    if(i<0 || j<0 || i>=n || j>=m ||vis[i][j]==true)\n    return;\n   \n    if(i==n-1 && j==m-1)\n    {\n          se.push_back(make_pair(s,dir));\n          dir.pop_back();\n          return;\n    }\n     vis[i][j]=true;\n    foo(i,j+1,s+a[i][j],dir+\"R\");\n    foo(i+1,j,s+a[i][j],dir+\"D\");\n    vis[i][j]=false;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin>>t;\n    int j=1;\n    while(t--)\n    {\n        //int n,m;\n        cin>>n>>m;\n   // char a[1000][1000];\n    map<string,int> ma;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<m;j++)\n        {\n            cin>>a[i][j];\n        }\n    }\n  \n    memset(vis,0,sizeof(vis));\n    foo(0,0,\"\",\"\");\n    sort(se.begin(),se.end(),cmp);\n    for(int i=0;i<se.size();i++)\n    {\n        ma[se[i].first]++;\n    }\n    if(ma[se[0].first]>1)\n    {\n        string s1=se[0].first,s2=se[1].second,ans=se[1].second;\n        for(int i=1;i<se.size();i++)\n        {\n            if(se[i].first!=s1)\n            break;\n            s2=se[i].second;\n           ans=min(s2,ans);\n        }\n        cout<<\"Case #\"<<j<<\": \"<<ans<<\"\\n\";\n    }\n    else\n    cout<<\"Case #\"<<j<<\": \"<<se[0].second<<\"\\n\";\n    se.clear();\n    ma.clear();\n    j++;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476402,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "4289507",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "praveen7777",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599975092,
        "updated_at_ms": 1599976292,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:27:33.553Z",
        "__v": 0
    },
    {
        "_id": "5f606cef50731f1064908ba9",
        "submission_code": "import bisect \ndef f(a,b,x,y,n):\n    v=0\n    #print(b)\n    for i in range(n):\n        v+=(x[i]-a)**2 + (y[i]-b)**2 \n    return v     \nfor _ in range(int(input())):\n    n=int(input())\n    x=[]\n    y=[]\n    z=[]\n    for i in range(n):\n        x1,y1=map(int,input().split())\n        x.append(x1)\n        y.append(y1)\n        z.append([(x1**2  + y1**2),x1,y1])\n    a=sum(x)//n \n    b=sum(y)//n \n    z.sort()\n    z1=[s[0] for s in z]\n    s=a**2 + b**2 \n    #print(z1)\n    j=bisect.bisect_left(z1,s)\n    if j==n:\n        f1=f(z[n-1][1],z[n-1][2],x,y,n) \n    else:\n        f1=f(z[j][1],z[j][2],x,y,n) \n    k=bisect.bisect_right(z1,s)\n    if k==n:\n        f2=f(z[n-1][1],z[n-1][2],x,y,n) \n    else:\n        f2=f(z[k][1],z[k][2],x,y,n)\n    if f1<f2:\n        if j==n:\n            print(z[n-1][1],z[n-1][2])\n        else:\n            print(z[j][1],z[j][2])\n    else:\n        if k==n:\n            print(z[n-1][1],z[n-1][2])\n        else:\n            print(z[k][1],z[k][2])\n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476400,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5616652",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "pavansid69",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975089,
        "updated_at_ms": 1599975089,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:27:43.362Z",
        "__v": 0
    },
    {
        "_id": "5f606cf750731f1064908baa",
        "submission_code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nusing ll = long long;\nusing ld = long double;\n\n#define pb push_back\n#define mp make_pair\n#define lwb lower_bound\n#define upb upper_bound\n#define F first\n#define S second\n#define I insert\n#define P pair<ll, ll>\n#define all(x) x.begin(), x.end()\n#define there(a, b) (b.find(a) != b.end())\n#define rep(i, a, b) for(int i = a; i < b; i++)\n#define printv(v) for(auto x : v) cout << x << \" \";\n#define printa(a, n) for(int i = 0; i < n; i++) cout << a[i] << \" \";\n#define scana(a, n) for(int i = 0; i < n; i++) cin >> a[i];\n#define init1(a, x, n) for(int i = 0; i < n; i++) a[i] = x;\n#define init2(a, x, n, m) for(int i = 0; i < n; i++) for(int j = 0; j < m; j++) a[i][j] = x;\n#define bits(n) __builtin_popcountll(n)\n#define setpr(n) fixed << setprecision(n) \n#define endl \"\\n\"\n\nconst ll mod = 1000000007, maxn = 2e5 + 5;\n\ninline ll add(ll a, ll b, ll m) { return (((a % m) + (b % m)) % m); }\ninline ll mul(ll a, ll b, ll m) { return (((a % m) * (b % m)) % m); }\ninline ll sub(ll a, ll b, ll m) { return (((a % m) - (b % m) + m) % m); }\nll power(ll a, ll b, ll m) {\n    if(a == 0) return 0; if(b == 0) return 1; if(b == 1) return a;\n    ll p = power(a, b / 2, m); p = (p * p) % m;\n    if(b & 1) p = (p * (a % m)) % m;\n    return p;\n}\n\n\n\nvoid solve()\n{\n    ll n; cin >> n;\n    if(n == 1)\n    {\n        cout << 0 << endl;\n        return;\n    }\n    ll cnt = n / 2 + n % 2;\n    cnt--;\n    cout << power(2, cnt, mod) << endl;\n}\n\nint main() \n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL); cout.tie(NULL);\n    \n    ll t = 1;\n    cin >> t; //if test cases, uncomment\n    for(ll tc = 1; tc <= t; tc++) \n    {\n       solve(); \n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476397,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5043696",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "nimmi_001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975081,
        "updated_at_ms": 1599975081,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:27:51.743Z",
        "__v": 0
    },
    {
        "_id": "5f606cff50731f1064908bab",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    static boolean iscoprime(long a,long b)\n    {\n        if(a==b)\n        {\n            return false;\n        }\n        else{\n            long sm=a;\n            long ln=b;\n            long div=1;\n            if(sm>ln)\n            {\n                sm=b;\n                ln=a;\n            }\n            while(ln>sm)\n            {\n                long rem = ln % sm;\n                if (rem == 0)\n                {\n                    div = sm;\n                    break;\n                }\n                else\n                {\n                    ln = sm;\n                    sm = rem;\n                }\n            }\n            if(div==1)\n            {\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        \n    }\n    static long factorial(long n)\n    {\n        long ret=1;\n        for(long i=1;i<=n;i++)\n        {\n            ret=ret*i;\n        }\n        return ret;\n    }\n    static long noofvalues(long a)\n    {\n        ArrayList<Long> lit = new ArrayList();\n        long val=0;\n        for(long i=1;i<=(a/2);i++)\n        {\n            if(a%i==0)\n            {\n                if(!lit.contains(i)){\n                    lit.add(i);\n                    lit.add(a/i);\n                    if(iscoprime(i,a/i))\n                    {\n                        val=val+1;\n                    }\n                }\n            }\n        }\n        return val;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner scn = new Scanner(System.in);\n        int notest=scn.nextInt();\n        long[] arr = new long[notest];\n        for(int i=0;i<notest;i++)\n        {\n            arr[i]=scn.nextLong();\n        }\n        scn.close();\n        for(int i=0;i<notest;i++)\n        {\n            System.out.println(noofvalues(factorial(arr[i])));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476396,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4679580",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "160218733021CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975078,
        "updated_at_ms": 1599975078,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:27:59.837Z",
        "__v": 0
    },
    {
        "_id": "5f606d0a50731f1064908bac",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    static long odds(long a,long b){\n        if(a>b){\n            return odds(a-b,b);\n        }\n        else if(b>a){\n            return odds(a,b-a);\n        }\n        else{\n            return a;\n        }\n    }\n    static long coprime(long a,long b){\n        if(a%2==0 && b%2!=0){\n            return 1;\n        }\n        else if(a%2!=0 && b%2==0){\n            return 1;\n        }\n        else if(a%2==0 && b%2==0){\n            return 0;\n        }\n        else{\n            return odds(a,b);\n        }\n        \n        //if coprime(a,b)==1 then numbers are coprime\n    }\n    static int ways(long n,long fact){\n        int num=0;\n        for(long i=1;i<n;i++){\n            long temp=fact/i;\n            //System.out.println(temp+\" xxx\");\n            if(coprime(temp,i)==1){\n                num+=1;\n                //System.out.println(i+\" \"+temp);\n            }\n            \n        }\n        return num;\n        \n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner s=new Scanner(System.in);\n        \n        int t=s.nextInt();\n        while(t>0){\n            long n=s.nextLong();\n            long fact=1;\n            //System.out.println(n);\n            for(long i=1;i<=n;i++){\n                fact=fact*i;\n            }\n            //System.out.println(fact);\n            System.out.println(ways(n,fact));\n            t--;\n        }    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476387,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5598553",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "manmeet02012001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975062,
        "updated_at_ms": 1599976262,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:28:10.275Z",
        "__v": 0
    },
    {
        "_id": "5f606d1250731f1064908bad",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define mod 100000007\nlong long int fact(long long int a)\n{\n    if(a==1||a==0)\n    return 1;\n    else\n    return (a%mod)*fact(a-1)%mod;\n}\nint main() {\n    long long t,n;\n    cin>>t;\n    while(t--){\n        long long fac[1000000],c=0,p,count=0,i;\n        scanf(\"%lld\",&n);\n        p = fact(n);\n        for(i=1;i<=p;i++){\n            if(p%i==0){\n                fac[c++]=i;\n            }\n        }\n        for(i=0;i<c/2;i++){\n            if(__gcd(fac[i],fac[c-i-1])==1){\n                count++;\n            }\n        }\n        printf(\"%lld\\n\",count);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476385,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986492",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975051,
        "updated_at_ms": 1599975051,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:28:18.670Z",
        "__v": 0
    },
    {
        "_id": "5f606d1950731f1064908bae",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define endl \"\\n\"\n#define mod 1000000007\nvector<int>adj[300001];\nvector<int>v(1000001);\nvector<int>temp(1000001);\nint power(int x,int y)\n{ int temp;\n  if(y==0)\n    return 1;\n  temp=power(x,y/2)%mod;\n  if(y%2==0)\n    return (temp%mod*temp%mod)%mod;\n  else\n    return ((x%mod)*((temp%mod*temp%mod)%mod))%mod;\n}\nbool comp(pair<int,int>&a,pair<int,int>&b)\n{\n  if(a.first!=b.first)\n    return (a.first<b.first);\n  return a.second<b.second;\n}\nvoid seive()\n{ int n=1000001;\n  for(int i=1;i<=n;i++)\n    v[i]=i;\n  for(int i=2;i<=n;i+=2)\n    v[i]=2;\n  for(int i=3;i*i<=n;i++)\n  {\n    for(int j=i*i;j<=n;j=j+i)\n    {\n      if(v[j]==j)\n        v[j]=i;\n    }\n  }\n  for(int i=2;i<=n;i++)\n  {\n    temp[i]=temp[i-1];\n    if(v[i]==i)\n      temp[i]+=1;\n  }\n\n\n}\nvoid solve()\n{  \n  int n;\n  cin>>n;\n  if(n<2)\n  {\n    cout<<0<<endl;\n    return;\n  }\n  int c=temp[n];\n int k=power(2,c-1);\n cout<<k<<endl;\n \n}\nsigned main()\n{   ios_base::sync_with_stdio(false);\n  cin.tie(NULL); \n  //           #ifndef ONLINE_JUDGE\n  // freopen(\"input1.txt\",\"r\",stdin);\n  // freopen(\"output1.txt\",\"w\",stdout);\n  //        #endif\n\n  int t;\n  cin>>t;\n  //  t=1;\n  seive();\n  for(int i=1;i<=t;i++)\n    {solve();\n    }\n\n\n\n    return 0;     \n\n  }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476383,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5810514",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "naveenvineeth6",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599975048,
        "updated_at_ms": 1599981048,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:28:25.532Z",
        "__v": 0
    },
    {
        "_id": "5f606d2150731f1064908baf",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n       public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc= new Scanner(System.in);\n         int t=sc.nextInt();\n        for(int k=0;k<t;k++){\n        int n=sc.nextInt();\n        ArrayList<Integer> x = new ArrayList<>();\n        ArrayList<Integer> y = new ArrayList<>();\n        ArrayList<Integer> f1 = new ArrayList<>();\n        for(int i=0;i<n;i++){\n            x.add(sc.nextInt());\n            y.add(sc.nextInt());\n        }\n       \n        int f=0;\n        for(int j=1;j<=n;j++){\n            f=0;\n        for(int i=1;i<=n;i++){\n            f=f+(int)Math.pow(Math.abs(x.get(j-1)-x.get(i-1)),2)+(int)Math.pow(Math.abs(y.get(j-1)-y.get(i-1)),2);\n        }\n    \n            f1.add(f);\n            \n        }\n        int ind=f1.indexOf(Collections.min(f1));\n        System.out.println(x.get(ind)+\" \"+y.get(ind));\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476371,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "8984118",
        "submission_status": "Compilation error",
        "submission_language": "java8",
        "site_user_handle": "hamsiniparimala1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599975011,
        "updated_at_ms": 1599975011,
        "misc_notes": "[]",
        "submission_entry_created_at": "2020-09-15T07:28:33.723Z",
        "__v": 0
    },
    {
        "_id": "5f606d3050731f1064908bb0",
        "submission_code": "#include<bits/stdc++.h>\n#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    long long t,n,i,j,g,h,s,p,mini;;\n    //vector<pair<int,int>> r;\n    pair<long long int,long long int> e;\n    vector<long long int> x,y;\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        for(i=0;i<n;i++)\n        {\n            cin>>g>>h;\n            x.push_back(g);\n            y.push_back(h);\n        }\n        mini=INT_MAX;\n        for(i=0;i<n;i++)\n        {\n            s=0;\n            for(j=0;j<n;j++)\n            {\n                p=x[j]-x[i];\n                p=p*p;\n                g=y[j]-y[i];\n                g=g*g;\n                s=s+p+g;\n                if(s>mini)\n                {\n                    break;\n                }\n            }\n            if(s<mini)\n            {\n                mini=s;\n                e=make_pair(x[i],y[i]);\n            }\n        }\n        cout<<e.first<<\" \"<<e.second<<endl;\n        x.clear();\n        y.clear();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476367,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6832311",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "19H51A05E3",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974999,
        "updated_at_ms": 1599976199,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:28:48.986Z",
        "__v": 0
    },
    {
        "_id": "5f606d3850731f1064908bb1",
        "submission_code": "import math\nfrom sys import stdin, stdout\ndef countDivisors(n) :\n    count = 0\n    i = 1\n    while i <= math.sqrt(n):\n        if (n % i == 0) :\n            if not n // i == i :\n                #print (i , n//i)\n                if i * (n//i) == n and math.gcd(i, n//i) == 1:\n                    count += 1\n        i = i + 1\n    return count\n\nfact = {0:1, 1:1}\ndef factorial_of(n):\n    if n in fact:\n        return fact[n]\n    else:\n        fa = list(fact.keys())[-1]\n        for i in range(fa,n+1):\n            fact[i] = fact[i-1] * i\n        return fact[n]\n\nn=int(stdin.readline())\nfor _ in range(n):\n    a=int(stdin.readline())\n    f=factorial_of(a)\n    cnt=countDivisors(f)\n    cnt=cnt%((10**9)+7)\n    stdout.write(str(cnt)+\"\\n\")",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476366,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6619310",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Rahul_Sripada",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974999,
        "updated_at_ms": 1599977399,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:28:56.735Z",
        "__v": 0
    },
    {
        "_id": "5f606d3f50731f1064908bb2",
        "submission_code": "def fact(n):\n    if n==1:\n        return 1\n    return n*fact(n-1)\ndef isprime(i):\n    if i == 1:\n        return True\n    for x in range (2,i):\n        if (i%x == 0) :\n            return False\n    return True\n\n#gcd and coprime functions used from https://www.geeksforgeeks.org/check-two-numbers-co-prime-not/\ndef gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\ndef coprime(a, b):\n    if (gcd(a, b) == 1):\n        return True\n    else:\n        return False\nfor _ in range (int(input())):\n    n=int(input())\n    count=0\n    l=[]\n    fa=fact(n)\n    for i in range(1,fa):\n        if (isprime(i)):\n            if (fa%i == 0):\n                if (coprime(fa//i,i) and fa//i != i):\n                    if fa // i not in l and i not in l:\n                        count += 1\n                        l.append(i)\n                        l.append(fa // i)\n    print(count)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476361,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5993493",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "jaswanthrocks900",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974982,
        "updated_at_ms": 1599976182,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:29:03.285Z",
        "__v": 0
    },
    {
        "_id": "5f606d4950731f1064908bb3",
        "submission_code": "test=int(input())\nfor _ in range(test):\n    n=int(input())\n    points=[]\n    for _ in range(n):\n        a,b=map(int,input().split())\n        points.append([a,b])\n    points.sort()\n    if len(points)%2==1:\n        d=len(points)//2\n    else:\n        d=(len(points)//2)-1\n    print(points[d][0],points[d][1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476359,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4622965",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "vision01",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974981,
        "updated_at_ms": 1599976181,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:29:13.146Z",
        "__v": 0
    },
    {
        "_id": "5f606d5350731f1064908bb4",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define endl \"\\n\"\n#define mod 1000000007\nvector<int>adj[300001];\nvector<int>v(1000001);\nvector<int>temp(1000001);\nint power(int x,int y)\n{ int temp;\n  if(y==0)\n    return 1;\n  temp=power(x,y/2)%mod;\n  if(y%2==0)\n    return (temp%mod*temp%mod)%mod;\n  else\n    return ((x%mod)*((temp%mod*temp%mod)%mod))%mod;\n}\nbool comp(pair<int,int>&a,pair<int,int>&b)\n{\n  if(a.first!=b.first)\n    return (a.first<b.first);\n  return a.second<b.second;\n}\nvoid seive()\n{ int n=1000001;\n  for(int i=1;i<=n;i++)\n    v[i]=i;\n  for(int i=2;i<=n;i+=2)\n    v[i]=2;\n  for(int i=3;i*i<=n;i++)\n  {\n    for(int j=i*i;j<=n;j=j+1)\n    {\n      if(v[j]==j)\n        v[j]=i;\n    }\n  }\n  for(int i=2;i<=n;i++)\n  {\n    temp[i]=temp[i-1];\n    if(v[i]==i)\n      temp[i]+=1;\n  }\n\n\n}\nvoid solve()\n{  \n  int n;\n  cin>>n;\n  if(n<2)\n  {\n    cout<<0<<endl;\n    return;\n  }\n  int c=temp[n];\n int k=power(2,c-1);\n cout<<k<<endl;\n \n}\nsigned main()\n{   ios_base::sync_with_stdio(false);\n  cin.tie(NULL); \n  //           #ifndef ONLINE_JUDGE\n  // freopen(\"input1.txt\",\"r\",stdin);\n  // freopen(\"output1.txt\",\"w\",stdout);\n  //        #endif\n\n  int t;\n  cin>>t;\n  //  t=1;\n  seive();\n  for(int i=1;i<=t;i++)\n    {solve();\n    }\n\n\n\n    return 0;     \n\n  }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476352,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5810514",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "naveenvineeth6",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974972,
        "updated_at_ms": 1599979772,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:29:23.284Z",
        "__v": 0
    },
    {
        "_id": "5f606d5950731f1064908bb5",
        "submission_code": "#include <bits/stdc++.h>\n#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)\n#define nl cout<<\"\\n\"\n#define pb push_back\n#define max(a,b) ((a)>(b) ? (a) : (b))\n#define min(a,b) ((a)<(b) ? (a) : (b))\n#define REP(i,a,b) for(li i=a; i<=b ;++i)\n#define RREP(i,b,a) for(li i=b ; i>=a ; --i)\nusing namespace std;\nusing ui=unsigned int;\nusing li=long int;\nusing uli=unsigned long int;\nusing lli=long long int;\nusing ulli=unsigned long long int;\n\ntypedef struct {\n    li x, y;\n}data;\n\nvoid solve()\n{\n    li n;\n    cin >> n;\n    vector< data > v(n);\n    // li ans = 0;\n    // li i = 0; \n    for(data&j: v){\n        cin >> j.x >> j.y; \n    }\n    // for(auto i : v)\n    // {\n    //     cout <<i.x << \" \"<<i.y ;\n    //     nl;\n    // }\n    vector<vector<lli>> arr;\n    arr.assign(n,vector<lli>(n));\n\n    for(li i = 0 ; i < n ; ++i){\n        for(li j = 0 ; j < n ; ++j){\n            arr[i][j]= (v[i].x * v[j].x  + v[i].y * v[j].y);\n        }\n    }\n// for(li i = 0 ; i < n ; ++i){\n//         for(li j = 0 ; j < n ; ++j){\n//             cout << arr[i][j] << \" \";\n//         }\n//         nl;\n//     }\n\n    li fsum = n*(arr[0][0]) ;\n    for(li j = 0 ; j < n ; ++j ){\n        fsum+= -2*(arr[0][j] ) + (arr[j][j]);\n    } \n    // cout << fsum;nl;\n\n    li mnm = fsum;\n    li mnmind = 0; \n    for(li i = 1 ; i < n ; ++i){\n        li sum = n*(arr[i][i]) ;\n        for(li j = 0 ; j < n ; ++j ){\n            sum+= -2*(arr[i][j] ) + (arr[j][j]);\n        } \n        // cout << sum;nl;\n        if(sum < mnm ){\n            mnm = sum;\n            mnmind = i;\n        }\n        else if(mnm == sum){\n            mnmind = min(i,mnmind);\n        }\n\n    }\n    cout << v[mnmind].x << \" \" << v[mnmind].y;\n    nl;\n\n    \n    \n\n}\n\nint main()\n{\n\n    // #ifndef ONLINE_JUDGE\n    //     freopen(\"input.txt\", \"r\", stdin);\n    //     freopen(\"output.txt\", \"w\", stdout);\n    // #endif\n    fastio;\n    // start\n    li t;\n    cin>>t;\n    while(t--)\n    {\n        solve();\n    }\n    // #ifndef ONLINE_JUDGE\n    //     cout<<\"\\nTime Elapsed: \" << 1.0*clock() / CLOCKS_PER_SEC <<\" sec\\n\"; \n    // #endif\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476345,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4312249",
        "submission_status": "Abort Called",
        "submission_language": "cpp14",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974959,
        "updated_at_ms": 1599976159,
        "misc_notes": "[\"Abort Called\",\"Abort Called\",\"Abort Called\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Abort Called\",\"Abort Called\",\"Abort Called\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:29:29.834Z",
        "__v": 0
    },
    {
        "_id": "5f606d6150731f1064908bb6",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define endl \"\\n\"\n#define mod 1000000007\nvector<int>adj[300001];\nvector<int>v(1000001);\nvector<int>temp(1000001);\nint power(int x,int y)\n{ int temp;\n  if(y==0)\n    return 1;\n  temp=power(x,y/2)%mod;\n  if(y%2==0)\n    return (temp%mod*temp%mod)%mod;\n  else\n    return ((x%mod)*((temp%mod*temp%mod)%mod))%mod;\n}\nbool comp(pair<int,int>&a,pair<int,int>&b)\n{\n  if(a.first!=b.first)\n    return (a.first<b.first);\n  return a.second<b.second;\n}\nvoid seive()\n{ int n=1000001;\n  for(int i=1;i<=n;i++)\n    v[i]=i;\n  for(int i=2;i<=n;i+=2)\n    v[i]=2;\n  for(int i=3;i*i<=n;i++)\n  {\n    for(int j=i*i;j<=n;j++)\n    {\n      if(v[j]==j)\n        v[j]=i;\n    }\n  }\n  for(int i=2;i<=n;i++)\n  {\n    temp[i]=temp[i-1];\n    if(v[i]==i)\n      temp[i]+=1;\n  }\n\n\n}\nvoid solve()\n{  \n  int n;\n  cin>>n;\n  if(n<2)\n  {\n    cout<<0<<endl;\n    return;\n  }\n  int c=temp[n];\n int k=power(2,c-1);\n cout<<k<<endl;\n \n}\nsigned main()\n{   ios_base::sync_with_stdio(false);\n  cin.tie(NULL); \n  //           #ifndef ONLINE_JUDGE\n  // freopen(\"input1.txt\",\"r\",stdin);\n  // freopen(\"output1.txt\",\"w\",stdout);\n  //        #endif\n\n  int t;\n  cin>>t;\n  //  t=1;\n  seive();\n  for(int i=1;i<=t;i++)\n    {solve();\n    }\n\n\n\n    return 0;     \n\n  }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476341,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5810514",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "naveenvineeth6",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974953,
        "updated_at_ms": 1599978553,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:29:37.334Z",
        "__v": 0
    },
    {
        "_id": "5f606d6750731f1064908bb7",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\nint T,n,i,j,k,f=0,p,l=0;\n    scanf(\"%d\",&T);\n    if(0<=T&&T<=10){\n    for(i=0;i<T;i++)\n    {\n        p=650080;\n        scanf(\"%d\",&n);\n        if(0<=n&&n<=100000){\n        int a[n];\n        int b[n];\n        int c[n];\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d  \",&a[j]);\n            scanf(\"%d\",&b[j]);\n        }\n       for(j=0;j<n;j++)\n       {\n           f=0;\n           for(k=0;k<n;k++)\n           {\n               f=f+(pow((a[j]-a[k]),2)+pow((b[j]-b[k]),2));\n               \n           }\n           c[j]=f;\n           if(p>c[j])\n           {p=c[j];l=j;}\n       }\n        printf(\"%d %d\\n\",a[l],b[l]);}\n        \n    }}\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476334,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7754635",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "mkalyani298",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974942,
        "updated_at_ms": 1599977342,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:29:43.184Z",
        "__v": 0
    },
    {
        "_id": "5f606d7050731f1064908bb8",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int i,j,T=0,N=0,x[100000],y[100000],a,b,k,sum,minsum,x_c,y_c;\n    scanf(\"%d\",&T);\n    for(i=0;i<T;i++)\n    {\n        scanf(\"%d\",&N);\n        for(j=0;j<N;j++)\n        {\n            scanf(\"%d\",&x[j]);\n            scanf(\"%d\",&y[j]);\n            //printf(\"%d\",x[j]);\n            //printf(\"%d\\n\",y[j]);\n        }\n        for(j=0;j<N;j++)\n        {\n            //minsum=0;\n            sum=0;\n            a=x[j];\n            b=y[j];\n            //printf(\"%d%d\",a,b);\n            for(k=0;k<N;k++){\n                sum=sum+((a-x[k])*(a-x[k])+(b-y[k])*(b-y[k]));\n            }\n            //printf(\"%d\\n\",sum);\n            if(j==0)\n            {\n                minsum=sum;\n                x_c=x[j];\n                y_c=y[j];\n            }\n            if(sum<minsum)\n            {\n                //printf(\"%d\\n\",sum);\n                minsum=sum;\n                x_c=x[j];\n                y_c=y[j];\n            }\n            //sum=0;\n        }\n        printf(\"%d %d\\n\",x_c,y_c);\n    }\n    //printf(\"%d\",x_c);\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476330,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6846110",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974928,
        "updated_at_ms": 1599977328,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:29:52.933Z",
        "__v": 0
    },
    {
        "_id": "5f606d7650731f1064908bb9",
        "submission_code": "from sys import stdin,stdout\nimport math\nfor _ in range(int(stdin.readline())):\n    n=int(stdin.readline())\n    a=10**9+7\n    if n==1:\n          (stdout.write(1))\n    elif n==2:\n            print(1)     \n    else:    \n        n=math.factorial(n)\n        m=round(n**0.5)\n        cnt=0\n        for i in range(2,m+1):\n            if n%i==0:\n                t=n//i\n                c=i\n                if math.gcd(c,t)==1:\n                    cnt+=1\n        s=str((cnt+1)%a)           \n        (stdout.write((s)+'\\n'))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476316,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7435030",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "Navaneeth__45",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974889,
        "updated_at_ms": 1599974889,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:29:58.533Z",
        "__v": 0
    },
    {
        "_id": "5f606d7d50731f1064908bba",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n        if(n==0)\n            return 1;\n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0)\n            return a;\n        if(a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=0;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476311,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974881,
        "updated_at_ms": 1599979681,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:30:05.184Z",
        "__v": 0
    },
    {
        "_id": "5f606d8550731f1064908bbb",
        "submission_code": "#include<bits/stdc++.h>\n#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    long long t,n,i,j,g,h,s,p,mini;;\n    //vector<pair<int,int>> r;\n    pair<long long int,long long int> e;\n    vector<long long int> x,y;\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        for(i=0;i<n;i++)\n        {\n            cin>>g>>h;\n            x.push_back(g);\n            y.push_back(h);\n        }\n        mini=INT_MAX;\n        for(i=0;i<n;i++)\n        {\n            s=0;\n            for(j=0;j<n;j++)\n            {\n                p=x[j]-x[i];\n                p=p*p;\n                g=y[j]-y[i];\n                g=g*g;\n                s=s+p+g;\n            }\n            if(s<mini)\n            {\n                mini=s;\n                e=make_pair(x[i],y[i]);\n            }\n        }\n        cout<<e.first<<\" \"<<e.second<<endl;\n        x.clear();\n        y.clear();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476309,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6832311",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "19H51A05E3",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974879,
        "updated_at_ms": 1599974879,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:30:13.783Z",
        "__v": 0
    },
    {
        "_id": "5f606d8f50731f1064908bbc",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\nlong long dp[1000000] ;\nlong long exp(long long a, long long b)\n{\n    if(b == 1) return a % (int)(1e9 + 7);\n    if(b == 0) return 1 ;\n    if(a == 0) return 0 ;\n    if(a == 1) return 1 ;\n    if(b & 1)\n    return (exp((a * a) % (int)(1e9 + 7), (b / 2)) * a) % (int)(1e9 + 7) ;\n    return exp((a * a) % (int)(1e9 + 7), (b / 2)) % (int)(1e9 + 7);\n}\nbool isprime(int n)\n{\n    for(int i = 2; i * i <= n; i++)\n    if(n % i == 0)\n    return false ;\n    return true ;\n}\nvoid filldp()\n{\n    int n = 0 ;\n    for(int i = 1 ; i < 1000000 ; i++)\n    {\n        n += isprime(i + 1); \n        dp[i] = exp(2LL, n - 1);\n    }\n}\nvoid solve()\n{\n    int n ; cin >> n;\n    if(n == 1)\n    {\n        cout << \"0\\n\";\n        return ;\n    }\n    cout << dp[n - 1] << \"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL); cout.tie(NULL);\n    filldp();\n    int t = 1; cin >> t;\n    while(t--) solve();\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476307,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5876221",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "NMN5G9",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974875,
        "updated_at_ms": 1599974875,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:30:23.082Z",
        "__v": 0
    },
    {
        "_id": "5f606d9550731f1064908bbd",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint cnt=0;\nlong long int fact(int n)\n{\n    long long int fac=1;\n    if(n%2==0)\n    {\n        while(n)\n        {\n            fac=fac*n*(n-1);\n            n=n-2;\n        }\n    }\n    else\n    {\n        fac=fac*n;\n        n--;\n        while(n)\n        {\n            fac=fac*n*(n-1);\n            n=n-2;\n        }\n    }\n    return fac;\n}\n\nvoid factorize(long long int n){\n   int count = 0;\n   while (!(n % 2)) {\n      n/= 2;\n      count++;\n   }\n   if (count)\n      cnt++;\n   for (long long i = 3; i <= sqrt(n); i += 2) {\n      count = 0;\n      while (n % i == 0) {\n         count++;\n         n = n / i;\n      }\n      if (count)\n        cnt++;\n   }\n   if (n > 2)\n        cnt++;\n    cout<<pow(2,cnt-1)<<endl;\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t,n;\n    long long int fac=1;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cnt=0;\n        fac=fact(n);\n        // cout<<fac<<endl;\n        factorize(fac);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476305,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675890",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "160218733061CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974865,
        "updated_at_ms": 1599977265,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:30:29.738Z",
        "__v": 0
    },
    {
        "_id": "5f606da050731f1064908bbe",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n        if(n==0)\n            return 1;\n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0)\n            return a;\n        if(a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=0;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476299,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974849,
        "updated_at_ms": 1599978449,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:30:40.082Z",
        "__v": 0
    },
    {
        "_id": "5f606daa50731f1064908bbf",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n        if(n==0)\n            return 1;\n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0)\n            return a;\n        if(a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=0;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476282,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974812,
        "updated_at_ms": 1599977212,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:30:50.282Z",
        "__v": 0
    },
    {
        "_id": "5f606db150731f1064908bc0",
        "submission_code": "def compute_hcf(x, y):\n    if x > y:\n        smaller = y\n    else:\n        smaller = x\n    for i in range(1, smaller+1):\n        if((x % i == 0) and (y % i == 0)):\n            hcf = i \n    return hcf\n\nt= int(input())\nfor t1 in range(t):\n    x=int(input())\n    n=1\n    p=0\n    for i in range(2,x+1):\n        n*=i\n    f=[]\n    for i in range(1, n+1):\n        if(n % i == 0):\n            for j in f:\n                if(i*j==n and compute_hcf(i,j)==1):\n                    p+=1\n            f.append(i)\n    print(p)\n    \n           \n        \n        \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476280,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5235288",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anudeep_kalitkar",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974803,
        "updated_at_ms": 1599976003,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:30:57.932Z",
        "__v": 0
    },
    {
        "_id": "5f606dc650731f1064908bc1",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define endl \"\\n\"\n#define mod 1000000007\nvector<int>adj[300001];\nvector<int>v(1000001);\nvector<int>temp(1000001);\nint power(int x,int y)\n{ int temp;\n  if(y==0)\n    return 1;\n  temp=power(x,y/2)%mod;\n  if(y%2==0)\n    return (temp%mod*temp%mod)%mod;\n  else\n    return ((x%mod)*((temp%mod*temp%mod)%mod))%mod;\n}\nbool comp(pair<int,int>&a,pair<int,int>&b)\n{\n  if(a.first!=b.first)\n    return (a.first<b.first);\n  return a.second<b.second;\n}\nvoid seive()\n{ int n=1000001;\n  for(int i=1;i<=n;i++)\n    v[i]=i;\n  for(int i=2;i<=n;i+=2)\n    v[i]=2;\n  for(int i=3;i*i<=n;i++)\n  {\n    for(int j=i*i;j<=n;j=j+i)\n    {\n      if(v[j]==j)\n        v[j]=i;\n    }\n  }\n  for(int i=2;i<=n;i++)\n  {\n    temp[i]=temp[i-1];\n    if(v[i]==i)\n      temp[i]+=1;\n  }\n\n\n}\nvoid solve()\n{  \n  int n;\n  cin>>n;\n  int c=temp[n];\n int k=power(2,c-1);\n cout<<k<<endl;\n \n}\nsigned main()\n{   ios_base::sync_with_stdio(false);\n  cin.tie(NULL); \n  //           #ifndef ONLINE_JUDGE\n  // freopen(\"input1.txt\",\"r\",stdin);\n  // freopen(\"output1.txt\",\"w\",stdout);\n  //        #endif\n\n  int t;\n  cin>>t;\n  //  t=1;\n  seive();\n  for(int i=1;i<=t;i++)\n    {solve();\n    }\n\n\n\n    return 0;     \n\n  }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476278,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5810514",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "naveenvineeth6",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974799,
        "updated_at_ms": 1599977199,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:31:18.889Z",
        "__v": 0
    },
    {
        "_id": "5f606dcd50731f1064908bc2",
        "submission_code": "//author:satwik_bhv1\n#include<bits/stdc++.h>\n//datatypes\n#define ll long long \n#define ld long double\n//loops\n#define fr(i,z,n) for(ll i=z;i<n;i++)\n#define br(i,z,n) for(ll i=z;i>n;i--)\n//operations\n#define mp  make_pair\n#define ff  first\n#define ss  second\n#define pub push_back\n#define all(v) v.begin(),v.end()\n//map\n#define mi map<ll,ll>\n//vectors\n#define vi vector<ll>\n#define vpi vector<pair<ll,ll> >\n//constants\n#define pi 3.1415926535897932384626\n#define mod 1000000007 \n#define MAXN 100001\n/*notes\n    Don't use inbuilt fun for power\n    Range of longlong=(-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 )\n    INT_MAX = 2147483647(aprox 2*10^10)\n    INT_MIN = -2147483648\n    LLONG_MAX = 9223372036854775807 \n    LLONG_MIN = -9223372036854775808\n    __int128_t\n    __gcd is the function in built for hcf\n    priority queue is max heap by default\n    topological sort -> khan's algo use bfs and indegree of node  \n    sssp(positive weighted edges) -> Dijkstras\n    apsp -> Floydwarshall\n    MST -> kruskal(DSU)\n*/\nusing namespace std;\n//functions\nll power(ll x,ll y){ll res=1;while(y){if(y%2){res*=x;}y/=2;x*=x;} return res;}\nll power(ll x,ll y,ll z){ll res=1;while(y){if(y%2){res=(res*x)%z;}y/=2;x=(x*x)%z;} return res;}\nvoid fast() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }\nbool sortbysec(const pair<ll, ll>& a, const pair<ll, ll>& b) { return (a.second > b.second); }\nll ceil(ll x,ll y){return (x/y)+(x%y!=0);}\nconst int dx[4] = { -1, 1, 0, 0};\nconst int dy[4] = {0, 0, -1, 1};\nint dxx[] = { -1, -1, -1, 0, 0, 1, 1, 1 };\nint dyy[] = { -1, 0, 1, -1, 1, -1, 0, 1 };\nconst long long MAX_SIZE = 1000001; \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n\nvoid SieveOfEratosthenes(int N) \n{ \n    isprime[0] = isprime[1] = false ; \n    for (long long int i=2; i<N ; i++) \n    { \n        if (isprime[i]) \n        { \n            prime.push_back(i); \n            SPF[i] = i; \n        } \n        for (long long int j=0; j < (int)prime.size() && i*prime[j] < N && prime[j] <= SPF[i]; j++) \n        { \n            isprime[i*prime[j]]=false;   \n            SPF[i*prime[j]] = prime[j] ; \n        } \n    } \n}  \nvoid solve()\n{\n    ll n,cnt=0;\n    cin>>n;\n    if(n==1)\n    {\n        cout<<0<<\"\\n\";\n        return;\n    }\n    cnt=upper_bound(prime.begin(),prime.end(),n)-prime.begin();\n    cout<<power(2,cnt-1,1000000007)<<\"\\n\";\n}\nint main()\n{\n    fast();\n    ll t;\n    //t=1;\n    cin>>t;\n    SieveOfEratosthenes(1000000);\n    fr(i,0,t)\n    {\n        solve();\n    }\n}\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476273,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2801145",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974784,
        "updated_at_ms": 1599978384,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:31:25.031Z",
        "__v": 0
    },
    {
        "_id": "5f606dd350731f1064908bc3",
        "submission_code": "MAX = 10000\nprefix =[0]*(MAX + 1) \ndef buildPrefix(): \n    prime = [1]*(MAX + 1) \n    p = 2\n    while(p * p <= MAX):  \n        if (prime[p] == 1): \n            i = p * 2\n            while(i <= MAX): \n                prime[i] = 0\n                i += p \n        p+=1\n    for p in range(2,MAX+1):  \n        prefix[p] = prefix[p - 1] \n        if (prime[p]==1): \n            prefix[p]+=1\ndef query(L, R): \n    return prefix[R]-prefix[L - 1] \ndef pow(n,mod):\n    ans=1\n    for i in range(n-1):\n        ans=(ans*2)%mod\n    return ans\nt=int(input())\nbuildPrefix()\nfor i in range(t):\n    n=int(input())\n    print(pow(query(1,n),1000000007))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476270,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4674163",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974775,
        "updated_at_ms": 1599975975,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:31:31.583Z",
        "__v": 0
    },
    {
        "_id": "5f606ddb50731f1064908bc4",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    public static int f(int k,int[][] a)\n    {\n        int x=a[k][0],y=a[k][1],sum=0;;\n        for(int i=0;i<a.length;i++)\n        {\n            if(i==k)\n                continue;\n            sum=sum+(x-a[i][0])*(x-a[i][0])+(y-a[i][1])*(y-a[i][1]);\n        }\n        return sum;\n    }\n    static int min(int i,int j,int[][]a)\n    {\n        if(a[i][0]<a[j][0])\n            return i;\n        else if(a[i][0]>a[j][0])\n            return j;\n        else\n        { if(a[i][1]<=a[j][1])\n            return i;\n         else return j;\n        }\n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        for(int i=0;i<N;i++)\n        {\n            int n=sc.nextInt();\n            int[][] a=new int[n][2];\n            for(int j=0;j<n;j++)\n            {\n                a[j][0]=sc.nextInt();\n                a[j][1]=sc.nextInt();\n            }int max=1000,l=0;\n            int[] sum=new int[n];\n            for(int i1=0;i1<n;i1++)\n            {\n                sum[i1]=f(i1,a);\n                if(max>=sum[i1])\n                {\n                    if(sum[i1]==max)\n                        l=min(l,i1,a);\n                    else\n                        l=i1;\n                    max=sum[i1];\n                }\n            }            \n            System.out.println(a[l][0]+\" \"+a[l][1]);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476261,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636583",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "ramyasreesai2000",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974751,
        "updated_at_ms": 1599977151,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:31:39.781Z",
        "__v": 0
    },
    {
        "_id": "5f606de550731f1064908bc5",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n    int n,t,i,j,k,a,b;\n    scanf(\"%d\",&t);\n    for(i=0;i<t;i++)\n    {\n        scanf(\"%d\",&n);\n        int x[n],y[n],f[n];\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d%d\",&x[j],&y[j]);\n            f[j]=0;\n        }\n        for(j=0;j<n;j++)\n        {\n            a=x[j];\n            b=y[j];\n            for(k=0;k<n;k++)\n            {\n                f[j]=f[j]+((a-x[k])*(a-x[k]))+((b-y[k])*(b-y[k]));\n            }\n        }\n        int min=0;\n        for(j=0;j<n;j++)\n        {\n            //printf(\"%d \",f[j]);\n            if(f[min]>f[j])\n                min=j;\n        }\n        //printf(\"\\n\");\n        printf(\"%d %d\\n\",x[min],y[min]);\n    }\n    \n    \n    \n    \n    \n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476251,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4669863",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "160218733019CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974731,
        "updated_at_ms": 1599974731,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:31:49.530Z",
        "__v": 0
    },
    {
        "_id": "5f606ded50731f1064908bc6",
        "submission_code": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# ------------------- fast io --------------------\nimport math\nimport bisect\nfrom collections import Counter,defaultdict,deque\ndef int1():\n    return int(input())\ndef map1():\n    return map(int,input().split())\ndef list1():\n    return list(map(int,input().split()))\nmod=pow(10,9)+7\ndef binary_search(arr, low, high, x): \n\n    if high >= low: \n\n        mid = (high + low) // 2\n        if arr[mid] == x: \n            return mid \n\n        elif arr[mid] > x: \n            return binary_search(arr, low, mid - 1, x) \n        else:\n            return binary_search(arr, mid + 1, high, x) \n\n    else: \n        return -1\ndef gg():\n    n=pow(10,6)\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True):\n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    l1=[]\n    for i in range(2,n+1):\n        if(prime[i]==True):\n            l1.append(i)\n    return l1\ndef power(x, y, p) : \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0  \n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1 \n        x = (x * x) % p \n    return res \nl2=gg()\nfor _ in range(int(input())):\n    n=int1()\n    if(n==1):\n        print(0)\n    else:\n        r=binary_search(l2,0,len(l2)-1,n)\n        if(r!=-1):\n            v=2**r\n            print(v%mod)\n        else:\n            v=bisect.bisect_left(l2,n)\n            v1=2**(v-1)\n            print(v1%mod)\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476250,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974731,
        "updated_at_ms": 1599977131,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:31:57.830Z",
        "__v": 0
    },
    {
        "_id": "5f606df650731f1064908bc7",
        "submission_code": "#include<bits/stdc++.h>\n#define ll           long long int\n#define pb           push_back\n#define F            first\n#define S            second\nusing namespace std;\nvoid solve()\n{\n    int n,m;\n    cin>>n>>m;\n    char a[n][m];\n    for(int i=0;i<n;++i)\n    {\n        for(int j=0;j<m;++j)\n            cin>>a[i][j];\n    }\n    string ans[n][m];\n    string comp[n][m];\n    ans[0][0]=a[0][0];\n    comp[0][0]=\"\";\n    for(int i=0;i<n;++i)\n    {\n        for(int j=0;j<m;++j)\n        {\n            if(i&&j)\n            {\n                if((ans[i-1][j]<ans[i][j-1])||((ans[i-1][j]==ans[i][j-1])&&(comp[i-1][j]<=comp[i][j-1])))\n                {\n                    ans[i][j]=(ans[i-1][j]+a[i][j]);\n                    comp[i][j]=comp[i-1][j]+'D';\n                }\n                else\n                {\n                    ans[i][j]=(ans[i][j-1]+a[i][j]);\n                    comp[i][j]=comp[i][j-1]+'R';\n                }\n            }\n            else if(i)\n            {\n                ans[i][j]=ans[i-1][j]+a[i][j];\n                comp[i][j]=comp[i-1][j]+'D';\n            }\n            else if(j)\n            {\n                ans[i][j]=ans[i][j-1]+a[i][j];\n                comp[i][j]=comp[i][j-1]+'R';\n            }\n        }\n    }\n    cout<<comp[n-1][m-1]<<\"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin>>t;\n    for(int i=1;i<=t;++i)\n    {\n        cout<<\"Case #\"<<i<<\": \";\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476245,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "9693257",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "sg0071729",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599974728,
        "updated_at_ms": 1599974728,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:32:06.130Z",
        "__v": 0
    },
    {
        "_id": "5f606e0050731f1064908bc8",
        "submission_code": "def fact(n):\n    if n==1:\n        return 1\n    return n*fact(n-1)\ndef isprime(i):\n    if i == 1:\n        return True\n    for x in range (2,i):\n        if (i%x == 0) :\n            return False\n    return True\n\n#gcd and coprime functions used from https://www.geeksforgeeks.org/check-two-numbers-co-prime-not/*/\ndef gcd(a, b):\n    if (a == 0 or b == 0): return 0\n    if (a == b): return a\n    if (a > b):\n        return gcd(a - b, b)\n    return gcd(a, b - a)\n\ndef coprime(a, b):\n    if (gcd(a, b) == 1):\n        return True\n    else:\n        return False\nfor _ in range (int(input())):\n    n=int(input())\n    count=0\n    l=[]\n    fa=fact(n)\n    for i in range(1,fa):\n        if (isprime(i)):\n            if (fa%i == 0):\n                if (coprime(fa//i,i) and fa//i != i):\n                    if fa // i not in l and i not in l:\n                        count += 1\n                        l.append(i)\n                        l.append(fa // i)\n    print(count)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476244,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5993493",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "jaswanthrocks900",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974724,
        "updated_at_ms": 1599974724,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:32:16.331Z",
        "__v": 0
    },
    {
        "_id": "5f606e0a50731f1064908bc9",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n \ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef long double ld;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<ii> vii;\ntypedef pair<ll,ll> pll;\ntypedef vector<vector<ii>> vvii;\n \n#define F first\n#define S second\n#define PB push_back\n#define MP make_pair\n#define EPS 1e-9\n#define INF 1000000\n#define MOD 1000000007\n#define PI 3.14159265358979323846\n\nll power[78499];\n\nvoid calcPow()\n{\n    power[0]=1;\n    for(int i=1;i<=78498;i++)\n        power[i] = (2*power[i-1])%MOD;\n}\n\nint u[INF+1],pn=0;\nvi primesVec;\nvoid eulerSieve()\n{\n    for(int i=2;i<=INF;++i)\n    {\n        if(!u[i]){\n            u[i]=i;\n            primesVec.push_back(i);\n        }\n        for(int j=0;i*primesVec[j]<=INF;++j)\n        {\n                u[i*primesVec[j]]=primesVec[j];\n                if(i%primesVec[j]==0)\n                    break;\n        }\n    }\n}\n\n\nint main()\n{    \n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n\n    int t,n;\n    cin>>t;\n    eulerSieve();\n    calcPow();\n\n    while(t--)\n    {\n        cin>>n;\n        if(n==1)\n            cout<<\"0\"<<endl;\n        else\n        {\n            int m = upper_bound(primesVec.begin(),primesVec.end(),n) - primesVec.begin();\n            //cout<<m<<\" \"<<primesVec.size()<<endl;\n            cout<<power[m-1]<<endl;\n        }\n    }\n\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476243,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5369834",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "rizwan_b170829cs",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974722,
        "updated_at_ms": 1599979522,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:32:26.679Z",
        "__v": 0
    },
    {
        "_id": "5f606e1150731f1064908bca",
        "submission_code": "def fact(num):\n    factorial = 1\n    for i in range(1,num + 1):\n       factorial = factorial*i\n    return factorial\n    \ndef factors(x):\n    result = []\n    for i in range(1, x + 1):\n        if x % i == 0:\n            result.append(i)\n    return result\n          \ndef primeNumber(x):\n    if x >= 2:\n        for y in range(2,x):\n            if not ( x % y ):\n                return False\n    else:\n        return False\n    return True\n\ncase = int(input())\nresult =[]\nfor i in range(case): \n    num = int(input())\n    count = 1\n    factorial = fact(num)\n    collection = factors(factorial)\n    for i in range(1,len(collection)):\n        for j in range(i,len(collection)):\n            if collection[i] * collection[j] == factorial and primeNumber(collection[i]+collection[j]):\n                count += 1\n    result.append(count)\n        \n    \nprint(\"\\n\".join(map(str,result)))\n        \n        \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476242,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8492552",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "rishadp2747",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974722,
        "updated_at_ms": 1599975922,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:32:33.880Z",
        "__v": 0
    },
    {
        "_id": "5f606e1850731f1064908bcb",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\nint T,n,i,j,k,f=0,p,l=0;\n    scanf(\"%d\",&T);\n    for(i=0;i<T;i++)\n    {\n        p=650080;\n        scanf(\"%d\",&n);\n        int a[n];\n        int b[n];\n        int c[n];\n        for(j=0;j<n;j++)\n        {\n            scanf(\"%d  \",&a[j]);\n            scanf(\"%d\",&b[j]);\n        }\n       for(j=0;j<n;j++)\n       {\n           f=0;\n           for(k=0;k<n;k++)\n           {\n               f=f+(pow((a[j]-a[k]),2)+pow((b[j]-b[k]),2));\n               \n           }\n           c[j]=f;\n           if(p>c[j])\n           {p=c[j];l=j;}\n       }\n        \n    /* for(j=0;j<n;j++)\n     {\n        if(p==c[j])\n            break;\n     }*/\n        printf(\"%d %d\\n\",a[l],b[l]);\n        \n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476239,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7754635",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "mkalyani298",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974718,
        "updated_at_ms": 1599975918,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:32:40.830Z",
        "__v": 0
    },
    {
        "_id": "5f606e2250731f1064908bcc",
        "submission_code": "def gcd(a,b):\n    while(b!=0):\n        a,b =b,a%b\n    return a\n\ndef coprime(a,b):\n    return gcd(a,b)==1\n\ndef fact(n):\n    if(n==0 or n==1):\n        return 1\n    else:\n        return n*fact(n-1)\n    \nn=int(input())\nfor i in range(n):\n    a=int(input())\n    f=fact(a)\n    count=0\n    for i in range(1,a):\n        if(coprime(i,f//i)==1):\n            count+=1\n    print(count)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476238,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4670161",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "AnvithaGutha",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974715,
        "updated_at_ms": 1599977115,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:32:50.978Z",
        "__v": 0
    },
    {
        "_id": "5f606e2950731f1064908bcd",
        "submission_code": "for t in range(int(input())):\n    n=int(input())\n    l=[]\n    for i in range(n):\n        a=list(map(int,input().split()))\n        l.append(a)\n        mivalue=l[0]\n        mi=1000000\n    for i in range(n):\n        s=0\n        for j in range(n):\n            s=s+((l[i][0]-l[j][0])**2+(l[i][1]-l[j][1])**2)\n        if(s<mi):\n            mi=s\n            mivalue=l[i]\n    print(*mivalue)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476229,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4674163",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974689,
        "updated_at_ms": 1599974689,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:32:57.092Z",
        "__v": 0
    },
    {
        "_id": "5f606e2e50731f1064908bce",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    long T, N, i, minIndex;\n    long sumx, sumy, squares, tempx, tempy, minF, F;\n    cin >> T;\n    vector<long> cx, cy;\n    while(T--) {\n        cin >> N;\n        sumx=0, sumy=0, squares=0;\n        for(i=0;i<N;i++) {\n            cin >> tempx >> tempy;\n            sumx += tempx;\n            sumy += tempy;\n            squares += (tempx*tempx)+(tempy*tempy);\n            cx.push_back(tempx);\n            cy.push_back(tempy);\n        }\n        long MAX = 9223372036854775800;\n        minF = MAX;\n        minIndex = 0;\n        for(i=0;i<N;i++) {\n            F = N*(cx[i]*cx[i]+cy[i]*cy[i])+squares-2*(cx[i]*sumx+cy[i]*sumy);\n            if(minF > F) {\n                minF = F;\n                minIndex = i;\n            }\n        }\n        cout << cx[minIndex] <<\" \"<<cy[minIndex]<<\"\\n\";\n        cx.clear();\n        cy.clear();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476227,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "1082327",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "Tush512",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974676,
        "updated_at_ms": 1599975876,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:33:02.924Z",
        "__v": 0
    },
    {
        "_id": "5f606e3550731f1064908bcf",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n        if(n==0)\n            return 1;\n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0)\n            return a;\n        if(a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=0;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476226,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974676,
        "updated_at_ms": 1599975876,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:33:09.901Z",
        "__v": 0
    },
    {
        "_id": "5f606e3e50731f1064908bd0",
        "submission_code": "import math\ndef countDivisors(n) :\n    count = 0\n    i = 1\n    while i <= math.sqrt(n):\n        if (n % i == 0) :\n            if not n // i == i :\n                #print (i , n//i)\n                if i * (n//i) == n and math.gcd(i, n//i) == 1:\n                    count += 1\n        i = i + 1\n    return count\n\nfact = {0:1, 1:1}\ndef factorial_of(n):\n    if n in fact:\n        return fact[n]\n    else:\n        fa = list(fact.keys())[-1]\n        for i in range(fa,n+1):\n            fact[i] = fact[i-1] * i\n        return fact[n]\n\nn=int(input())\nfor _ in range(n):\n    a=int(input())\n    f=factorial_of(a)\n    cnt=countDivisors(f)\n    cnt=cnt%((10**9)+7)\n    print(cnt)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476224,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6619310",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Rahul_Sripada",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974676,
        "updated_at_ms": 1599975876,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:33:18.861Z",
        "__v": 0
    },
    {
        "_id": "5f606e4950731f1064908bd1",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    long T, N, i, minIndex;\n    long sumx, sumy, squares, tempx, tempy, minF, F;\n    cin >> T;\n    vector<long> cx, cy;\n    while(T--) {\n        cin >> N;\n        sumx=0, sumy=0, squares=0;\n        for(i=0;i<N;i++) {\n            cin >> tempx >> tempy;\n            sumx += tempx;\n            sumy += tempy;\n            squares += (tempx*tempx)+(tempy*tempy);\n            cx.push_back(tempx);\n            cy.push_back(tempy);\n        }\n        long MAX = 9223372036854775800;\n        minF = MAX;\n        minIndex = 0;\n        for(i=0;i<N;i++) {\n            F = N*(cx[i]*cx[i]+cy[i]*cy[i])+squares-2*(cx[i]*sumx+cy[i]*sumy);\n            if(minF > F) {\n                minF = F;\n                minIndex = i;\n            }\n        }\n        cout << cx[minIndex] <<\" \"<<cy[minIndex]<<\"\\n\";\n        cx.clear();\n        cy.clear();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476217,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "999952",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "cj1995",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974667,
        "updated_at_ms": 1599977067,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:33:29.444Z",
        "__v": 0
    },
    {
        "_id": "5f606e5250731f1064908bd2",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    int t;\n    cin>>t;\n    while(t--)\n    {\n        long long int x[100000],y[100000],i,n,sumsqx=0,sumx=0,sumy=0,sumsqy=0,ans[100000]={0},min=1000000000000000000,a,b;\n        cin>>n;\n        for(i=0;i<n;i++)\n        {\n            cin>>x[i]>>y[i];\n            sumsqx+=x[i]*x[i];\n            sumsqy+=y[i]*y[i];\n            sumx+=x[i];\n            sumy+=y[i];\n        }\n        for(i=0;i<n;i++)\n        {\n            ans[i]=n*(x[i]*x[i]+y[i]*y[i])+sumsqx+sumsqy-2*(x[i]*sumx+y[i]*sumy);\n        }\n        for(i=0;i<n;i++)\n        {\n            if(ans[i]<min)\n            {\n                min=ans[i];\n                a=x[i];\n                b=y[i];\n            }\n        }\n            cout<<a<<\" \"<<b<<endl;\n    }\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476216,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7133320",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "logicalcoder9908",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974664,
        "updated_at_ms": 1599975864,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:33:38.762Z",
        "__v": 0
    },
    {
        "_id": "5f606e5950731f1064908bd3",
        "submission_code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll =long long int;\n\nll md=pow(10,9)+7;\nll fac[1000001],ans[1000001],fact[1000001];\nunordered_map<ll,ll> mp;\nll g(int i)\n{\n    mp.clear();\n    while(i%2==0)\n    {\n        mp[2]++;\n        i/=2;\n    }\n    for(int k=3;k<=sqrt(i);k+=2)\n    {\n        while(i%k==0)\n        {\n            mp[k]++;\n            i/=k;\n        }\n    }\n    if(i>1)\n    {\n        mp[i]++;\n    }\n    return mp.size();\n}\nvoid f()\n{\n    ans[0]=0;\n    ll x;\n    ans[1]=1;\n    for(int i=2;i<=1000000;i++)\n    {\n        x=ans[i-1]*2;\n        x%=md;\n        ans[i]=x;\n    }\n    fac[0]=0;\n    fac[1]=0;\n    fac[2]=1;\n    fac[3]=1;\n    mp[2]=1;\n    mp[3]=1;\n    for(int i=4;i<=1000000;i++)\n    {\n        //g(i);\n        fac[i]=g(i);\n    }\n    fact[1]=1;\n    for(int k=2;k<=1000000;k++)\n    {\n        x=k*fact[k-1];\n        x%=md;\n        fact[k]=x;\n    }\n}\n\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    f();\n    ll t,n;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cout<<ans[fac[fact[n]]]<<\"\\n\";\n       // cout<<ans[3]<<\"\\n\";;\n    }\n    \n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476212,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2892432",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp14",
        "site_user_handle": "17H51A05M7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974655,
        "updated_at_ms": 1599975855,
        "misc_notes": "[\"Success\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T07:33:45.829Z",
        "__v": 0
    },
    {
        "_id": "5f606e6150731f1064908bd4",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define endl \"\\n\"\n#define mod 1000000007\nvector<int>adj[300001];\nvector<int>v(1000001);\nvector<int>temp(1000001);\nint power(int x,int y)\n{ int temp;\n  if(y==0)\n    return 1;\n  temp=power(x,y/2)%mod;\n  if(y%2==0)\n    return (temp%mod*temp%mod)%mod;\n  else\n    return ((x%mod)*((temp%mod*temp%mod)%mod))%mod;\n}\nbool comp(pair<int,int>&a,pair<int,int>&b)\n{\n  if(a.first!=b.first)\n    return (a.first<b.first);\n  return a.second<b.second;\n}\nvoid seive()\n{ int n=1000001;\n  for(int i=1;i<=n;i++)\n    v[i]=i;\n  for(int i=2;i<=n;i+=2)\n    v[i]=2;\n  for(int i=3;i*i<=n;i++)\n  {\n    for(int j=i*i;j<=n;j++)\n    {\n      if(v[j]==j)\n        v[j]=i;\n    }\n  }\n  for(int i=2;i<=n;i++)\n  {\n    temp[i]=temp[i-1];\n    if(v[i]==i)\n      temp[i]+=1;\n  }\n\n\n}\nvoid solve()\n{  \n  int n;\n  cin>>n;\n  int c=temp[n];\n int k=power(2,c-1);\n cout<<k<<endl;\n \n}\nsigned main()\n{   ios_base::sync_with_stdio(false);\n  cin.tie(NULL); \n  //           #ifndef ONLINE_JUDGE\n  // freopen(\"input1.txt\",\"r\",stdin);\n  // freopen(\"output1.txt\",\"w\",stdout);\n  //        #endif\n\n  int t;\n  cin>>t;\n  //  t=1;\n  seive();\n  for(int i=1;i<=t;i++)\n    {solve();\n    }\n\n\n\n    return 0;     \n\n  }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476210,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5810514",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "naveenvineeth6",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974646,
        "updated_at_ms": 1599975846,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:33:53.507Z",
        "__v": 0
    },
    {
        "_id": "5f606e6750731f1064908bd5",
        "submission_code": "import java.awt.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        CP sc =new CP();\n        int tt = sc.nextInt();\n        while (tt-- > 0) {\n            int n = sc.nextInt();\n            Point[] p = new Point[n];\n            for(int i=0;i<n;i++){\n                p[i] = new Point();\n                p[i].x = sc.nextInt();\n                p[i].y = sc.nextInt();\n            }\n            String[] s = geometricMedian(p,n).split(\" \");\n            double min = Double.MAX_VALUE;\n            Point r = new Point();\n            for(int i=0;i<n;i++){\n                double x = (p[i].x-Double.parseDouble(s[0]))*(p[i].x-Double.parseDouble(s[0]));\n                double y = (p[i].y-Double.parseDouble(s[1]))*(p[i].y-Double.parseDouble(s[1]));\n                if(min>(Math.sqrt(x+y))) {\n                    min = Math.sqrt(x + y);\n                    r.x = p[i].x;\n                    r.y = p[i].y;\n                }\n            }\n            System.out.println((int)r.x+\" \"+(int)r.y);\n        }\n    }\n    static String geometricMedian(Point arr[], int n)\n    {\n\n        // Current x coordinate and y coordinate\n        Point current_point = new Point();\n\n        for (int i = 0; i < n; i++) {\n            current_point.x += arr[i].x;\n            current_point.y += arr[i].y;\n        }\n\n        // Here current_point becomes the\n        // Geographic MidPoint\n        // Or Center of Gravity of equal\n        // discrete mass distributions\n        current_point.x /= n;\n        current_point.y /= n;\n\n        // minimum_distance becomes sum of\n        // all distances from MidPoint to\n        // all given points\n        double minimum_distance =\n                distSum(current_point, arr, n);\n\n        int k = 0;\n        while (k < n) {\n            for (int i = 0; i < n && i != k; i++) {\n                Point newpoint = new Point();\n                newpoint.x = arr[i].x;\n                newpoint.y = arr[i].y;\n                double newd =\n                        distSum(newpoint, arr, n);\n                if (newd < minimum_distance) {\n                    minimum_distance = newd;\n                    current_point.x = newpoint.x;\n                    current_point.y = newpoint.y;\n                }\n            }\n            k++;\n        }\n\n        // Assume test_distance to be 1000\n        double test_distance = 1000;\n        int flag = 0;\n\n        // Test loop for approximation starts here\n        while (test_distance > lower_limit) {\n\n            flag = 0;\n\n            // Loop for iterating over all 4 neighbours\n            for (int i = 0; i < 4; i++) {\n\n                // Finding Neighbours done\n                Point newpoint = new Point();\n                newpoint.x = current_point.x + test_distance * test_point[i][0];\n                newpoint.y = current_point.y + test_distance * test_point[i][1];\n\n                // New sum of Euclidean distances\n                // from the neighbor to the given\n                // data points\n                double newd = distSum(newpoint, arr, n);\n\n                if (newd < minimum_distance) {\n\n                    // Approximating and changing\n                    // current_point\n                    minimum_distance = newd;\n                    current_point.x = newpoint.x;\n                    current_point.y = newpoint.y;\n                    flag = 1;\n                    break;\n                }\n            }\n\n            // This means none of the 4 neighbours\n            // has the new minimum distance, hence\n            // we divide by 2 and reiterate while\n            // loop for better approximation\n            if (flag == 0)\n                test_distance /= 2;\n        }\n        return current_point.x+\" \"+current_point.y;\n    }\n    static double distSum(Point p, Point arr[], int n)\n    {\n        double sum = 0;\n        for (int i = 0; i < n; i++) {\n            double distx = Math.abs(arr[i].x - p.x);\n            double disty = Math.abs(arr[i].y - p.y);\n            sum += Math.sqrt((distx * distx) + (disty * disty));\n        }\n\n        // Return the sum of Euclidean Distances\n        return sum;\n    }\n    static double[][] test_point = { { -1.0, 0.0 }, { 0.0, 1.0 }, { 1.0, 0.0 }, { 0.0, -1.0 } };\n\n    static double lower_limit = 0.01;\n    static class Point {\n    double x, y;\n    }\n\n\n    /*****************************************************************************/\n    static class CP\n    {\n        BufferedReader bufferedReader;\n        StringTokenizer stringTokenizer;\n        public CP() {\n            bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n        }\n        int nextInt() {\n            return Integer.parseInt(NNNN());\n        }\n        long nextLong() {\n            return Long.parseLong(NNNN());\n        }\n        double nextDouble() {\n            return Double.parseDouble(NNNN());\n        }\n        String NNNN() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreElements()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                }\n                catch (IOException  e) {\n                    e.printStackTrace();\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n        String nextLine() {\n            String spl = \"\";\n            try {\n                spl = bufferedReader.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return spl;\n        }\n    }\n    /*****************************************************************************/\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476204,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9698632",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "rhythem_18930301",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974633,
        "updated_at_ms": 1599975833,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:33:59.446Z",
        "__v": 0
    },
    {
        "_id": "5f606e7150731f1064908bd6",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int T, N, i, minIndex;\n    long long sumx, sumy, squares, tempx, tempy, minF, F;\n    cin >> T;\n    vector<long long> cx, cy;\n    while(T--) {\n        cin >> N;\n        sumx=0, sumy=0, squares=0;\n        for(i=0;i<N;i++) {\n            cin >> tempx >> tempy;\n            sumx += tempx;\n            sumy += tempy;\n            squares += (tempx*tempx)+(tempy*tempy);\n            cx.push_back(tempx);\n            cy.push_back(tempy);\n        }\n        minF = INT_MAX;\n        minIndex = 0;\n        for(i=0;i<N;i++) {\n            F = N*(cx[i]*cx[i]+cy[i]*cy[i])+squares-2*(cx[i]*sumx+cy[i]*sumy);\n            if(minF > F) {\n                minF = F;\n                minIndex = i;\n            }\n        }\n        cout << cx[minIndex] <<\" \"<<cy[minIndex]<<\"\\n\";\n        cx.clear();\n        cy.clear();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476197,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "999952",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "cj1995",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974606,
        "updated_at_ms": 1599975806,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:34:09.696Z",
        "__v": 0
    },
    {
        "_id": "5f606e7a50731f1064908bd7",
        "submission_code": "import java.util.*;\nclass Solution\n{\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        ArrayList<Integer> arr=new ArrayList<Integer>(n);\n        for(int i=0;i<n;i++)\n        {\n            int f=sc.nextInt();\n            arr.add(f);\n        }\n        int num=0;\n        for(int i=0;i<n;i++)\n        {\n            num=arr.get(i);\n            int v=factorial(num);\n            countprimes(v);\n        }\n    }\n    public static int factorial(int n)\n    {\n        if(n==0)\n            return 1;\n        return n*factorial(n-1);\n    }\n    static int gcd(int a,int b)\n    {\n        if(a==0)\n            return b;\n        if(b==0)\n            return a;\n        if(a==b)\n            return a;\n        if(a>b)\n            return gcd(a-b,b);\n        return gcd(a,b-a);\n        }\n    public static void countprimes(int n)\n    {\n        int count=0;\n        for(int i=2;i<=Math.sqrt(n);i++)\n        {\n            if(n%i==0)\n            {\n                if(gcd(i,(n/i))==1)\n                {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count+1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476188,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4611199",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "Vinitha_G",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974577,
        "updated_at_ms": 1599974577,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:34:18.735Z",
        "__v": 0
    },
    {
        "_id": "5f606e8450731f1064908bd8",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int i,j,T=0,N=0,x[50],y[50],a,b,k,sum,minsum,x_c,y_c;\n    scanf(\"%d\",&T);\n    for(i=0;i<T;i++)\n    {\n        scanf(\"%d\",&N);\n        for(j=0;j<N;j++)\n        {\n            scanf(\"%d\",&x[j]);\n            scanf(\"%d\",&y[j]);\n            //printf(\"%d\",x[j]);\n            //printf(\"%d\\n\",y[j]);\n        }\n        for(j=0;j<N;j++)\n        {\n            //minsum=0;\n            sum=0;\n            a=x[j];\n            b=y[j];\n            //printf(\"%d%d\",a,b);\n            for(k=0;k<N;k++){\n                sum=sum+((a-x[k])*(a-x[k])+(b-y[k])*(b-y[k]));\n            }\n            //printf(\"%d\\n\",sum);\n            if(j==0)\n            {\n                minsum=sum;\n                x_c=x[j];\n                y_c=y[j];\n            }\n            if(sum<minsum)\n            {\n                //printf(\"%d\\n\",sum);\n                minsum=sum;\n                x_c=x[j];\n                y_c=y[j];\n            }\n            //sum=0;\n        }\n        printf(\"%d %d\\n\",x_c,y_c);\n    }\n    //printf(\"%d\",x_c);\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476181,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6846110",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974558,
        "updated_at_ms": 1599975758,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:34:28.014Z",
        "__v": 0
    },
    {
        "_id": "5f606e8e50731f1064908bd9",
        "submission_code": "def fact(num):\n    factorial = 1\n    for i in range(1,num + 1):\n       factorial = factorial*i\n    return factorial\n    \ndef factors(x):\n    result = []\n    for i in range(1, x + 1):\n        if x % i == 0:\n            result.append(i)\n    return result\n          \ndef primeNumber(x):\n    if x >= 2:\n        for y in range(2,x):\n            if not ( x % y ):\n                return False\n    else:\n        return False\n    return True\n\ncase = int(input())\nnum = []\n\nfor i in range(case): \n    num.append(int(input()))\n\n\n\nresult =[]\nfor val in num:\n    count = 1\n    \n    \n    factorial = fact(val)\n    collection = factors(factorial)\n    \n    for i in range(1,len(collection)):\n        for j in range(i,len(collection)):\n            if collection[i] * collection[j] == factorial and primeNumber(collection[i]+collection[j]):\n                count += 1\n    result.append(count)\n        \n    \nprint(\"\\n\".join(map(str,result)))\n        \n        \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476178,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8492552",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "rishadp2747",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974549,
        "updated_at_ms": 1599974549,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:34:38.287Z",
        "__v": 0
    },
    {
        "_id": "5f606e9650731f1064908bda",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int LIMIT = 1e9+7;\nconst int SIZE = 1e6;\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    vector<int> primes(SIZE+1, 1);\n    vector<int> ans(SIZE+1, true);\n    \n    // Sieve \n    for (int i = 2; i*i <= SIZE; i++) { \n        if (primes[i] == 1) { \n            for (int j = i*i; j <= SIZE; j += i) \n                primes[j] = 0; \n        } \n    } \n    \n    long long pow2 = 1;\n    ans[1] = ans[0] = 1;\n    int check = 0;\n    for(int i = 2; i <= SIZE; ++i){\n        if(primes[i] == 1){\n            if(check == 0){\n                check = 1;\n            } else{\n                pow2 = (2*pow2) % LIMIT;\n            }\n        }\n        ans[i] = pow2;\n    }\n  \n    int T;\n    cin >> T;\n    int N;\n    while(T--){\n        cin >> N;\n        cout << ans[N] << \"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476177,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974545,
        "updated_at_ms": 1599975745,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:34:46.036Z",
        "__v": 0
    },
    {
        "_id": "5f606e9d50731f1064908bdb",
        "submission_code": "import bisect \ndef f(a,b,x,y,n):\n    v=0\n    #print(b)\n    for i in range(n):\n        v+=(x[i]-a)**2 + (y[i]-b)**2 \n    return v     \nfor _ in range(int(input())):\n    n=int(input())\n    x=[]\n    y=[]\n    z=[]\n    for i in range(n):\n        x1,y1=map(int,input().split())\n        x.append(x1)\n        y.append(y1)\n        z.append([(x1**2  + y1**2),x1,y1])\n    a=sum(x)//n \n    b=sum(y)//n \n    z.sort()\n    z1=[s[0] for s in z]\n    s=a**2 + b**2 \n    #print(z1)\n    j=bisect.bisect_left(z1,s)\n    if j==n:\n        f1=f(z[n-1][1],z[n-1][2],x,y,n) \n    else:\n        f1=f(z[j][1],z[j][2],x,y,n) \n    k=bisect.bisect_right(z1,s)\n    if k==n:\n        f2=f(z[n-1][1],z[n-1][2],x,y,n) \n    else:\n        f2=f(z[k][1],z[k][2],x,y,n)\n    if f1<f2:\n        if j==n:\n            print(z[n-1][1],z[n-1][2])\n        else:\n            print(z[j][1],z[j][2])\n    else:\n        if j==n:\n            print(z[n-1][1],z[n-1][2])\n        else:\n            print(z[k][1],z[k][2])\n        \n            \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476173,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5862783",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "Satya_raj887",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974537,
        "updated_at_ms": 1599974537,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:34:53.081Z",
        "__v": 0
    },
    {
        "_id": "5f606ea550731f1064908bdc",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint cnt=0;\nlong long int fact(int n)\n{\n    long long int fac=1;\n    // if(n%2==0)\n    // {\n        while(n)\n        {\n            fac=fac*n;\n            n--;\n        }\n    // }\n    // else\n    // {\n    //     fac=fac*n;\n    //     n--;\n    //     while(n)\n    //     {\n    //         fac=fac*n*n-1;\n    //         n=n-2;\n    //     }\n    // }\n    return fac;\n}\n\nvoid factorize(long long int n){\n   int count = 0;\n   while (!(n % 2)) {\n      n/= 2;\n      count++;\n   }\n   if (count)\n      cnt++;\n   for (long long i = 3; i <= sqrt(n); i += 2) {\n      count = 0;\n      while (n % i == 0) {\n         count++;\n         n = n / i;\n      }\n      if (count)\n        cnt++;\n   }\n   if (n > 2)\n        cnt++;\n    cout<<pow(2,cnt-1)<<endl;\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t,n;\n    long long int fac=1;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cnt=0;\n        fac=fact(n);\n        factorize(fac);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476172,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675890",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "160218733061CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974537,
        "updated_at_ms": 1599975737,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:35:01.293Z",
        "__v": 0
    },
    {
        "_id": "5f606ead50731f1064908bdd",
        "submission_code": "//author:satwik_bhv1\n#include<bits/stdc++.h>\n//datatypes\n#define ll long long \n#define ld long double\n//loops\n#define fr(i,z,n) for(ll i=z;i<n;i++)\n#define br(i,z,n) for(ll i=z;i>n;i--)\n//operations\n#define mp  make_pair\n#define ff  first\n#define ss  second\n#define pub push_back\n#define all(v) v.begin(),v.end()\n//map\n#define mi map<ll,ll>\n//vectors\n#define vi vector<ll>\n#define vpi vector<pair<ll,ll> >\n//constants\n#define pi 3.1415926535897932384626\n#define mod 1000000007 \n#define MAXN 100001\n/*notes\n    Don't use inbuilt fun for power\n    Range of longlong=(-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 )\n    INT_MAX = 2147483647(aprox 2*10^10)\n    INT_MIN = -2147483648\n    LLONG_MAX = 9223372036854775807 \n    LLONG_MIN = -9223372036854775808\n    __int128_t\n    __gcd is the function in built for hcf\n    priority queue is max heap by default\n    topological sort -> khan's algo use bfs and indegree of node  \n    sssp(positive weighted edges) -> Dijkstras\n    apsp -> Floydwarshall\n    MST -> kruskal(DSU)\n*/\nusing namespace std;\n//functions\nll power(ll x,ll y){ll res=1;while(y){if(y%2){res*=x;}y/=2;x*=x;} return res;}\nll power(ll x,ll y,ll z){ll res=1;while(y){if(y%2){res=(res*x)%z;}y/=2;x=(x*x)%z;} return res;}\nvoid fast() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }\nbool sortbysec(const pair<ll, ll>& a, const pair<ll, ll>& b) { return (a.second > b.second); }\nll ceil(ll x,ll y){return (x/y)+(x%y!=0);}\nconst int dx[4] = { -1, 1, 0, 0};\nconst int dy[4] = {0, 0, -1, 1};\nint dxx[] = { -1, -1, -1, 0, 0, 1, 1, 1 };\nint dyy[] = { -1, 0, 1, -1, 1, -1, 0, 1 };\nconst long long MAX_SIZE = 1000001; \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n\nvoid SieveOfEratosthenes(int N) \n{ \n    // 0 and 1 are not prime \n    isprime[0] = isprime[1] = false ; \n  \n    // Fill rest of the entries \n    for (long long int i=2; i<N ; i++) \n    { \n        if (isprime[i]) \n        { \n            prime.push_back(i); \n            SPF[i] = i; \n        } \n        for (long long int j=0; \n             j < (int)prime.size() && \n             i*prime[j] < N && prime[j] <= SPF[i]; \n             j++) \n        { \n            isprime[i*prime[j]]=false; \n  \n            // put smallest prime factor of i*prime[j] \n            SPF[i*prime[j]] = prime[j] ; \n        } \n    } \n}  \nvoid solve()\n{\n    ll n,cnt=0;\n    cin>>n;\n    cnt=upper_bound(prime.begin(),prime.end(),n)-prime.begin();\n    //cout<<cnt;\n    cout<<power(2,cnt-1,1000000007)<<\"\\n\";\n}\nint main()\n{\n    fast();\n    ll t;\n    //t=1;\n    cin>>t;\n    SieveOfEratosthenes(1000000);\n    fr(i,0,t)\n    {\n        solve();\n    }\n}\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476160,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2801145",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974504,
        "updated_at_ms": 1599976904,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:35:09.282Z",
        "__v": 0
    },
    {
        "_id": "5f606eb450731f1064908bde",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\n\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int i,j,T=0,N=0,x[50],y[50],a,b,k,sum,minsum=100,x_c,y_c;\n    scanf(\"%d\",&T);\n    for(i=0;i<T;i++)\n    {\n        scanf(\"%d\",&N);\n        for(j=0;j<N;j++)\n        {\n            scanf(\"%d\",&x[j]);\n            scanf(\"%d\",&y[j]);\n            //printf(\"%d\",x[j]);\n            //printf(\"%d\\n\",y[j]);\n        }\n        for(j=0;j<N;j++)\n        {\n            //minsum=0;\n            sum=0;\n            a=x[j];\n            b=y[j];\n            //printf(\"%d%d\",a,b);\n            for(k=0;k<N;k++){\n                sum=sum+((a-x[k])*(a-x[k])+(b-y[k])*(b-y[k]));\n            }\n            //printf(\"%d\\n\",sum);\n            if(j==0)\n            {\n                minsum=sum;\n                x_c=x[j];\n                y_c=y[j];\n            }\n            if(sum<minsum)\n            {\n                //printf(\"%d\\n\",sum);\n                minsum=sum;\n                x_c=x[j];\n                y_c=y[j];\n            }\n            //sum=0;\n        }\n        printf(\"%d %d\\n\",x_c,y_c);\n    }\n    //printf(\"%d\",x_c);\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476156,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6846110",
        "submission_status": "Segmentation Fault",
        "submission_language": "c",
        "site_user_handle": "amulyausem",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974496,
        "updated_at_ms": 1599974496,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:35:16.141Z",
        "__v": 0
    },
    {
        "_id": "5f606ebc50731f1064908bdf",
        "submission_code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\nint main() {\nint T,n,i,j,k,f=0,p;\n    scanf(\"%d\",&T);\n    for(i=0;i<T;i++)\n    {\n        p=650080;\n        scanf(\"%d\",&n);\n        int a[n];\n        int b[n];\n        int c[n];\n        for(j=0;j<n;j++)\n        {\n            a[j]=0;b[j]=0;\n            scanf(\"%d  \",&a[j]);\n            scanf(\"%d\",&b[j]);\n        }\n       for(j=0;j<n;j++)\n       {\n           f=0;\n           for(k=0;k<n;k++)\n           {\n               f=f+(pow((a[j]-a[k]),2)+pow((b[j]-b[k]),2));\n               \n           }\n         //  printf(\"%df\\n\",f);\n           c[j]=f;\n           if(p>c[j])\n             p=c[j];\n       }\n        \n     for(j=0;j<n;j++)\n     {\n        if(p==c[j])\n            break;\n     }\n        printf(\"%d %d\\n\",a[j],b[j]);\n        \n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476153,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7754635",
        "submission_status": "Terminated due to timeout",
        "submission_language": "c",
        "site_user_handle": "mkalyani298",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974494,
        "updated_at_ms": 1599974494,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:35:24.266Z",
        "__v": 0
    },
    {
        "_id": "5f606ec250731f1064908be0",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 1e18\n#define ll  long long int\n#define deb(x) cout << #x << \" : \" << x << endl\nint main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    ll t;\n    cin >> t;\n    ll ti=1;\n    while(t--){\n        ll n,m;\n        cin >> n >> m;\n        char arr[n][m];\n        string temp[n+1][m+1];\n        char dir[n+1][m+1];\n        ll i,j;\n        for(i=0;i<n;i++){\n            for(j=0;j<m;j++){\n                cin >> arr[i][j];\n                dir[i][j]='#';\n            }\n        }\n        vector<char> ans;\n        for(i=n-1;i>=0;i--){\n            for(j=m-1;j>=0;j--){\n                string ans = \"\";\n                if((i+1)<n){\n                    if(ans == \"\"){\n                        ans = temp[i+1][j];\n                        dir[i][j] = 'D';\n                    }\n                    else{\n                        if(ans > temp[i+1][j]){\n                            ans = temp[i][j];\n                            dir[i][j]='D';\n                        }\n                    }\n                }\n                if((j+1)<m){                    \n                    if(ans == \"\"){\n                        ans = temp[i][j+1];\n                        dir[i][j] = 'R';\n                    }\n                    else{\n                        if(ans > temp[i][j+1]){\n                            ans = temp[i][j+1];\n                            dir[i][j]='R';\n                        }\n                    }\n                }\n                temp[i][j]=arr[i][j];\n                temp[i][j]+=ans;\n            }\n        }\n        string fuck;\n        i=0;\n        j=0;\n        while(i<n && j<m && dir[i][j]!='#'){\n            fuck+=dir[i][j];\n            if(dir[i][j] == 'D'){\n                i++;\n            }\n            else{\n                j++;\n            }\n        }\n        cout << \"Case #\"<<ti++<<\": \"<<fuck<< '\\n';\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476152,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3651417",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599974492,
        "updated_at_ms": 1599976892,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:35:30.375Z",
        "__v": 0
    },
    {
        "_id": "5f606ecc50731f1064908be1",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int T, N, i, minIndex;\n    long sumx, sumy, squares, tempx, tempy, minF, F;\n    cin >> T;\n    vector<long> cx, cy;\n    while(T--) {\n        cin >> N;\n        sumx=0, sumy=0, squares=0;\n        for(i=0;i<N;i++) {\n            cin >> tempx >> tempy;\n            sumx += tempx;\n            sumy += tempy;\n            squares += (tempx*tempx)+(tempy*tempy);\n            cx.push_back(tempx);\n            cy.push_back(tempy);\n        }\n        minF = INT_MAX;\n        minIndex = 0;\n        for(i=0;i<N;i++) {\n            F = N*(cx[i]*cx[i]+cy[i]*cy[i])+squares-2*(cx[i]*sumx+cy[i]*sumy);\n            if(minF > F) {\n                minF = F;\n                minIndex = i;\n            }\n        }\n        cout << cx[minIndex] <<\" \"<<cy[minIndex]<<\"\\n\";\n        cx.clear();\n        cy.clear();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476149,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "999952",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "cj1995",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974482,
        "updated_at_ms": 1599974482,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:35:40.306Z",
        "__v": 0
    },
    {
        "_id": "5f606ed450731f1064908be2",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n \ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef long double ld;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<ii> vii;\ntypedef pair<ll,ll> pll;\ntypedef vector<vector<ii>> vvii;\n \n#define F first\n#define S second\n#define PB push_back\n#define MP make_pair\n#define EPS 1e-9\n#define INF 1000000\n#define MOD 1000000007\n#define PI 3.14159265358979323846\n\nll power[1000000];\n\nvoid calcPow()\n{\n    power[0]=1;\n    for(int i=1;i<=INF;i++)\n        power[i] = (2*power[i-1])%MOD;\n}\n\nint u[INF+1],pn=0;\nvi primesVec;\nvoid eulerSieve()\n{\n    for(int i=2;i<=INF;++i)\n    {\n        if(!u[i]){\n            u[i]=i;\n            primesVec.push_back(i);\n        }\n        for(int j=0;i*primesVec[j]<=INF;++j)\n        {\n                u[i*primesVec[j]]=primesVec[j];\n                if(i%primesVec[j]==0)\n                    break;\n        }\n    }\n}\n\n\nint main()\n{    \n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n\n    int t,n;\n    cin>>t;\n    eulerSieve();\n    calcPow();\n\n    while(t--)\n    {\n        cin>>n;\n        if(n==1)\n            cout<<\"0\"<<endl;\n        else\n        {\n            int m = upper_bound(primesVec.begin(),primesVec.end(),n) - primesVec.begin();\n            //cout<<m<<\" \"<<primesVec.size()<<endl;\n            cout<<power[m-1]<<endl;\n        }\n    }\n\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476148,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5369834",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "rizwan_b170829cs",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974481,
        "updated_at_ms": 1599978081,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:35:48.527Z",
        "__v": 0
    },
    {
        "_id": "5f606edb50731f1064908be3",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll factorial2(ll x)\n{\n    ll product=1;\n    for(ll i=1;i<=x;i++)\n    {\n        product=product*i;\n    }\n    return product;\n}\nint main()\n{\n    ll n;\n    cin>>n;\n    for(ll i=0;i<n;i++)\n    {\n        ll num;\n        cin>>num;\n        ll count=0;\n        ll fact_num=factorial2(num);\n        for (ll j = 1; j <= sqrt(fact_num); j++) {\n            if (fact_num % j == 0) {\n                if (__gcd(j, (fact_num / j)) == 1) {\n                    count++;\n            }\n        }\n    }\n        cout<<count << \"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476143,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4235687",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "160218733011CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974454,
        "updated_at_ms": 1599974454,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:35:55.989Z",
        "__v": 0
    },
    {
        "_id": "5f606ee450731f1064908be4",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) \n    {\n        Scanner sc=new Scanner(System.in);\n        int test=sc.nextInt();\n        while(test>0)\n        {\n            int n=sc.nextInt();\n            int x[]=new int[n];\n            int y[]=new int[n];\n            int i=0;\n            while(i<n)\n            {\n                x[i]=sc.nextInt();\n                y[i]=sc.nextInt();\n                i++;\n               \n            }\n            int min=Integer.MAX_VALUE;\n            int x1=0;\n                int y1=0;\n            for(i=0;i<n;i++)\n            {\n                int cur=0;\n                \n                for(int j=0;j<n;j++)\n                {\n                 cur+=Math.pow((Math.abs(x[i]-x[j])),2)+Math.pow((Math.abs(y[i]-y[j])),2);\n                }\n                if(cur<min)\n                {\n                    min=cur;\n                    x1=x[i];\n                    y1=y[i];\n                }\n            }\n            System.out.println(x1+\" \"+y1);\n            test--;\n        }\n       \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476124,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4544619",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "vallalasaivishw1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974426,
        "updated_at_ms": 1599974426,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:36:04.303Z",
        "__v": 0
    },
    {
        "_id": "5f606eeb50731f1064908be5",
        "submission_code": "//author:satwik_bhv1\n#include<bits/stdc++.h>\n//datatypes\n#define ll long long \n#define ld long double\n//loops\n#define fr(i,z,n) for(ll i=z;i<n;i++)\n#define br(i,z,n) for(ll i=z;i>n;i--)\n//operations\n#define mp  make_pair\n#define ff  first\n#define ss  second\n#define pub push_back\n#define all(v) v.begin(),v.end()\n//map\n#define mi map<ll,ll>\n//vectors\n#define vi vector<ll>\n#define vpi vector<pair<ll,ll> >\n//constants\n#define pi 3.1415926535897932384626\n#define mod 1000000007 \n#define MAXN 100001\n/*notes\n    Don't use inbuilt fun for power\n    Range of longlong=(-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 )\n    INT_MAX = 2147483647(aprox 2*10^10)\n    INT_MIN = -2147483648\n    LLONG_MAX = 9223372036854775807 \n    LLONG_MIN = -9223372036854775808\n    __int128_t\n    __gcd is the function in built for hcf\n    priority queue is max heap by default\n    topological sort -> khan's algo use bfs and indegree of node  \n    sssp(positive weighted edges) -> Dijkstras\n    apsp -> Floydwarshall\n    MST -> kruskal(DSU)\n*/\nusing namespace std;\n//functions\nll power(ll x,ll y){ll res=1;while(y){if(y%2){res*=x;}y/=2;x*=x;} return res;}\nll power(ll x,ll y,ll z){ll res=1;while(y){if(y%2){res=(res*x)%z;}y/=2;x=(x*x)%z;} return res;}\nvoid fast() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }\nbool sortbysec(const pair<ll, ll>& a, const pair<ll, ll>& b) { return (a.second > b.second); }\nll ceil(ll x,ll y){return (x/y)+(x%y!=0);}\nconst int dx[4] = { -1, 1, 0, 0};\nconst int dy[4] = {0, 0, -1, 1};\nint dxx[] = { -1, -1, -1, 0, 0, 1, 1, 1 };\nint dyy[] = { -1, 0, 1, -1, 1, -1, 0, 1 };\nconst long long MAX_SIZE = 1000001; \nvector<long long >isprime(MAX_SIZE , true); \nvector<long long >prime; \nvector<long long >SPF(MAX_SIZE); \n\nvoid SieveOfEratosthenes(int N) \n{ \n    // 0 and 1 are not prime \n    isprime[0] = isprime[1] = false ; \n  \n    // Fill rest of the entries \n    for (long long int i=2; i<N ; i++) \n    { \n        if (isprime[i]) \n        { \n            prime.push_back(i); \n            SPF[i] = i; \n        } \n        for (long long int j=0; \n             j < (int)prime.size() && \n             i*prime[j] < N && prime[j] <= SPF[i]; \n             j++) \n        { \n            isprime[i*prime[j]]=false; \n  \n            // put smallest prime factor of i*prime[j] \n            SPF[i*prime[j]] = prime[j] ; \n        } \n    } \n}  \nvoid solve()\n{\n    ll n,cnt=0;\n    cin>>n;\n    cnt=upper_bound(prime.begin(),prime.end(),n)-prime.begin();\n    //cout<<cnt;\n    cout<<power(2,cnt-1,1000000007)<<\"\\n\";\n}\nint main()\n{\n    fast();\n    ll t;\n    //t=1;\n    cin>>t;\n    SieveOfEratosthenes(100000);\n    isprime[1]=0;\n    fr(i,0,t)\n    {\n        solve();\n    }\n}\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476123,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2801145",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974424,
        "updated_at_ms": 1599975624,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:36:11.615Z",
        "__v": 0
    },
    {
        "_id": "5f606ef350731f1064908be6",
        "submission_code": "import sys,math,heapq,copy\nfrom collections import defaultdict,deque\nfrom bisect import bisect_left,bisect_right\nfrom functools import cmp_to_key\n# sys.stdin=open('Input.txt','r')\n# sys.stdout=open('Output.txt','w')\nl=[True for i in range(1000001)]\nl[0]=l[1]=False\nm=int(math.sqrt(1000001))\nfor i in range(2,m+1):\n    if(l[i]==False):\n        continue\n    for j in range(i*i,1000001,i):\n        l[j]=False\na=[0,0]\nfor i in range(2,1000001):\n    if(l[i]==True):\n        a.append(a[i-1]+1)\n    else:\n        a.append(a[i-1])\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    mod=1000000007\n    cnt=a[n]\n    ans=pow(2,cnt-1,mod)\n    print(ans)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476119,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5810514",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "naveenvineeth6",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974413,
        "updated_at_ms": 1599974413,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:36:19.933Z",
        "__v": 0
    },
    {
        "_id": "5f606eff50731f1064908be7",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <climits>\nusing namespace std;\n#define ll long long int\nstruct cor{\n    ll x,y;\n};\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    ll n,t,x1,y1,xt,yt,sum,mi;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cor a[n];\n        mi=INT_MAX;\n        xt=0;\n        yt=0;\n        for(int i=0;i<n;i++)\n        {\n            cin>>a[i].x>>a[i].y;\n            xt+=a[i].x;\n            yt+=a[i].y;\n        }\n        xt+=xt;\n        yt+=yt;\n        for(int i=0;i<n;i++)\n        {\n            sum=n*pow(a[i].x,2) + n*pow(a[i].y,2)- (xt*a[i].x) -(yt*a[i].y);\n            if(mi>sum)\n            {\n                mi=sum;\n                x1=a[i].x;\n                y1=a[i].y;\n            }\n        }\n        printf(\"%lld %lld\\n\",x1,y1);\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476117,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5413147",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "SNV18H51A05B2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974408,
        "updated_at_ms": 1599976808,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:36:31.956Z",
        "__v": 0
    },
    {
        "_id": "5f606f0850731f1064908be8",
        "submission_code": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n   static int gcd(int a,int b){\n        if(b==0)return a;\n        a=a%b;\n        return gcd(b,a);\n    }\n     static int fac(int n){\n         if(n==0)\n             return 1;\n         else \n             return n*fac(n-1);\n     }\n\n    \n    \n    \n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    Scanner sc=new Scanner(System.in);\n      int n=sc.nextInt();\n      while(n!=0){\n          int count=0;\n          int x=sc.nextInt();\n          int factorial=fac(x);\n         // System.out.println(factorial);\n          for(int i=1;i<=factorial;i++){\n              if(factorial%i==0){\n                  int a=i;\n                  int b=(int)factorial/a;\n                  int result=gcd(a,b);\n                 //System.out.println(result+\" \"+a+\" \"+b+\" \"+x);\n                  if(result==1){\n                      count++;\n                  }\n              }\n          }\n          System.out.println(count/2);\n          n--;\n      }\n\n    \n    \n    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476110,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6547357",
        "submission_status": "Runtime Error",
        "submission_language": "java",
        "site_user_handle": "ashrithareddy8",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974386,
        "updated_at_ms": 1599974386,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:36:40.524Z",
        "__v": 0
    },
    {
        "_id": "5f606f1250731f1064908be9",
        "submission_code": "import math\n\nn=int(input())\nnumbers=[]\ncoprime_count=0\nfor _ in range(n):\n    numbers.append(int(input().strip()))\ndef gcd(x, y):\n    while y != 0:\n        (x, y) = (y, x % y)\n    return x\n\nfor number in numbers:\n    fact=math.factorial(number)\n    coprime_count=0\n    for i in range(1, int(pow(fact, 1 / 2))+1): \n        if fact % i == 0:\n            if gcd(i,int(fact/i))==1:\n                coprime_count+=1 \n    print(coprime_count%1000000007)\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476108,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8408394",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "melvinmathew0102",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974371,
        "updated_at_ms": 1599974371,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:36:50.971Z",
        "__v": 0
    },
    {
        "_id": "5f606f1950731f1064908bea",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int[] a=new int[n];\n            int[] b=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[j]=sc.nextInt();\n            }\n            double f1=0;\n            int x=0,y=0;\n            for(int k=0;k<n;k++)\n            {\n                double f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+((a[k]-a[j])*(a[k]-a[j]))+((b[k]-b[j])*(b[k]-b[j]));\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            System.out.println(x+\" \"+y);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476098,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6637308",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "badiniswetha",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974349,
        "updated_at_ms": 1599976749,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:36:57.232Z",
        "__v": 0
    },
    {
        "_id": "5f606f1f50731f1064908beb",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\nvector<pair<string,string>> se;\nbool cmp(pair<string,string> p1,pair<string,string> p2)\n{\n    return p1.first<p2.first;\n}\n bool vis[1001][1001];\nvoid foo(char a[1000][1000],int n,int m,int i,int j,string s,string dir)\n{\n    if(i<0 || j<0 || i>=n || j>=m ||vis[i][j]==true)\n    return;\n   \n    if(i==n-1 && j==m-1)\n    {\n      //  cout<<dir<<\" \";\n          se.push_back(make_pair(s,dir));\n          dir.pop_back();\n          return;\n    }\n     vis[i][j]=true;\n    foo(a,n,m,i,j+1,s+a[i][j],dir+\"R\");\n    foo(a,n,m,i+1,j,s+a[i][j],dir+\"D\");\n    vis[i][j]=false;\n   // vis[i][j]=false;\n}\nint main()\n{\n    int t;\n    cin>>t;\n    int j=1;\n    while(t--)\n    {\n        int n,m;\n        cin>>n>>m;\n    char a[1000][1000];\n    map<string,int> ma;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<m;j++)\n        {\n            cin>>a[i][j];\n        }\n    }\n  \n    memset(vis,0,sizeof(vis));\n    foo(a,n,m,0,0,\"\",\"\");\n    sort(se.begin(),se.end(),cmp);\n    // for(int i=0;i<se.size();i++)\n    // cout<<se[i].first<<\" \"<<se[i].second<<\"\\n\";\n    \n\n    for(int i=0;i<se.size();i++)\n    {\n        ma[se[i].first]++;\n    }\n    if(ma[se[0].first]>1)\n    {\n        string s1=se[0].first,s2=se[1].second,ans=se[1].second;\n        for(int i=1;i<se.size();i++)\n        {\n            if(se[i].first!=s1)\n            break;\n            s2=se[i].second;\n           ans=min(s2,ans);\n        }\n        cout<<\"Case #\"<<j<<\": \"<<ans<<\"\\n\";\n    }\n    else\n    cout<<\"Case #\"<<j<<\": \"<<se[0].second<<\"\\n\";\n    se.clear();\n    ma.clear();\n    j++;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476094,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "4289507",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "praveen7777",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599974345,
        "updated_at_ms": 1599974345,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:37:03.371Z",
        "__v": 0
    },
    {
        "_id": "5f606f2550731f1064908bec",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n       int t;\n        Scanner sc = new Scanner(System.in);\n        t= sc.nextInt();\n        while(t>0){\n            int n= sc.nextInt();\n            int a[] = new int[n];\n            int b[] = new int[n];\n            for(int i=0;i<n;i++){\n                a[i]=sc.nextInt();\n                b[i]=sc.nextInt();\n                // System.out.println(a[i]+\" \"+b[i]);\n            }\n            int k=0;\n            int sum=0;\n            int min=0;\n            int c=0;\n            int d=0;\n            while(k<n){\n                sum=0;\n                for(int j=0;j<n;j++){\n                    int x=(a[k]-a[j])*(a[k]-a[j]);\n                    int y=(b[k]-b[j])*(b[k]-b[j]);\n                    sum=sum+(x+y);\n\n                }\n\n                if(k==0){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                if(sum<min){\n                    min = sum;\n                    c=a[k];\n                    d=b[k];\n                }\n                \n                k++;\n            }\n            System.out.println(c+\" \"+d);\n            t--;\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476092,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9686060",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "kedharnathsonu",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974340,
        "updated_at_ms": 1599974340,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:37:09.628Z",
        "__v": 0
    },
    {
        "_id": "5f606f2f50731f1064908bed",
        "submission_code": "for _ in range(int(input())):\n    n=int(input())\n    points=[]\n    for j in range(n):\n        points.append(list(map(int,input().split())))\n    mini=9999999\n    ans=[float('inf'),float('inf')]\n    for i in range(n):\n        sumi=0\n        \n        for j in range(n):\n            sumi+=(points[i][0]-points[j][0])**2+(points[i][1]-points[j][1])**2\n        # print(sumi,mini)\n        if(sumi<mini):\n            mini=sumi\n            ans[0]=points[i][0]\n            ans[1]=points[i][1]\n        elif(sumi==mini):\n            if(points[i]<ans):\n                ans=points[i]\n    print(*ans)\n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476090,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4671628",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "suhrusai",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974330,
        "updated_at_ms": 1599974330,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:37:19.631Z",
        "__v": 0
    },
    {
        "_id": "5f606f3a50731f1064908bee",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nbool coprime(int a, int b) { \n      \n    if ( __gcd(a, b) == 1) \n        return true;  \n    else\n        return false;         \n} \n    \nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    int tc;\n    cin>>tc;\n    while(tc--)\n    {\n        int n,c=0;\n        cin>>n;\n        int fact = 1;\n        for(int i=1;i<=n;i++)\n            fact = fact*i;\n        double sq = sqrt(fact);\n        for(int i=1;i<=(int)sq;i++)\n        {\n            if(fact%i == 0)\n            {\n                if(coprime(i,fact/i))\n                    c = (c+1)%1000000007;\n            }\n        }\n        cout<<c<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476085,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5549332",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "Jayaprakashvenu1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974314,
        "updated_at_ms": 1599975514,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:37:30.075Z",
        "__v": 0
    },
    {
        "_id": "5f606f4050731f1064908bef",
        "submission_code": "#include<bits/stdc++.h>\n\n#ifndef LOCAL\n#pragma GCC optimize(\"O3\")\n#endif\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//#pragma GCC optimize(\"unroll-loops\")\n\n#define endl        '\\n'\n#define ll          long long\n#define pb          push_back\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define rs(v,n)     v.resize(n)\n#define hell        1000000007\n#define peak        9123372036854775807\n#define pii         acos(-1)\n#define clr(a,x)    memset(a,x,sizeof(a))\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\n\nnamespace InOp{\ntemplate<class x,class y>\nistream &operator>>(istream &in,pair<x,y> &p) \n{ \n    in>>p.F>>p.S;\n    return in;\n}\ntemplate<class x>\nistream &operator>>(istream &in,vector<x> &v) \n{\n    for(auto& i:v)\n        in>>i;\n    return in;\n}\ntemplate<class x,class y>\nostream &operator<<(ostream &out,pair<x,y> &p) \n{ \n    out<<\"(\"<<p.F<<\",\"<<p.S<<\") \";\n    return out; \n}\ntemplate<class x>\nostream &operator<<(ostream &out,vector<x> &v) \n{ \n    out<<v.size()<<endl;\n    for(auto i:v)\n        out<<i<<\" \";\n    out<<endl;\n    return out; \n}\n}\nusing namespace InOp;\n\nnamespace ModOp{\ntemplate<class x,class y,class z> z add(x a,y b,z m){return (a+b)%m;}\ntemplate<class x,class y,class z> z sub(x a,y b,z m){return (a-b+m)%m;}\ntemplate<class x,class y,class z> z mul(x a,y b,z m){return ((ll)a*b)%m;}\ntemplate<class y,class z> z expo(ll b,y e,z m){ll a=1;b%=m;while(e!=0){if((e&1)==1){a=a*b;a=a%m;}b=b*b;b%=m;e>>=1;}return a%m;}\ntemplate<class x,class z> z inv(x b,z m){return expo(b,m-2,m);}\ntemplate<class x,class y> x invGeneral(x a,y b){if(a==0)return b==1?0:-1;x m=invGeneral(b%a,a);return m==-1?-1:((1-(ll)b*m)/a+b)%b;}\ntemplate<class x,class y,class z> z div(x a,y b,z m){ll c=inv(b,m);return mul(a,c,m);}\n}\nusing namespace ModOp;\n\nnamespace Debug{\ntemplate<class x> void deb(x a){cerr<<\"a\"<<\": \"<<a<<endl;}\ntemplate<class x,class y> void deb(x a,y b){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<endl;}\ntemplate<class x,class y,class z> void deb(x a,y b,z c){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<endl;}\ntemplate<class x,class y,class z,class xy> void deb(x a,y b,z c,xy d){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<\" | \"<<\"d\"<<\": \"<<d<<endl;}\n}\nusing namespace Debug;\n\n#define N  1000005\nll solve(ll x,ll n,ll m,vector<vector<ll>>& le,vector<vector<ll>>& up)\n{\n    vector<vector<ll>> vis(n,vector<ll>(m,0));\n    vis[0][0]=1;\n    for(ll i=0;i<n;i++)\n    {\n        for(ll j=0;j<m;j++)\n        {\n            if(j!=0)\n            {\n                if((le[i][j]&x)==x&&vis[i][j-1]==1)\n                {\n                    vis[i][j]=1;\n                }\n            }\n            if(i!=0)\n            {\n                if((up[i][j]&x)==x&&vis[i-1][j]==1)\n                {\n                    vis[i][j]=1;\n                }\n            }\n        }\n    }\n    return vis[n-1][m-1];\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    ll tt=1;\n    cin>>tt;\n    while(tt--)\n    {\n        ll i,j,k,l,r,x,y,m,n;\n        cin>>n>>m;\n        vector<vector<ll>> le(n,vector<ll>(m,0)),up(n,vector<ll>(m,0));\n        for(i=0;i<n-1;i++)\n        {\n            for(j=0;j<2*m-1;j++)\n            {\n                if(j%2==0)\n                {\n                    cin>>up[i+1][j/2];\n                }\n                else\n                {\n                    cin>>le[i][(j+1)/2];\n                }\n            }\n        }\n        for(j=0;j<m-1;j++)\n        {\n            cin>>le[n-1][j+1];\n        }\n        ll ans=0;\n        // ll xx=(1ll<<62);\n        // deb(xx);\n        for(i=62;i>=0;i--)\n        {\n            ll x=ans|(1ll<<i);\n            if(solve(x,n,m,le,up))\n            {\n                ans=x;\n            }\n        }\n        cout<<ans<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476080,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "1583809",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599974306,
        "updated_at_ms": 1599975506,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:37:36.071Z",
        "__v": 0
    },
    {
        "_id": "5f606f4a50731f1064908bf0",
        "submission_code": "def compute_hcf(x, y):\n    if x > y:\n        smaller = y\n    else:\n        smaller = x\n    for i in range(1, smaller+1):\n        if((x % i == 0) and (y % i == 0)):\n            hcf = i \n    return hcf\n\nt= int(input())\nfor t1 in range(t):\n    x=int(input())\n    n=1\n    p=0\n    for i in range(2,x+1):\n        n*=i\n    f=[1]\n    for i in range(2, n + 1):\n        if(x % i == 0):\n            for j in f:\n                if(compute_hcf(i, j)==1):\n                    p+=1\n            f.append(i)\n    print(p)\n           \n        \n        \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476077,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5235288",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "anudeep_kalitkar",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974304,
        "updated_at_ms": 1599974304,
        "misc_notes": "[\"Wrong Answer\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:37:46.670Z",
        "__v": 0
    },
    {
        "_id": "5f606f5350731f1064908bf1",
        "submission_code": "#include <iostream>\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define vec vector\n#define pb push_back\n#define iter iterator\nll int mod=100000007;\nll int power(ll int a,ll int b)\n{\n    if(b==0)\n    return 1;\n    if(b==1)\n    return a;\n    else\n    {\n        ll int t=power(a,b/2);\n        if(b%2==0)\n        return ((t%mod)*(t%mod))%mod;\n        else\n        return ((((t%mod)*(t%mod))%mod)*a%mod)%mod;\n    }\n}\nll int fact(ll int a)\n{\n    if(a==1||a==0)\n    return 1;\n    else\n    return a%mod*fact(a-1)%mod;\n}\nvoid solve()\n{\n    ll n;\n    cin>>n;\n    ll x[n],y[n],min=mod;\n    for(ll i=0;i<n;i++)\n    {\n        cin>>x[i]>>y[i];\n    }\n    ll xmin=x[0],ymin=y[0];\n    for(ll i=0;i<n;i++)\n    {\n        ll ans=0;\n        for(ll j=0;j<n;j++)\n        {\n            ans+=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);\n        }\n        if(min>ans)\n        {\n            min=ans;\n            xmin=x[i];\n            ymin=y[i];\n        }\n    }\n    cout<<xmin<<\" \"<<ymin<<\"\\n\";\n}\nint main() {\n    ll int t;\n    cin>>t;\n    while(t--)\n    {\n        solve();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476076,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6986492",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974302,
        "updated_at_ms": 1599976702,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:37:55.080Z",
        "__v": 0
    },
    {
        "_id": "5f606f5a50731f1064908bf2",
        "submission_code": "#include <bits/stdc++.h> \nusing namespace std; \ntypedef long long ll;\n#define nl \"\\n\";\nbool p[1000001]; \nvoid func(int n) \n{  \n    memset(p, true, sizeof(p)); \n    p[0]=0;\n    p[1]=0;\n    for (int i=2;i*i<=n;i++) \n    { \n        if (p[i]==true) \n        { \n            for(int j=i*i;j<=n;j+=i) \n                p[j]=false; \n        } \n    }\n    p[2]=0;\n}\nll mod=1e9+7;\nint main(){\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n    ll t,n;\n    cin>>t;\n    func(1e6);\n    ll a[1000001]={0};\n    for(int i=2;i<=1e6;i++){\n        if(p[i]==1) a[i]=a[i-1]+1;\n        else a[i]=a[i-1];\n    }\n    while(t--){\n        cin>>n;\n        ll x=a[n]-a[n/2];\n        x=((x*(x+1))/2)%mod;\n        cout<<x+1<<nl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476075,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5687885",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "balajipulugujju1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974301,
        "updated_at_ms": 1599974301,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:38:02.020Z",
        "__v": 0
    },
    {
        "_id": "5f606f6450731f1064908bf3",
        "submission_code": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# ------------------- fast io --------------------\nimport math\nimport bisect\nfrom collections import Counter,defaultdict,deque\ndef int1():\n    return int(input())\ndef map1():\n    return map(int,input().split())\ndef list1():\n    return list(map(int,input().split()))\nmod=pow(10,9)+7\ndef binary_search(arr, low, high, x): \n\n    if high >= low: \n\n        mid = (high + low) // 2\n        if arr[mid] == x: \n            return mid \n\n        elif arr[mid] > x: \n            return binary_search(arr, low, mid - 1, x) \n        else:\n            return binary_search(arr, mid + 1, high, x) \n\n    else: \n        return -1\ndef gg():\n    n=pow(10,6)\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True):\n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    l1=[]\n    for i in range(2,n+1):\n        if(prime[i]==True):\n            l1.append(i)\n    return l1\ndef power(x, y, p) : \n    res = 1\n    x = x % p  \n    if (x == 0) : \n        return 0\n  \n    while (y > 0) : \n        if ((y & 1) == 1) : \n            res = (res * x) % p \n        y = y >> 1 \n        x = (x * x) % p \n    return res \nl2=gg()\n#print(l2[0:100])\nfor _ in range(int(input())):\n    n=int1()\n    if(n==1):\n        print(0)\n    else:\n        r=binary_search(l2,0,len(l2)-1,n)\n        if(r!=-1):\n            v=power(2,r,mod)\n            print(v)\n        else:\n            v=bisect.bisect_left(l2,n)\n            v1=power(2,v-1,mod)\n            print(v1)\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476062,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974273,
        "updated_at_ms": 1599975473,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:38:12.672Z",
        "__v": 0
    },
    {
        "_id": "5f606f6e50731f1064908bf4",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nbool coprime(int a, int b) { \n      \n    if ( __gcd(a, b) == 1) \n        return true;  \n    else\n        return false;         \n} \n    \nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    int tc;\n    cin>>tc;\n    while(tc--)\n    {\n        int n,c=0;\n        cin>>n;\n        int fact = 1;\n        for(int i=1;i<=n;i++)\n            fact = fact*i;\n        double sq = sqrt(fact);\n        for(int i=1;i<=(int)sq;i++)\n        {\n            if(fact%i == 0)\n            {\n                if(coprime(i,fact/i))\n                    c++;\n            }\n        }\n        cout<<c<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476057,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5549332",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "Jayaprakashvenu1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974257,
        "updated_at_ms": 1599974257,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:38:22.719Z",
        "__v": 0
    },
    {
        "_id": "5f606f7750731f1064908bf5",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 100005\n#define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\n\nvector<pair<int,int>> g[N];\nvector<int> v[N];\nvector<int> vis;\nvoid dfs(int u){\n    if(vis[u]) return;\n    vis[u] = 1;\n    for(auto j : v[u]){\n        dfs(j);\n    }\n}\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n    cin>>TESTS;\n    while(TESTS--)\n    {   \n        int n,m;\n        cin >> n >> m;\n        pair<int,int> cur = {1,m+1};\n        rep(i,0,2*n*m-n-m){\n            int t;\n            cin >> t;\n            g[cur.fr].pb({cur.sc,t});\n            g[cur.sc].pb({cur.fr,t});\n            if(cur.sc - cur.fr == m){\n                cur.sc = cur.fr+1;\n                if(cur.sc % m == 1){\n                    cur.fr = cur.sc;\n                    cur.sc = cur.fr + m;\n                }\n            }\n            else{\n                cur.fr = cur.sc;\n                cur.sc = cur.fr + m;\n            }\n        }\n        int ans = 0;\n        for(int l = 63; l >= 0; l--){\n            rep(i,0,n){\n                rep(j,1,m+1){\n                    int p = i*m+j;\n                    v[p].clear();\n                    for(int k = 0; k < g[p].size(); k++){\n                        if((g[p][k].sc & (1ll<<l))) v[p].pb(g[p][k].fr);\n                    }\n                }\n            }\n            // rep(i,0,n){\n            //     rep(j,1,m+1) trace(i*m+j, v[i*m+j])\n            // }\n            // cout << endl;\n            vis.assign(n*m+1,0);\n            dfs(1);\n            if(vis[n*m]){\n                // trace(l);\n                ans += (1ll<<l);\n                rep(i,0,n){\n                    rep(j,1,m+1){\n                        int p = i*m+j;\n                        vector<pair<int,int>> ng;\n                        for(int k = 0; k < g[p].size(); k++){\n                            if((g[p][k].sc & (1ll<<l))) ng.pb(g[p][k]);\n                        }\n                        g[p] = ng;\n                    }\n                }\n            }\n        }\n        cout << ans << endl;\n        rep(i,1,n+1){\n            rep(j,1,m+1) g[(i-1)*m+j].clear();\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476038,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599974226,
        "updated_at_ms": 1599977826,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:38:31.871Z",
        "__v": 0
    },
    {
        "_id": "5f606f7f50731f1064908bf6",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\nScanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int[] a=new int[n];\n            int[] b=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[j]=sc.nextInt();\n            }\n            double f1=0;\n            int x=0,y=0;\n            for(int k=0;k<n;k++)\n            {\n                double f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+((a[k]-a[j])*(a[k]-a[j]))+((b[k]-b[j])*(b[k]-b[j]));\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            System.out.println(x+\" \"+y);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476028,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6637308",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "badiniswetha",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974203,
        "updated_at_ms": 1599975403,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:38:39.018Z",
        "__v": 0
    },
    {
        "_id": "5f606f8550731f1064908bf7",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 100005\n#define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\n\nvector<pair<int,int>> g[N];\nvector<int> v[N];\nvector<int> vis;\nvoid dfs(int u){\n    if(vis[u]) return;\n    vis[u] = 1;\n    for(auto j : v[u]){\n        dfs(j);\n    }\n}\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n    cin>>TESTS;\n    while(TESTS--)\n    {   \n        int n,m;\n        cin >> n >> m;\n        pair<int,int> cur = {1,m+1};\n        rep(i,0,2*n*m-n-m){\n            int t;\n            cin >> t;\n            g[cur.fr].pb({cur.sc,t});\n            g[cur.sc].pb({cur.fr,t});\n            if(cur.sc - cur.fr == m){\n                cur.sc = cur.fr+1;\n                if(cur.sc % m == 1){\n                    cur.fr = cur.sc;\n                    cur.sc = cur.fr + m;\n                }\n            }\n            else{\n                cur.fr = cur.sc;\n                cur.sc = cur.fr + m;\n            }\n        }\n        int ans = 0;\n        for(int l = 63; l >= 0; l--){\n            rep(i,0,n){\n                rep(j,1,m+1){\n                    int p = i*m+j;\n                    v[p].clear();\n                    for(int k = 0; k < g[p].size(); k++){\n                        if((g[p][k].sc & (1ll<<l))) v[p].pb(g[p][k].fr);\n                    }\n                }\n            }\n            // rep(i,0,n){\n            //     rep(j,1,m+1) trace(i*m+j, v[i*m+j])\n            // }\n            // cout << endl;\n            vis.assign(n*m+1,0);\n            dfs(1);\n            if(vis[n*m]){\n                // trace(l);\n                ans += (1<<l);\n                rep(i,0,n){\n                    rep(j,1,m+1){\n                        int p = i*m+j;\n                        vector<pair<int,int>> ng;\n                        for(int k = 0; k < g[p].size(); k++){\n                            if((g[p][k].sc & (1ll<<l))) ng.pb(g[p][k]);\n                        }\n                        g[p] = ng;\n                    }\n                }\n            }\n        }\n        cout << ans << endl;\n        rep(i,1,n+1){\n            rep(j,1,m+1) g[(i-1)*m+j].clear();\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476025,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599974195,
        "updated_at_ms": 1599976595,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:38:45.769Z",
        "__v": 0
    },
    {
        "_id": "5f606f8f50731f1064908bf8",
        "submission_code": "def coprime(a,b):\n    if(a==1 or b==1):\n        return 1\n    elif(a<b):\n        c=0\n        for i in range(2,a+1):\n            if(a%i==0 and b%i==0):\n                c=1\n                break\n        if(c==1):\n            return 0\n        else:\n            return 1\n    else:\n        c=0\n        for i in range(2,b+1):\n            if(a%i==0 and b%i==0):\n                c=1\n                break\n        if(c==1):\n            return 0\n        else:\n            return 1\n\ndef fact(n):\n    if(n==0 or n==1):\n        return 1\n    else:\n        return n*fact(n-1)\n    \nn=int(input())\nfor i in range(n):\n    a=int(input())\n    f=fact(a)\n    count=0\n    for i in range(1,a):\n        if(coprime(i,f//i)==1):\n            count+=1\n    print(count)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476022,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4670161",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "AnvithaGutha",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974186,
        "updated_at_ms": 1599975386,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:38:55.371Z",
        "__v": 0
    },
    {
        "_id": "5f606f9850731f1064908bf9",
        "submission_code": "from sys import stdin,stdout\nimport math\nfor _ in range(int(stdin.readline())):\n    n=int(stdin.readline())\n    a=10**9+7\n    if n==1:\n          (stdout.write(1))\n    elif n==2:\n            print(1)     \n    else:    \n        n=math.factorial(n)\n        m=round(n**0.5)\n        cnt=0\n        for i in range(2,m+1):\n            if n%i==0:\n                t=n//i\n                c=i\n                if math.gcd(c,t)==1:\n                    cnt+=1\n        s=str((cnt+1)%a)           \n        (stdout.write((s)+'\\n'))        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476010,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9623064",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "srikanthsupraja1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974157,
        "updated_at_ms": 1599975357,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:39:04.717Z",
        "__v": 0
    },
    {
        "_id": "5f606f9f50731f1064908bfa",
        "submission_code": "inp=int(input())\nfor i in range(inp):\n    a=int(input())\n    b=[]\n    x1=[]\n    y1=[]\n    for i in range(a):\n        c=list(map(int,input().split()))\n        x1.append(c[0])\n        y1.append(c[1])\n        b.append(c)\n    ans=[]\n    for i in range(a):\n        x=b[i][0]\n        y=b[i][1]\n        f=0\n        for j in range(a):\n            g=((x-x1[j])**2)+((y-y1[j])**2)\n            f=f+g    \n        ans.append(f)\n    h1=ans.index(min(ans))\n    print(*(b[h1]))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476008,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6619310",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Rahul_Sripada",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974154,
        "updated_at_ms": 1599975354,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:39:11.550Z",
        "__v": 0
    },
    {
        "_id": "5f606fa950731f1064908bfb",
        "submission_code": "from itertools import combinations\ndef factors(n):\n    l = []\n    for i in range(1,n+1):\n        if(n % i) == 0:\n            l.append(i)\n    return l\n\ndef fact(n):\n    s = 1\n    t = 10000000007\n    for i in range(1,n+1):\n        s  = s%t * i\n    return s\ndef coprime(p,q):\n    pl = factors(p)\n    ql = factors(q)\n    return set(ql).intersection(set(pl)) == {1}\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    \n    val = fact(n)\n    fac = factors(val)\n    c = 0\n    for j in list(combinations(fac,2)):\n        coprime(j[0],j[1])\n        if(j[0] * j[1] == val and coprime(j[0],j[1])): \n            c += 1\n            \n    print(c)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326476005,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7010132",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "karri_balu",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974145,
        "updated_at_ms": 1599974145,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:39:21.584Z",
        "__v": 0
    },
    {
        "_id": "5f606fb250731f1064908bfc",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 100005\n#define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\n\nvector<pair<int,int>> g[N];\nvector<int> v[N];\nvector<int> vis;\nvoid dfs(int u){\n    if(vis[u]) return;\n    vis[u] = 1;\n    for(auto j : v[u]){\n        dfs(j);\n    }\n}\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n    cin>>TESTS;\n    while(TESTS--)\n    {   \n        int n,m;\n        cin >> n >> m;\n        pair<int,int> cur = {1,m+1};\n        rep(i,0,2*n*m-n-m){\n            int t;\n            cin >> t;\n            g[cur.fr].pb({cur.sc,t});\n            g[cur.sc].pb({cur.fr,t});\n            if(cur.sc - cur.fr == m){\n                cur.sc = cur.fr+1;\n                if(cur.sc % m == 1){\n                    cur.fr = cur.sc;\n                    cur.sc = cur.fr + m;\n                }\n            }\n            else{\n                cur.fr = cur.sc;\n                cur.sc = cur.fr + m;\n            }\n        }\n        int ans = 0;\n        for(int l = 63; l >= 0; l--){\n            rep(i,0,n){\n                rep(j,1,m+1){\n                    int p = i*m+j;\n                    v[p].clear();\n                    for(int k = 0; k < g[p].size(); k++){\n                        if((g[p][k].sc & (1<<l))) v[p].pb(g[p][k].fr);\n                    }\n                }\n            }\n            // rep(i,0,n){\n            //     rep(j,1,m+1) trace(i*m+j, v[i*m+j])\n            // }\n            // cout << endl;\n            vis.assign(n*m+1,0);\n            dfs(1);\n            if(vis[n*m]){\n                ans += (1<<l);\n                rep(i,0,n){\n                    rep(j,1,m+1){\n                        int p = i*m+j;\n                        vector<pair<int,int>> ng;\n                        for(int k = 0; k < g[p].size(); k++){\n                            if((g[p][k].sc & (1<<l))) ng.pb(g[p][k]);\n                        }\n                        g[p] = ng;\n                    }\n                }\n            }\n        }\n        cout << ans << endl;\n        rep(i,1,n+1){\n            rep(j,1,m+1) g[(i-1)*m+j].clear();\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475999,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599974123,
        "updated_at_ms": 1599975323,
        "misc_notes": "[\"Wrong Answer\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Wrong Answer\",\"Segmentation Fault\",\"Segmentation Fault\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:39:30.680Z",
        "__v": 0
    },
    {
        "_id": "5f606fbb50731f1064908bfd",
        "submission_code": "def factors(x):\n    factor=[]\n    for i in range(1, x + 1):\n        if x%i==0:\n            factor.append(i)\n    return factor\n\ndef gcd(a, b):  \n    if (a == 0 or b == 0): \n        return False\n    if (a == b): \n        return a \n    if (a > b): \n        return gcd(a-b, b) \n    return gcd(a, b-a) \n       \ndef coprime(a, b) : \n    return (gcd(a, b) == 1) \n  \ndef numOfPairs(arr, n,res) : \n    count = 0\n    for i in range(0, n-1) : \n        for j in range(i+1, n) : \n            if (coprime(arr[i], arr[j]) and arr[i]*arr[j]==res) :\n                #print(\"prime pairs\",arr[i],arr[j]) \n                count = count + 1\n    return count\n\nfor _ in range(int(input())):\n    n=int(input())\n    fact=1\n    for i in range(1,n+1):\n        fact=fact*i\n    factor=factors(fact)\n    #print(factor)\n    ans=numOfPairs(factor,len(factor),fact)\n    print(ans)\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475989,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974106,
        "updated_at_ms": 1599975306,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:39:39.356Z",
        "__v": 0
    },
    {
        "_id": "5f606fc150731f1064908bfe",
        "submission_code": "#include <bits/stdc++.h>\n#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)\n#define nl cout<<\"\\n\"\n#define pb push_back\n#define max(a,b) ((a)>(b) ? (a) : (b))\n#define min(a,b) ((a)<(b) ? (a) : (b))\n#define REP(i,a,b) for(li i=a; i<=b ;++i)\n#define RREP(i,b,a) for(li i=b ; i>=a ; --i)\nusing namespace std;\nusing ui=unsigned int;\nusing li=long int;\nusing uli=unsigned long int;\nusing lli=long long int;\nusing ulli=unsigned long long int;\n\ntypedef struct {\n    li ind, x, y, val;\n}data;\n\nvoid solve()\n{\n    li n;\n    cin >> n;\n    vector< data > v(n);\n    // li ans = 0;\n    li i = 0; \n    for(data&j: v){\n        j.ind = i++;\n        cin >> j.x >> j.y; \n    }\n    // for(auto i : v)\n    // {\n    //     cout << i.ind << \" \"<<i.x << \" \"<<i.y ;\n    //     nl;\n    // }\n    \n\n    li fsum = n*(v[0].x*v[0].x + v[0].y*v[0].y) ;\n    for(li j = 0 ; j < n ; ++j ){\n        fsum+=-2*(v[0].x* v[j].x +  v[0].y * v[j].y ) + (v[j].x*v[j].x + v[j].y*v[j].y);\n    } \n    // cout << fsum;nl;\n    li mnm = fsum;\n    li mnmind = 0; \n    for(li i = 1 ; i < n ; ++i){\n        li xx = v[i].x;\n        li yy = v[i].y;\n        li sum = n*(xx*xx+ yy*yy) ;\n        for(li j = 0 ; j < n ; ++j ){\n            sum+=-2*(xx* v[j].x + yy * v[j].y ) + (v[j].x*v[j].x + v[j].y*v[j].y);\n        } \n        // cout << sum;nl;\n        if(sum < mnm ){\n            mnm = sum;\n            mnmind = i;\n        }\n        else if(mnm == sum){\n            mnmind = min(i,mnmind);\n        }\n\n    }\n    cout << v[mnmind].x << \" \" << v[mnmind].y;\n    nl;\n\n    \n    \n\n}\n\nint main()\n{\n\n    \n    fastio;\n    // start\n    li t;\n    cin>>t;\n    while(t--)\n    {\n        solve();\n    }\n    \n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475987,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4312249",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974104,
        "updated_at_ms": 1599974104,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:39:45.341Z",
        "__v": 0
    },
    {
        "_id": "5f606fc950731f1064908bff",
        "submission_code": "def coprime(a,b):\n    if(a==1 or b==1):\n        return 1\n    elif(a<b):\n        c=0\n        for i in range(2,a+1):\n            if(a%i==0 and b%i==0):\n                c=1\n                break\n        if(c==1):\n            return 0\n        else:\n            return 1\n    else:\n        c=0\n        for i in range(2,b+1):\n            if(a%i==0 and b%i==0):\n                c=1\n                break\n        if(c==1):\n            return 0\n        else:\n            return 1\n\ndef fact(n):\n    if(n==0 or n==1):\n        return 1\n    else:\n        return n*fact(n-1)\n    \nn=int(input())\nfor i in range(n):\n    a=int(input())\n    count=0\n    for i in range(1,a):\n        if(coprime(i,fact(a)//i)==1):\n            count+=1\n    print(count)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475980,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4670161",
        "submission_status": "Runtime Error",
        "submission_language": "python3",
        "site_user_handle": "AnvithaGutha",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974095,
        "updated_at_ms": 1599974095,
        "misc_notes": "[\"Success\",\"Runtime Error\"]",
        "submission_entry_created_at": "2020-09-15T07:39:53.634Z",
        "__v": 0
    },
    {
        "_id": "5f606fd250731f1064908c00",
        "submission_code": "#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;  \n#define min_heap(t) priority_queue<t,vector<t>,greater<t>>\n#define max_heap(t) priority_queue<t>\n#define ordered_set(x) tree<x, null_type, less<x>, rb_tree_tag, tree_order_statistics_node_update>\n#define orderKey order_of_key\n#define findOrder find_by_order\n#define F first\n#define S second\n#define pb emplace_back \n#define mp make_pair\n#define f(i,x,y) for(i=x;i<y;i++) \n#define fo(i,x,y) for(i=x;i>=y;i--)\n#define all(v) v.begin(),v.end()\n#define ss(v) stable_sort(all(v))\n#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define endl '\\n' \n#define pi  3.14159265358\nlong long po(long long int m,long long int n){\nlong long i=1; \nwhile(n>0)\n{\n    if(n%2==1)\n      i=(i*m);\n    n=n/2;\n    m=(m*m);\n}\nreturn(i);\n} \nvoid solve(void){  \n    ll n,m,i,j;\n    cin>>n>>m;  \n    vector<string>s; \n    string D=\"D\",R=\"R\",e;\n    for(i=0;i<n;i++){\n        cin>>e;\n        s.pb(e);\n    }  \n    vector<vector<string>>dp(n+1,vector<string>(m+1,\"\")),point(n+1,vector<string>(m+1,\"\"));\n    dp[0][0]=s[0][0];\n    for(i=1;i<n;i++){\n        dp[i][0]=dp[i-1][0]+s[i][0];\n        point[i][0]=point[i-1][0]+D;\n    } \n    for(j=1;j<m;j++){\n        dp[0][j]=dp[0][j-1]+s[0][j];\n        point[0][j]=point[0][j-1]+R;\n    } \n    for(i=1;i<n;i++){\n        for(j=1;j<m;j++){\n            if(dp[i-1][j]>dp[i][j-1]){\n                dp[i][j]=dp[i][j-1]+s[i][j];\n                point[i][j]=point[i][j-1]+R;\n            }   \n            else if(dp[i-1][j]<dp[i][j-1]){\n                dp[i][j]=dp[i-1][j]+s[i][j];\n                point[i][j]=point[i-1][j]+D;\n            } \n            else{\n                if(point[i-1][j]<point[i][j-1]){\n                    dp[i][j]=dp[i-1][j]+s[i][j];\n                    point[i][j]=point[i-1][j]+D;\n                } \n                else{\n                    dp[i][j]=dp[i][j-1]+s[i][j];\n                    point[i][j]=point[i][j-1]+R;\n                }\n            }\n        }\n    } \n    cout<<point[n-1][m-1]<<endl;\n}\nint main(void){\n    fastio\n    ll __=1;\n    cin>> __;\n    for(ll x=1;x<=__;x++){\n        cout<<\"Case #\"<<x<<\": \";\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475971,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "5687885",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "balajipulugujju1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599974070,
        "updated_at_ms": 1599974070,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:40:02.379Z",
        "__v": 0
    },
    {
        "_id": "5f606fd850731f1064908c01",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n#define M 1000000007\n#define U 998244353\n#define N 100005\n#define int long long\n#define sz(c) (int)c.size()\n#define fr first\n#define ll long long \n#define sc second\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define rep(i,a,n) for(int i=a ; i<n ; i++)\n#define r0 return 0;\n#define endl '\\n'\n#define INF (int)1e15\n\n/* Debug Begins */ \n# define trace(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \\\n  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\nstring to_string(char c) { return \"'\" + string(1, c) + \"'\";}\nstring to_string(string s) { return '\"' + s + '\"';}\nstring to_string(bool f) { if(f) return \"True\"; else return \"False\";}\nstring to_string(const char* s) { return to_string((string) s);}\ntemplate<typename A> string to_string(A);\ntemplate<typename A, typename B> string to_string(pair<A, B> p){\n  return \"(\" + to_string(p.first) + \": \" + to_string(p.second) + \")\";}\ntemplate<typename A> string to_string(A v) {bool f = false; string r = \"{\"; \n  for (auto x: v) {if (f) r += \", \"; r += to_string(x); f = true;} return r += \"}\";}\ntemplate<typename A> string to_string(vector<vector<A>> v) {string r; \n  for (auto x: v) r += \"\\n\" + to_string(x); return r;}\nint Nerr;\ntemplate<typename A> string to_string(A *p) {return to_string(vector<A>(p, p + Nerr));}\nvoid err(istream_iterator<string>) { cerr << endl; }\ntemplate<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {\n  cerr << *it << \" = \" << to_string(a) << \"; \"; err(++it, args...); }\ntemplate<typename T> void kek(T ans) {cout << ans << endl; exit(0);}\n#define Lu(...) [&] (auto &&u) { return __VA_ARGS__; }\n#define Luv(...) [&] (auto &&u, auto &&v) { return __VA_ARGS__; }\n/***************************************************************/\n\nvector<pair<int,int>> g[N];\nvector<int> v[N];\nvector<int> vis;\nvoid dfs(int u){\n    if(vis[u]) return;\n    vis[u] = 1;\n    for(auto j : v[u]){\n        dfs(j);\n    }\n}\nsigned main()\n{\n    ios_base::sync_with_stdio(0);\n    int TESTS=1;\n    cin>>TESTS;\n    while(TESTS--)\n    {   \n        int n,m;\n        cin >> n >> m;\n        pair<int,int> cur = {1,m+1};\n        rep(i,0,2*n*m-n-m){\n            int t;\n            cin >> t;\n            g[cur.fr].pb({cur.sc,t});\n            g[cur.sc].pb({cur.fr,t});\n            if(cur.sc - cur.fr == m){\n                cur.sc = cur.fr+1;\n                if(cur.sc % m == 1){\n                    cur.fr = cur.sc;\n                    cur.sc = cur.fr + m;\n                }\n            }\n            else{\n                cur.fr = cur.sc;\n                cur.sc = cur.fr + m;\n            }\n        }\n        int ans = 0;\n        for(int l = 20; l >= 0; l--){\n            rep(i,0,n){\n                rep(j,1,m+1){\n                    int p = i*m+j;\n                    v[p].clear();\n                    for(int k = 0; k < g[p].size(); k++){\n                        if((g[p][k].sc & (1<<l))) v[p].pb(g[p][k].fr);\n                    }\n                }\n            }\n            // rep(i,0,n){\n            //     rep(j,1,m+1) trace(i*m+j, v[i*m+j])\n            // }\n            // cout << endl;\n            vis.assign(n*m+1,0);\n            dfs(1);\n            if(vis[n*m]){\n                ans += (1<<l);\n                rep(i,0,n){\n                    rep(j,1,m+1){\n                        int p = i*m+j;\n                        vector<pair<int,int>> ng;\n                        for(int k = 0; k < g[p].size(); k++){\n                            if((g[p][k].sc & (1<<l))) ng.pb(g[p][k]);\n                        }\n                        g[p] = ng;\n                    }\n                }\n            }\n        }\n        cout << ans << endl;\n        rep(i,1,n+1){\n            rep(j,1,m+1) g[(i-1)*m+j].clear();\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475970,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "2968720",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599974067,
        "updated_at_ms": 1599974067,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Segmentation Fault\",\"Segmentation Fault\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:40:08.482Z",
        "__v": 0
    },
    {
        "_id": "5f606fe250731f1064908c02",
        "submission_code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll =long long int;\n\nll md=pow(10,9)+7;\nll fac[1000001],ans[1000001],fact[1000001];\nunordered_map<ll,ll> mp;\nvoid g(int i)\n{\n    while(i%2==0)\n    {\n        mp[2]++;\n        i/=2;\n    }\n    for(int k=3;k<=sqrt(i);k+=2)\n    {\n        while(i%k==0)\n        {\n            mp[k]++;\n            i/=k;\n        }\n    }\n}\nvoid f()\n{\n    ans[0]=0;\n    ll x;\n    ans[1]=1;\n    for(int i=2;i<=1000000;i++)\n    {\n        x=ans[i-1]*2;\n        x%=md;\n        ans[i]=x;\n    }\n    fac[0]=0;\n    fac[1]=0;\n    fac[2]=1;\n    fac[3]=1;\n    mp[2]=1;\n    mp[3]=1;\n    for(int i=4;i<=1000000;i++)\n    {\n        g(i);\n        fac[i]=mp.size();\n    }\n    fact[1]=1;\n    for(int k=2;k<=1000000;k++)\n    {\n        x=k*fact[k-1];\n        x%=md;\n        fact[k]=x;\n    }\n}\n\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    f();\n    ll t,n;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cout<<ans[fac[fact[n]]]<<\"\\n\";\n    }\n    \n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475967,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2892432",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp14",
        "site_user_handle": "17H51A05M7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974061,
        "updated_at_ms": 1599974061,
        "misc_notes": "[\"Success\",\"Segmentation Fault\"]",
        "submission_entry_created_at": "2020-09-15T07:40:18.517Z",
        "__v": 0
    },
    {
        "_id": "5f606fe850731f1064908c03",
        "submission_code": "import math\ndef primeFactors(n):\n    z=[]\n    while n%2==0: \n        z.append(2) \n        n=n//2\n    for i in range(3,int(math.sqrt(n))+1,2): \n        while n%i==0: \n            z.append(i) \n            n=n//i \n    if n>2: \n        z.append(n)\n\n    z=set(z)\n    return len(z)\n\n\nm=(10**9)+7\nfor _ in range(int(input())):\n  n=int(input())\n  if(n==1):\n    print(0)\n  else:\n    n=math.factorial(n)\n    k=primeFactors(n)\n    print((2**(k-1))%m)\n\n\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475963,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4622965",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vision01",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974056,
        "updated_at_ms": 1599976456,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:40:24.558Z",
        "__v": 0
    },
    {
        "_id": "5f606fef50731f1064908c04",
        "submission_code": "def argmin(l,x,y):\n    res=0\n    for i in range(len(l)):\n        res=res+((l[i][0]-x)*(l[i][0]-x))+((l[i][1]-y)*(l[i][1]-y))\n    return res\nT=int(input())\n\nfor i in range (T):\n    N=int(input())\n    l=[]\n    \n    for i in range(N):\n        a,b=map(int,input().split())\n        l.append([a,b])\n    k=argmin(l,l[0][0],l[0][1])\n    r=[l[0][0],l[0][1]]\n    for i in range(1,N):\n        k1=argmin(l,l[i][0],l[i][1])\n        \n        if(k>k1):\n            k=k1\n            r=[l[i][0],l[i][1]]\n    print(r[0],end=\" \")\n    print(r[1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475962,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9380840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "trishulmabbu",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974054,
        "updated_at_ms": 1599975254,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:40:31.623Z",
        "__v": 0
    },
    {
        "_id": "5f606ff950731f1064908c05",
        "submission_code": "import math\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    nf=1\n    for j in range(1,n+1):\n        nf=nf*j\n    factors=[]\n    for k in range(1,int(nf**0.5)+1):\n        if(nf%k==0):\n            if((math.gcd(k,nf//k))==1):\n                factors.append((k,nf/k))\n    print(len(factors))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475955,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "7810768",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vaishnavimalige",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974036,
        "updated_at_ms": 1599974036,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:40:41.659Z",
        "__v": 0
    },
    {
        "_id": "5f60700150731f1064908c06",
        "submission_code": "def fun(X,Y):\n    l=[];k=[]\n    for x,y in zip(X,Y):\n        v=0\n        for i,j in zip(X,Y):\n            v+=(x-i)**2+(y-j)**2\n        l.append(v)\n        s=str(x)+' '+str(y)\n        k.append(s)\n        \n\n    return(k[l.index(min(l))])\nT=int(input())\nfor i in range(T):\n    if T<=10:\n        N=int(input())\n        X=[];Y=[]\n        for j in  range(N):\n            x,y=map(int,input().split())\n            X.append(x)\n            Y.append(y)\n        print(fun(X,Y))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475953,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4923124",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "ashrutha",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599974034,
        "updated_at_ms": 1599974034,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:40:49.543Z",
        "__v": 0
    },
    {
        "_id": "5f60700b50731f1064908c07",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int LIMIT = 1e9+7;\nconst int SIZE = 1e6;\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    vector<int> primes(SIZE+1, 1);\n    vector<int> ans(SIZE+1, true);\n    \n    // Sieve \n    for (int i = 2; i*i <= SIZE; i++) { \n        if (primes[i] == 1) { \n            for (int j = i*i; j <= SIZE; j += i) \n                primes[j] = 0; \n        } \n    } \n    \n    long long pow2 = 1;\n    ans[1] = ans[0] = 1;\n    for(int i = 2; i <= SIZE; ++i){\n        if(primes[i] == 1){\n            pow2 = (2*pow2) % LIMIT;\n        }\n        ans[i] = pow2/2;\n    }\n  \n    int T;\n    cin >> T;\n    int N;\n    while(T--){\n        cin >> N;\n        cout << ans[N] << \"\\n\";\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475943,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9687262",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "uttest800",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599974007,
        "updated_at_ms": 1599974007,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:40:59.884Z",
        "__v": 0
    },
    {
        "_id": "5f60701350731f1064908c08",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int[] a=new int[n];\n            int[] b=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[j]=sc.nextInt();\n            }\n            double f1=0;\n            int x=0,y=0;\n            for(int k=0;k<n;k++)\n            {\n                double f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+(Math.pow((a[k]-a[j]),2));\n                    f2=f2+(Math.pow((b[k]-b[j]),2));\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            System.out.println(x+\" \"+y);\n        }\n        \n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475935,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973979,
        "updated_at_ms": 1599976379,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:41:07.921Z",
        "__v": 0
    },
    {
        "_id": "5f60701a50731f1064908c09",
        "submission_code": "//author:satwik_bhv1\n#include<bits/stdc++.h>\n//datatypes\n#define ll long long \n#define ld long double\n//loops\n#define fr(i,z,n) for(ll i=z;i<n;i++)\n#define br(i,z,n) for(ll i=z;i>n;i--)\n//operations\n#define mp  make_pair\n#define ff  first\n#define ss  second\n#define pub push_back\n#define all(v) v.begin(),v.end()\n//map\n#define mi map<ll,ll>\n//vectors\n#define vi vector<ll>\n#define vpi vector<pair<ll,ll> >\n//constants\n#define pi 3.1415926535897932384626\n#define mod 1000000007 \n#define MAXN 100001\n/*notes\n    Don't use inbuilt fun for power\n    Range of longlong=(-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 )\n    INT_MAX = 2147483647(aprox 2*10^10)\n    INT_MIN = -2147483648\n    LLONG_MAX = 9223372036854775807 \n    LLONG_MIN = -9223372036854775808\n    __int128_t\n    __gcd is the function in built for hcf\n    priority queue is max heap by default\n    topological sort -> khan's algo use bfs and indegree of node  \n    sssp(positive weighted edges) -> Dijkstras\n    apsp -> Floydwarshall\n    MST -> kruskal(DSU)\n*/\nusing namespace std;\n//functions\nll power(ll x,ll y){ll res=1;while(y){if(y%2){res*=x;}y/=2;x*=x;} return res;}\nll power(ll x,ll y,ll z){ll res=1;while(y){if(y%2){res=(res*x)%z;}y/=2;x=(x*x)%z;} return res;}\nvoid fast() { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }\nbool sortbysec(const pair<ll, ll>& a, const pair<ll, ll>& b) { return (a.second > b.second); }\nll ceil(ll x,ll y){return (x/y)+(x%y!=0);}\nconst int dx[4] = { -1, 1, 0, 0};\nconst int dy[4] = {0, 0, -1, 1};\nint dxx[] = { -1, -1, -1, 0, 0, 1, 1, 1 };\nint dyy[] = { -1, 0, 1, -1, 1, -1, 0, 1 };\nbool prime[1000001];\nvoid SieveOfEratosthenes(ll n) \n{ \n    // Create a boolean array \"prime[0..n]\" and initialize \n    // all entries it as true. A value in prime[i] will \n    // finally be false if i is Not a prime, else true. \n     \n    memset(prime, true, sizeof(prime)); \n  \n    for (ll p=2; p*p<=n; p++) \n    { \n        // If prime[p] is not changed, then it is a prime \n        if (prime[p] == true) \n        { \n            // Update all multiples of p greater than or  \n            // equal to the square of it \n            // numbers which are multiple of p and are \n            // less than p^2 are already been marked.  \n            for (int i=p*p; i<=n; i += p) \n                prime[i] = false; \n        } \n    } \n  \n    \n} \nvoid solve()\n{\n    ll n,cnt=0;\n    cin>>n;\n    fr(i,1,n+1)\n    {\n        if(prime[i])\n        {\n            cnt++;\n        }\n    }\n    cout<<power(2,cnt-1,1000000007)<<\"\\n\";\n}\nint main()\n{\n    fast();\n    ll t;\n    //t=1;\n    cin>>t;\n    SieveOfEratosthenes(100000);\n    prime[1]=0;\n    fr(i,0,t)\n    {\n        solve();\n    }\n}\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475929,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2801145",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "kgmkr00001",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973962,
        "updated_at_ms": 1599973962,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:41:14.834Z",
        "__v": 0
    },
    {
        "_id": "5f60702150731f1064908c0a",
        "submission_code": "#include<bits/stdc++.h>\n\n#ifndef LOCAL\n#pragma GCC optimize(\"O3\")\n#endif\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//#pragma GCC optimize(\"unroll-loops\")\n\n#define endl        '\\n'\n#define ll          long long\n#define pb          push_back\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define rs(v,n)     v.resize(n)\n#define hell        1000000007\n#define peak        9123372036854775807\n#define pii         acos(-1)\n#define clr(a,x)    memset(a,x,sizeof(a))\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\n\nnamespace InOp{\ntemplate<class x,class y>\nistream &operator>>(istream &in,pair<x,y> &p) \n{ \n    in>>p.F>>p.S;\n    return in;\n}\ntemplate<class x>\nistream &operator>>(istream &in,vector<x> &v) \n{\n    for(auto& i:v)\n        in>>i;\n    return in;\n}\ntemplate<class x,class y>\nostream &operator<<(ostream &out,pair<x,y> &p) \n{ \n    out<<\"(\"<<p.F<<\",\"<<p.S<<\") \";\n    return out; \n}\ntemplate<class x>\nostream &operator<<(ostream &out,vector<x> &v) \n{ \n    out<<v.size()<<endl;\n    for(auto i:v)\n        out<<i<<\" \";\n    out<<endl;\n    return out; \n}\n}\nusing namespace InOp;\n\nnamespace ModOp{\ntemplate<class x,class y,class z> z add(x a,y b,z m){return (a+b)%m;}\ntemplate<class x,class y,class z> z sub(x a,y b,z m){return (a-b+m)%m;}\ntemplate<class x,class y,class z> z mul(x a,y b,z m){return ((ll)a*b)%m;}\ntemplate<class y,class z> z expo(ll b,y e,z m){ll a=1;b%=m;while(e!=0){if((e&1)==1){a=a*b;a=a%m;}b=b*b;b%=m;e>>=1;}return a%m;}\ntemplate<class x,class z> z inv(x b,z m){return expo(b,m-2,m);}\ntemplate<class x,class y> x invGeneral(x a,y b){if(a==0)return b==1?0:-1;x m=invGeneral(b%a,a);return m==-1?-1:((1-(ll)b*m)/a+b)%b;}\ntemplate<class x,class y,class z> z div(x a,y b,z m){ll c=inv(b,m);return mul(a,c,m);}\n}\nusing namespace ModOp;\n\nnamespace Debug{\ntemplate<class x> void deb(x a){cerr<<\"a\"<<\": \"<<a<<endl;}\ntemplate<class x,class y> void deb(x a,y b){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<endl;}\ntemplate<class x,class y,class z> void deb(x a,y b,z c){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<endl;}\ntemplate<class x,class y,class z,class xy> void deb(x a,y b,z c,xy d){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<\" | \"<<\"d\"<<\": \"<<d<<endl;}\n}\nusing namespace Debug;\n\n#define N  1000005\nll solve(ll x,ll n,ll m,vector<vector<ll>>& le,vector<vector<ll>>& up)\n{\n    vector<vector<ll>> vis(n,vector<ll>(m,0));\n    vis[0][0]=1;\n    for(ll i=0;i<n;i++)\n    {\n        for(ll j=0;j<m;j++)\n        {\n            if(j!=0)\n            {\n                if((le[i][j]&x)==x&&vis[i][j-1]==1)\n                {\n                    vis[i][j]=1;\n                }\n            }\n            if(i!=0)\n            {\n                if((up[i][j]&x)==x&&vis[i-1][j]==1)\n                {\n                    vis[i][j]=1;\n                }\n            }\n        }\n    }\n    return vis[n-1][m-1];\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    ll tt=1;\n    cin>>tt;\n    while(tt--)\n    {\n        ll i,j,k,l,r,x,y,m,n;\n        cin>>n>>m;\n        vector<vector<ll>> le(n,vector<ll>(m,0)),up(n,vector<ll>(m,0));\n        for(i=0;i<n-1;i++)\n        {\n            for(j=0;j<2*m-1;j++)\n            {\n                if(j%2==0)\n                {\n                    cin>>up[i+1][j/2];\n                }\n                else\n                {\n                    cin>>le[i][(j+1)/2];\n                }\n            }\n        }\n        for(j=0;j<m-1;j++)\n        {\n            cin>>le[n-1][j+1];\n        }\n        ll ans=0;\n        for(i=63;i>=0;i--)\n        {\n            ll x=ans|(1ll<<i);\n            if(solve(x,n,m,le,up))\n            {\n                ans=x;\n            }\n        }\n        cout<<ans<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475924,
        "contest_id": "115291",
        "problem_id": "170825",
        "site_user_id": "1583809",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "andpath",
        "problem_view_link": "andpath",
        "created_at_ms": 1599973942,
        "updated_at_ms": 1599973942,
        "misc_notes": "[\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T07:41:21.371Z",
        "__v": 0
    },
    {
        "_id": "5f60702750731f1064908c0b",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define mod 1000000007\n#define f(i,a,b) for(ll i=a;i<b;i++)\n#define rf(i,a,b) for(ll i=a;i>=b;i--)\n#define sf(i,s) for(ll i=0;s[i]!='\\0';i++)\n#define watch(x) cout << (#x) << \" is \" << (x) << \"\\n\"\n#define inf 1e18\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define all(v) v.begin(),v.end()\n#define rall(v) v.rbegin(),v.rend()\n#define tr(v,i) for(typeof(v).begin() i = v.begin(); i != v.end(); i++)\n#define pre(v,x) (v.find(x) != v.end())\n#define vpre(v,x) (find(all(v),x) != v.end())\n#define gcd(x,y) __gcd(x,y)\n#define bc(x) __builtin_popcountll(x)\n//cin.ignore(1, '\\n');\nll power(ll a, ll b)\n{\n    if (b == 0)\n        return 1;\n    if (b == 1)\n        return a % mod;\n    else\n    {\n        ll t = power(a, b / 2);\n        if (b % 2 == 0)\n            return ((t % mod) * (t % mod)) % mod;\n        else\n            return ((((t % mod) * (t % mod)) % mod) * ((a % mod) % mod)) % mod;\n    }\n}\nll prime1[1000001];\nvoid isPrime()\n{\n    for(int i=2;i*i<=1000000;i++)\n    {\n        if(prime1[i]==1)\n        {\n        for(int j=i*i;j<=1000000;j+=i)\n        {\n            prime1[j]=0;\n        }\n        }\n    }\n}\nvoid solve()\n{\n  ll n,ans,c=0;\n    cin>>n;\n    if(n==1)\n    {\n        cout<<\"0\\n\";\n        return;\n    }\n    c=prime1[n];\n    ans=power(2,c-1);\n    ans=ans%mod;\n    cout<<ans<<\"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll t = 1;\n    cin >> t;\n    prime1[0]=0;\n    prime1[1]=0;\n    for(int i=2;i<=1000000;i++)\n    {\n     prime1[i]=1;\n    }\n    isPrime();\n    for(int i=1;i<=1000000;i++)\n    {\n    prime1[i]+=prime1[i-1];\n    }\n    while (t--)\n    {\n        solve();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475916,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9631447",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "bugs_overflow",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973929,
        "updated_at_ms": 1599973929,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:41:27.843Z",
        "__v": 0
    },
    {
        "_id": "5f60703150731f1064908c0c",
        "submission_code": "T = int(input())\nfor i in range(T):\n    n = int(input())\n    xi = []\n    yi = []\n    d = {}\n    for j in range(n):\n        p,q = [int(a) for a in input().split()]\n        xi.append(p)\n        yi.append(q)\n    mi = -1\n    for j in range(n):\n        x = xi[j]\n        y = yi[j]\n        s = 0\n        for k in range(n):\n            s += (x-xi[k])**2 + (y-yi[k])**2\n        if(mi == -1):\n            mi = s\n        else:\n            if(mi >= s):\n                mi = s\n                if(mi in d and d[mi][0]>x):\n                    d[mi]=[x,y]               \n        if(mi not in d):\n            d[mi] = [x,y]   \n    print(*d[mi])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475915,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7856278",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "rameshyadavchal1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973928,
        "updated_at_ms": 1599973928,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:41:37.057Z",
        "__v": 0
    },
    {
        "_id": "5f60703850731f1064908c0d",
        "submission_code": "# ------------------- fast io --------------------\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n \nBUFSIZE = 8192\n \n \nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \n# ------------------- fast io --------------------\nimport math\nimport bisect\nfrom collections import Counter,defaultdict,deque\ndef int1():\n    return int(input())\ndef map1():\n    return map(int,input().split())\ndef list1():\n    return list(map(int,input().split()))\nmod=pow(10,9)+7\ndef binary_search(arr, low, high, x): \n\n    if high >= low: \n\n        mid = (high + low) // 2\n        if arr[mid] == x: \n            return mid \n\n        elif arr[mid] > x: \n            return binary_search(arr, low, mid - 1, x) \n        else:\n            return binary_search(arr, mid + 1, high, x) \n\n    else: \n        return -1\ndef gg():\n    n=pow(10,6)\n    prime = [True for i in range(n+1)] \n    p = 2\n    while (p * p <= n): \n        if (prime[p] == True):\n            for i in range(p * p, n+1, p): \n                prime[i] = False\n        p += 1\n    l1=[]\n    for i in range(2,n+1):\n        if(prime[i]==True):\n            l1.append(i)\n    return l1\nl2=gg()\n#print(l2[0:100])\nfor _ in range(int(input())):\n    n=int1()\n    if(n==1):\n        print(0)\n    else:\n        r=binary_search(l2,0,len(l2)-1,n)\n        if(r!=-1):\n            v=pow(2,r,mod)\n            print(v)\n        else:\n            v=bisect.bisect_left(l2,n)\n            v1=pow(2,v-1,mod)\n            print(v1)\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475912,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5623398",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "chandureddyn5",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973916,
        "updated_at_ms": 1599973916,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:41:44.126Z",
        "__v": 0
    },
    {
        "_id": "5f60704250731f1064908c0e",
        "submission_code": "import math\ndef primeFactors(n):\n    z=[]\n    d=n\n    while n%2==0: \n        z.append(2) \n        n=n//2\n    for i in range(3,int(math.sqrt(n))+1,2): \n        while n%i==0: \n            z.append(i) \n            n=n//i \n    if n>2: \n        z.append(n)\n    z=list(set(z))\n    ct=0\n    p=[]\n    for i in range(len(z)):\n        if (d//z[i])%z[i]!=0 and z[i] not in p:\n            ct=ct+1\n            p.append(d//z[i])\n    if 1 in p:\n        print(ct)\n    else:\n        print(ct+1)\ntest=int(input())\nfor _ in range(test):\n    n=int(input())\n    primeFactors(math.factorial(n))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475908,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4622965",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vision01",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973898,
        "updated_at_ms": 1599975098,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:41:54.666Z",
        "__v": 0
    },
    {
        "_id": "5f60704a50731f1064908c0f",
        "submission_code": "def fact(n):\n    fact=1\n    for i in range(1,n+1):\n        fact=fact*i\n    return fact\n\ndef factors(x):\n    factor=[]\n    for i in range(1, x + 1):\n        if x%i==0:\n            factor.append(i)\n    return factor\n\ndef gcd(a, b):  \n    if (a == 0 or b == 0): \n        return False\n    if (a == b): \n        return a \n    if (a > b): \n        return gcd(a-b, b) \n    return gcd(a, b-a) \n       \ndef coprime(a, b) : \n    return (gcd(a, b) == 1) \n  \ndef numOfPairs(arr, n,res) : \n    count = 0\n    for i in range(0, n-1) : \n        for j in range(i+1, n) : \n            if (coprime(arr[i], arr[j]) and arr[i]*arr[j]==res) :\n                #print(\"prime pairs\",arr[i],arr[j]) \n                count = count + 1\n    return count\n\nfor _ in range(int(input())):\n    n=int(input())\n    res=fact(n)\n    factor=factors(res)\n    #print(factor)\n    ans=numOfPairs(factor,len(factor),res)\n    print(ans)\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475906,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6356546",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "tejaswipitchuka1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973896,
        "updated_at_ms": 1599973896,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:42:02.658Z",
        "__v": 0
    },
    {
        "_id": "5f60705350731f1064908c10",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint fact(int n);\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int T;\n    cin>>T;\n    while(T--)\n    {\n        int N;\n        cin>>N;\n        int count=0;\n        int t=fact(N);\n        for(int i=1;i<=t/2;i++)\n        {\n           if(t%i==0)\n           {\n               int y=t/i;\n               if( __gcd(i,y)==1)\n               {\n                   count++;\n               }\n           }\n        }\n        cout<<((count/2)+1)<<endl;\n    }\n}\nint fact(int n)\n{\n    if(n==0 || n==1)\n        return 1;\n    else{\n        return n*fact(n-1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475891,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8255682",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "yagnachilkuri",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973873,
        "updated_at_ms": 1599975073,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:42:11.799Z",
        "__v": 0
    },
    {
        "_id": "5f60705d50731f1064908c11",
        "submission_code": "#include<iostream>\n#include<vector>\n#include<map>\n#include<string>\n#include<stdio.h>\n#include<iterator>\n#include<stack>\n#include<queue>\n#include<set>\n#include<limits>\n#include<algorithm>\n#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 )\n#define all(v) begin(v),end(v)\n\nusing namespace std;\nusing ll = long long;\n\nauto F() {\n    ll n;\n    cin>>n;\n    vector<ll> x(n);\n    vector<ll> y(n);\n    for(int i=0;i<n;i++) {\n        cin>>x[i]>>y[i];\n    }\n    \n    vector<ll> cx = x;\n    vector<ll> cy = y;\n    ll sqx = 0, sqy = 0, sx=0,sy =0;\n    for(auto i:x) {\n        sqx += i*i;\n        sx += i;\n    }\n    for(auto i:y) {\n        sqy += i*i;\n        sy += i;\n    }\n    for(auto &i:x) {\n        i = (n)*i*i - 2*i*(sx) + sqx;\n    }\n    \n    for(auto &i:y) {\n        i = (n)*i*i - 2*i*(sy) + sqy;\n    }\n  \n    \n    // for(auto i:x) cout<<i<<\" \";\n    // cout<<endl;\n    // for(auto i:y) cout<<i<<\" \";\n    // cout<<endl;\n    \n    ll maxi= 0;\n    for(int i=1;i<n;i++) {\n        if(x[i]+y[i] < x[maxi]+y[maxi]) {\n            maxi=i;\n        }\n    }\n    // cout<<maxi<<endl;\n    cout<<cx[maxi]<<\" \"<<cy[maxi]<<\"\\n\";\n}\n\nauto T() {\n    ll t;\n    cin >> t;\n    // t=1;\n    while (t--)\n    {\n        F();\n    }\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    T();\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475888,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4289507",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "praveen7777",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973869,
        "updated_at_ms": 1599973869,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:42:21.702Z",
        "__v": 0
    },
    {
        "_id": "5f60706750731f1064908c12",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 1e18\n#define ll  long long int\n#define deb(x) cout << #x << \" : \" << x << endl\nint main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    ll t;\n    cin >> t;\n    ll ti=1;\n    while(t--){\n        ll n,m;\n        cin >> n >> m;\n        char arr[n][m];\n        string temp[n+1][m+1];\n        string dir[n+1][m+1];\n        ll i,j;\n        for(i=0;i<n;i++){\n            for(j=0;j<m;j++){\n                cin >> arr[i][j];\n            }\n        }\n        vector<char> ans;\n        for(i=n-1;i>=0;i--){\n            for(j=m-1;j>=0;j--){\n                temp[i][j].push_back(arr[i][j]);\n                string ans = \"\";\n                string ok=\"\";\n                if((i+1)<n){\n                    if(ans == \"\"){\n                        ans = temp[i+1][j];\n                        ok = \"D\" + dir[i+1][j];\n                    }\n                    else{\n                        if(ans > temp[i+1][j]){\n                            ans = temp[i][j];\n                            ok = \"D\" + dir[i+1][j];\n                        }\n                    }\n                }\n                if((j+1)<m){                    \n                    if(ans == \"\"){\n                        ans = temp[i][j+1];\n                        ok = \"R\" + dir[i][j+1];\n                    }\n                    else{\n                        if(ans > temp[i][j+1]){\n                            ans = temp[i][j+1];\n                            ok = \"R\" + dir[i][j+1];\n                        }\n                    }\n                }\n                temp[i][j]=arr[i][j];\n                temp[i][j]+=ans;\n                dir[i][j]=ok;\\\n            }\n        }\n        cout << \"Case #\"<<ti++<<\": \"<<dir[0][0]<< endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475883,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3651417",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599973856,
        "updated_at_ms": 1599975056,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:42:31.533Z",
        "__v": 0
    },
    {
        "_id": "5f60707150731f1064908c13",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() \n{\n    int t;\n    cin>>t;\n    while(t--)\n    {\n        long long int x[100000],y[100000],i,n,sumsqx=0,sumx=0,sumy=0,sumsqy=0,ans[100000]={0},min=100000000000000,a=1000000,b=1000000;\n        cin>>n;\n        for(i=0;i<n;i++)\n        {\n            cin>>x[i]>>y[i];\n            sumsqx+=x[i]*x[i];\n            sumsqy+=y[i]*y[i];\n            sumx+=x[i];\n            sumy+=y[i];\n        }\n        for(i=0;i<n;i++)\n        {\n         ans[i]=n*(x[i]*x[i]+y[i]*y[i])+sumsqx+sumsqy-2*(x[i]*sumx+y[i]*sumy);\n        }\n        for(i=0;i<n;i++)\n        {\n            if(ans[i]<min)\n            {\n                min=ans[i];\n                a=x[i];\n                b=y[i];\n            }\n        }\n            cout<<a<<\" \"<<b<<endl;\n    }  \n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475875,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7133320",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "logicalcoder9908",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973833,
        "updated_at_ms": 1599973833,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:42:41.158Z",
        "__v": 0
    },
    {
        "_id": "5f60708350731f1064908c14",
        "submission_code": "import java.util.*;\nimport java.lang.*;\npublic class Solution {\n    static long coprime(long a,long b){\n        if(a==0 || b==0){\n            return 0;\n        }\n        if(a==b){\n            return a;\n        }\n        if(a>b)\n            return coprime(a-b,b);\n        return coprime(a,b-a); //if coprime(a,b)==1 then numbers are coprime\n    }\n    static int ways(long n,long fact){\n        int num=0;\n        for(long i=1;i<n;i++){\n            long temp=fact/i;\n            //System.out.println(temp+\" xxx\");\n            if(coprime(temp,i)==1){\n                num+=1;\n                //System.out.println(i+\" \"+temp);\n            }\n            \n        }\n        return num;\n        \n    }\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner s=new Scanner(System.in);\n        \n        int t=s.nextInt();\n        while(t>0){\n            long n=s.nextLong();\n            long fact=1;\n            //System.out.println(n);\n            for(long i=1;i<=n;i++){\n                fact=fact*i;\n            }\n            //System.out.println(fact);\n            System.out.println(ways(n,fact));\n            t--;\n        }    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475872,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5598553",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "manmeet02012001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973831,
        "updated_at_ms": 1599973831,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:42:59.366Z",
        "__v": 0
    },
    {
        "_id": "5f60708a50731f1064908c15",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    public static int f(int k,int[][] a)\n    {\n        int x=a[k][0],y=a[k][1],sum=0;;\n        for(int i=0;i<a.length;i++)\n        {\n            if(i==k)\n                continue;\n            sum=sum+(x-a[i][0])*(x-a[i][0])+(y-a[i][1])*(y-a[i][1]);\n        }\n        return sum;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        for(int i=0;i<N;i++)\n        {\n            int n=sc.nextInt();\n            int[][] a=new int[n][2];\n            for(int j=0;j<n;j++)\n            {\n                a[j][0]=sc.nextInt();\n                a[j][1]=sc.nextInt();\n            }\n            int[] sum=new int[n];\n            for(int i1=0;i1<n;i1++)\n            {\n                sum[i1]=f(i1,a);\n            }int max=1000,l=0;\n            for(int i1=0;i1<n;i1++)\n            {\n                if(max>sum[i1])\n                {\n                    max=sum[i1];\n                    l=i1;\n                }\n            }\n            System.out.println(a[l][0]+\" \"+a[l][1]);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475870,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636583",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "ramyasreesai2000",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973829,
        "updated_at_ms": 1599975029,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:43:06.551Z",
        "__v": 0
    },
    {
        "_id": "5f60709250731f1064908c16",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 1e18\n#define ll  long long int\n#define deb(x) cout << #x << \" : \" << x << endl\nint main(){\n    ll t;\n    cin >> t;\n    ll ti=1;\n    while(t--){\n        ll n,m;\n        cin >> n >> m;\n        char arr[n][m];\n        string temp[n+1][m+1];\n        string dir[n+1][m+1];\n        ll i,j;\n        for(i=0;i<n;i++){\n            for(j=0;j<m;j++){\n                cin >> arr[i][j];\n            }\n        }\n        vector<char> ans;\n        for(i=n-1;i>=0;i--){\n            for(j=m-1;j>=0;j--){\n                temp[i][j].push_back(arr[i][j]);\n                string ans = \"\";\n                string ok=\"\";\n                if((i+1)<n){\n                    if(ans == \"\"){\n                        ans = temp[i+1][j];\n                        ok = \"D\" + dir[i+1][j];\n                    }\n                    else{\n                        if(ans > temp[i+1][j]){\n                            ans = temp[i][j];\n                            ok = \"D\" + dir[i+1][j];\n                        }\n                    }\n                }\n                if((j+1)<m){                    \n                    if(ans == \"\"){\n                        ans = temp[i][j+1];\n                        ok = \"R\" + dir[i][j+1];\n                    }\n                    else{\n                        if(ans > temp[i][j+1]){\n                            ans = temp[i][j+1];\n                            ok = \"R\" + dir[i][j+1];\n                        }\n                    }\n                }\n                temp[i][j]=arr[i][j];\n                temp[i][j]+=ans;\n                dir[i][j]=ok;\\\n            }\n        }\n        cout << \"Case #\"<<ti++<<\": \"<<dir[0][0]<< endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475859,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "3651417",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599973797,
        "updated_at_ms": 1599973797,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:43:14.539Z",
        "__v": 0
    },
    {
        "_id": "5f60709b50731f1064908c17",
        "submission_code": "#pragma GCC optimize(\"Ofast\")  \n#pragma GCC target(\"avx,avx2,fma\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define IO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define int long long \n#define endl \"\\n\"\n#define all(x) (x).begin(),(x).end()\nconst int MOD = 1e9+7;\nconst int mxN = 2e5+3;\n\nint fun(int x_sq, int y_sq, int xs, int ys, int xi, int yi, int n){\n    int ret = 0;\n    ret += (n * xi * xi);\n    ret += (n * yi * yi);\n    ret -= (2 * xi * xs);\n    ret -= (2* yi * ys);\n    return ret;\n}\n\nvoid solve(){\n    int n;\n    cin >> n;\n    pair<int, int> a[n];\n    for(int i = 0; i < n; ++i){\n        cin >> a[i].first >> a[i].second;\n    }\n    int x_sq_sum = 0;\n    int x_sum = 0;\n    int y_sq_sum = 0;\n    int y_sum = 0;\n    for(int i = 0; i < n; ++i){\n        x_sq_sum += (a[i].first * a[i].first);\n        x_sum += a[i].first;\n        y_sq_sum += (a[i].second * a[i].second);\n        y_sum += a[i].second;\n    }\n    pair<int, int> ans;\n    int mx = INT_MAX;\n    for(int i = 0; i < n; ++i){\n        int tt = fun(x_sq_sum, y_sq_sum, x_sum, y_sum, a[i].first, a[i].second, n);\n        //cout << (i+1) << \" \" << tt << endl;\n        if(tt < mx){\n            mx = tt;\n            ans.first = a[i].first;\n            ans.second = a[i].second;\n        }\n    }\n    cout << ans.first << \" \" << ans.second << endl;\n}\n\nint32_t main(){\n    IO;\n    \n    int nT = 1;\n    cin >> nT;\n    for(int i = 1; i <= nT; ++i)\n        solve();\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475854,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7776882",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "17131a0588",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973776,
        "updated_at_ms": 1599974976,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:43:23.139Z",
        "__v": 0
    },
    {
        "_id": "5f6070a450731f1064908c18",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint cnt=0;\nlong int fact(int n)\n{\n    long int fac=1;\n    while(n)\n    {\n        fac=fac*n;\n        n--;\n    }\n    return fac;\n}\n\nvoid factorize(long int n){\n   int count = 0;\n   while (!(n % 2)) {\n      n/= 2;\n      count++;\n   }\n   if (count)\n      cnt++;\n   for (long long i = 3; i <= sqrt(n); i += 2) {\n      count = 0;\n      while (n % i == 0) {\n         count++;\n         n = n / i;\n      }\n      if (count)\n        cnt++;\n   }\n   if (n > 2)\n        cnt++;\n    cout<<pow(2,cnt-1)<<endl;\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t,n;\n    long int fac=1;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cnt=0;\n        fac=fact(n);\n        factorize(fac);\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475835,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4675890",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "160218733061CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973732,
        "updated_at_ms": 1599973732,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:43:32.574Z",
        "__v": 0
    },
    {
        "_id": "5f6070ac50731f1064908c19",
        "submission_code": "T=int(input())\nimport math\ndef isPrime(n) : \n    if (n <= 1) : \n        return False\n    if (n <= 3) : \n        return True\n    if (n % 2 == 0 or n % 3 == 0) : \n        return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\nst=set([2])\nfor i in range(3,10**6+1,2):\n    if(isPrime(i)):\n        st.add(i)\nfor _ in range(T):\n    count=0\n    n=int(input())\n    for i in range(2,n+1):\n        if(i in st):\n            count+=1\n    print((2**(count-1)%((10**9)+7)))\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475834,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986737",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vegishanmukh7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973726,
        "updated_at_ms": 1599974926,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:43:40.428Z",
        "__v": 0
    },
    {
        "_id": "5f6070b250731f1064908c1a",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n \ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef long double ld;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<ii> vii;\ntypedef pair<ll,ll> pll;\ntypedef vector<vector<ii>> vvii;\n \n#define F first\n#define S second\n#define PB push_back\n#define MP make_pair\n#define EPS 1e-9\n#define INF 1000000\n#define MOD 1000000007\n#define PI 3.14159265358979323846\n\nbitset <INF+1> prime;\nvector<ll> primesVec;\nll power[INF+1];\n\nvoid calcPow()\n{\n    power[0]=1;\n    for(int i=1;i<=INF;i++)\n        power[i] = (2*power[i-1])%MOD;\n}\n\nvoid seive()\n{\n  prime.set();\n  prime[0]=0;\n  prime[1]=0;\n\n  for(ll i=2;i<=INF;i++)\n  {\n    if(prime[i])\n    {\n      for(ll j=i*i;j<=INF;j+=i)\n        prime[j]=0;\n      primesVec.push_back(i);\n    }\n  }\n}\n\n\nint main()\n{    \n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n\n    int t,n;\n    cin>>t;\n    seive();\n    calcPow();\n\n    while(t--)\n    {\n        cin>>n;\n        if(n==1)\n            cout<<\"0\"<<endl;\n        else\n        {\n            int m = upper_bound(primesVec.begin(),primesVec.end(),n) - primesVec.begin();\n            //cout<<m<<\" \"<<primesVec.size()<<endl;\n            cout<<power[m-1]<<endl;\n        }\n    }\n\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475819,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5369834",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "rizwan_b170829cs",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973688,
        "updated_at_ms": 1599976088,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T07:43:46.778Z",
        "__v": 0
    },
    {
        "_id": "5f6070b950731f1064908c1b",
        "submission_code": "#include <iostream>\n#include <bits/stdc++.h>\nusing namespace std;\n#define all(a)       a.begin(), a.end()\n#define pb           push_back\n#define mp           make_pair\n#define FAST_IO      ios_base::sync_with_stdio(false); cin.tie(NULL);\ntypedef long long int ll;\ntypedef long double ld;\nconst int MOD = 1e9 + 7;\nll power(ll a, ll n) {ll p = 1; while (n > 0) {if (n % 2) {p = p * a;} n >>= 1; a *= a;} return p;}\nll power(ll a, ll n, ll mod) {ll p = 1; while (n > 0) {if (n % 2) {p = p * a; p %= mod;} n >>= 1; a *= a; a %= mod;} return p % mod;}\n\nvoid solve(){\n    ll n;\n    cin>>n;\n    ll xsum = 0;\n    ll ysum = 0;\n    ll xsq = 0;\n    ll ysq = 0;\n    vector<pair<ll,ll>> v;\n    for(ll i = 0; i < n ; i++) {\n        ll x,y;\n        cin>>x>>y;\n        v.push_back({x,y});\n        xsum += x;\n        ysum += y;\n        xsq += (x*x);\n        ysq += (y*y);\n    }\n    \n    vector<pair<ll,pair<ll,ll>>> ans;\n    for(ll i = 0; i < n ; i++) {\n        ll x = v[i].first;\n        ll y = v[i].second;\n        ll ans1 = (n)*((x*x)+(y*y));\n        ans1 += xsq;\n        ans1 += ysq;\n        ans1 -= (2*(x)*(xsum));\n        ans1 -= (2*(y)*(ysum));\n       // cout<<ans1<<endl;\n        ans.push_back({ans1,{x,y}});\n    }\n    sort(ans.begin(),ans.end());\n  cout<<ans[0].second.first<<\" \"<<ans[0].second.second<<endl;\n}\n\nint main() {\n  FAST_IO\n  ll t;\n  cin>>t;\n  //t = 1;\n  while (t--)\n  {\n    solve();\n  }\n  return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475813,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5043696",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "nimmi_001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973664,
        "updated_at_ms": 1599973664,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T07:43:53.534Z",
        "__v": 0
    },
    {
        "_id": "5f607b7d50731f1064908c1c",
        "submission_code": "/*\n _     _                             \n| |__ | |__   __ _  __ _ _   _  __ _ \n| '_ \\| '_ \\ / _` |/ _` | | | |/ _` |\n| |_) | | | | (_| | (_| | |_| | (_| |\n|_.__/|_| |_|\\__,_|\\__, |\\__, |\\__,_|\n                   |___/ |___/       \n*/\n#include<bits/stdc++.h>\n\n#define ll          long long\n#define pb          push_back\n#define ppb         pop_back\n#define BigInt      __int128\n#define endl        '\\n'\n#define mii         map<ll int,ll int>\n#define pii         pair<ll int,ll int>\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define hell        1000000007\n#define sim         template < class c\n#define ris         return * this\n#define dor         > debug & operator <<\n#define eni(x)      sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\n\nusing namespace std;\n\nsim > struct rge {c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cout << *x, 0);\nsim > char dud(...);\nstruct debug \n{\n    ~debug() \n    { \n        cout<<endl; \n    }\n    eni(!=) cout << boolalpha << i; ris; }\n    eni(==) ris << range(begin(i), end(i)); }\n    sim, class b dor(pair < b, c > d) \n    {\n        ris << \"(\" << d.first << \", \" << d.second << \")\";\n    }\n    sim dor(rge<c> d) \n    {\n          *this << \"[\";\n          for (auto it = d.b; it != d.e; ++it)\n            *this << \", \" + 2 * (it == d.b) << *it;\n          ris << \"]\";\n    }\n};\n#define fuck(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define N  6900005\n\nll int expo(ll int base,ll int exponent,ll int mod){\n    ll int ans=1;\n    while(exponent!=0){\n        if(exponent&1) ans=(1LL*ans*base)%mod;\n        base=(1LL*base*base)%mod;\n        exponent>>=1;\n    }\n    return ans%mod;\n}\n\nll int fac[N];\n\nll int facinv[N];\n\nll int ncr(ll int n, ll int r)\n{\n    ll int res = (fac[n] * facinv[r]) % hell;\n    res = (res * facinv[n - r]) % hell;\n    return res; \n}\n\nvoid init()\n{\n    fac[0] = 1;\n    for(ll int i = 1; i < N; i++)\n    {\n        fac[i] = (i * fac[i - 1]) % hell;\n    }\n    facinv[N - 1] = expo(fac[N - 1], hell - 2, hell);\n    for(ll int i = N - 2; i >= 0; i--)\n    {\n        facinv[i] = (facinv[i + 1] * (i + 1)) % hell;\n    }\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int TESTS=1;\n    cin>>TESTS;\n    init();\n    while(TESTS--)\n    {\n        ll int x, y, x1, y1, x2, y2;\n        cin >> x >> y >> x1 >> y1 >> x2 >> y2;\n        // ll int ans = 0;\n        ll int path1 = ncr(x + y, x);\n        ll int path2 = (ncr(x1 + y1, x1) * ncr(x - x1 + y - y1, x - x1)) % hell;\n        ll int path3 = (ncr(x2 + y2, x2) * ncr(x - x2 + y - y2, x - x2)) % hell;\n        ll int path4 = (ncr(x1 + y1, x1) * ncr(x - x2 + y - y2, x - x2)) % hell;\n        path4 = (path4 * ncr(x2 - x1 + y2 - y1, x2 - x1)) % hell;\n        ll int ans = (path1 + path4 + hell - path2 + hell - path3) % hell;\n        cout << ans << endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475808,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "2968720",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599973658,
        "updated_at_ms": 1599973658,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:29:49.764Z",
        "__v": 0
    },
    {
        "_id": "5f607b8550731f1064908c1d",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    int t;\n    cin>>t;\n    while(t--){\n        long long n;\n        cin>>n;\n        long long i,j,x[n],y[n],f[n],min=100005,min1=10000000;\n        for(i=0;i<n;i++){\n            cin>>x[i]>>y[i];\n        }\n        for(i=0;i<n;i++){\n            f[i] = 0;\n        }\n        for(i=0;i<n;i++){\n            for(j=0;j<n;j++){\n                f[i] += (x[i]-x[j])*(x[i]-x[j]) + (y[i]-y[j])*(y[i]-y[j]); \n            }\n            // cout<<f[i]<<endl;\n            if(min1>f[i]){\n                min1 = f[i];\n                min = i;\n            }\n            if(min1==f[i]){\n                if(min>i){\n                    min=i;\n                }\n            }\n        }\n        cout<<x[min]<<\" \"<<y[min]<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475804,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6986492",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973634,
        "updated_at_ms": 1599974834,
        "misc_notes": "[\"Segmentation Fault\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:29:57.037Z",
        "__v": 0
    },
    {
        "_id": "5f607b8b50731f1064908c1e",
        "submission_code": "import java.util.*;\nimport java.lang.*;\nclass Solution{\n static String getargmin(int arr[][],int n){\n       int mx=Integer.MAX_VALUE;\n       int sum;\n       String s=\"\";\n       for(int i=0;i<n;i++){\n          int x=arr[i][0];\n          int y=arr[i][1];\n          sum=0;\n         for(int j=0;j<n;j++){\n              sum+=Math.pow(x-arr[j][0],2)+Math.pow(y-arr[j][1],2);\n              }\n              //System.out.println(sum);\n         if(sum<mx){\n              mx=sum;\n              s=x+\" \"+y;\n         }\n       }\n       //System.out.println(s);\n       return s;\n }\npublic static void main(String[] args){\n    Scanner in=new Scanner(System.in);\n    int n=in.nextInt();\n    String fin[]=new String[n];\n    for(int i=0;i<n;i++){\n          int k=in.nextInt();\n          int arr[][]=new int[k][2];\n          for(int j=0;j<k;j++){\n                  arr[j][0]=in.nextInt();\n                  arr[j][1]=in.nextInt();\n          }\n          fin[i]=getargmin(arr,k);\n    }\n    for(int i=0;i<n;i++){\n        System.out.println(fin[i]);\n    }\n}\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475798,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5598553",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "manmeet02012001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973620,
        "updated_at_ms": 1599973620,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:30:03.669Z",
        "__v": 0
    },
    {
        "_id": "5f607b9550731f1064908c1f",
        "submission_code": "/* ****Ragnar7 _Lawliet_**** */\n/* First, solve the problem.Then write the code. */\n#include<bits/stdc++.h>\n#define ll          long long\n#define ld             long double\n#define hell        1000000007\n#define time        cerr << \"\\nTime elapsed: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\nstd::mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());\nusing namespace std;\n\nll expo(ll base, ll exponent, ll mod) {                                //return base^exponent modulo modulus\n    ll ans = 1;\n    while(exponent !=0 ) {\n        if((exponent&1) == 1) {\n            ans = ans*base ;\n            ans = ans%mod;\n        }\n        base = base*base;\n        base %= mod;\n        exponent>>= 1;\n    }\n    return ans%mod;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    // #ifndef ONLINE_JUDGE\n    // freopen (\"input.txt\",\"r\",stdin);\n    // // freopen (\"output.txt\",\"w\",stdout);\n    // #endif\n    ll N = 1e6+1;\n    vector<ll> sieve(N,0);\n    for(ll i=2;i<N;i++)\n    {\n        if(sieve[i])\n            continue;\n        // sieve[i] = 0;\n        for(ll j=2*i;j<N;j+=i)\n            sieve[j] = 1 ;\n    }\n    sieve[0] = sieve[1] = 1;\n    for(ll i=0;i<N;i++)\n        sieve[i] ^=1;\n    for(ll i=1;i<N;i++)\n        sieve[i]+=sieve[i-1];\n    // vector<ll> fact(N,0);\n    // fact[0] = 1;\n    // for(ll i=1;i<N;i++)\n    //     fact[i] = (fact[i-1]*i)%hell;\n    ll t = 1;\n    cin>>t;\n    while(t--)\n    {\n        ll n;\n        cin>>n;\n        if(n==1)\n        {\n            cout<<0<<'\\n';\n            continue;\n        }\n        ll ans  = (expo(2LL,sieve[n],hell)*expo(2LL,hell-2,hell))%hell;\n        cout<<ans<<'\\n';\n    }\n\n    \n    time\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475786,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3583145",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "Ragnar_7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973588,
        "updated_at_ms": 1599975988,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:30:13.898Z",
        "__v": 0
    },
    {
        "_id": "5f607b9f50731f1064908c20",
        "submission_code": "def isPrime(n) : \n    if (n <= 1) : \n        return False\n    if (n <= 3) : \n        return True\n    if (n % 2 == 0 or n % 3 == 0) : \n        return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True \ndef printPrime(n):\n    c=0\n    for i in range(2, n + 1): \n        if isPrime(i): \n            c+=1\n    return c\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    print(printPrime(n))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475781,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4674163",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "SravanthiCSEB71",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973577,
        "updated_at_ms": 1599973577,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:30:23.157Z",
        "__v": 0
    },
    {
        "_id": "5f607ba650731f1064908c21",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint fact(int n);\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int T;\n    cin>>T;\n    while(T--)\n    {\n        int N;\n        cin>>N;\n        int count=0;\n        int t=fact(N);\n        for(int i=1;i<=t;i++)\n        {\n           if(t%i==0)\n           {\n               int y=t/i;\n               if( __gcd(i,y)==1)\n               {\n                   count++;\n               }\n           }\n        }\n        cout<<count/2<<endl;\n    }\n}\nint fact(int n)\n{\n    if(n==0 || n==1)\n        return 1;\n    else{\n        return n*fact(n-1);\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475778,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8255682",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "yagnachilkuri",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973571,
        "updated_at_ms": 1599973571,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:30:30.074Z",
        "__v": 0
    },
    {
        "_id": "5f607bad50731f1064908c22",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define ll  long long int\n#define MAXN 1000020\n#define mod 1000000007\n#define pb push_back\n#define endl    '\\n'\n \nll fun(ll x,ll y){\n    ll ans=1;\n    while(y>0){\n        if(y%2==1){\n            ans=(ans*1ll*x)%mod;\n        }\n        y=y/2;\n        x=(x*1ll*x)%mod;\n    }\n    return ans;\n}\n \nint main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll a[MAXN],power[MAXN],i,j;\n    power[0]=1;\n    power[1]=2;\n    memset(a,0,sizeof(a));\n    for(i=2;i<MAXN;i++){\n        if(a[i]==0){\n            for(j=2*i;j<MAXN;j+=i){\n                a[j]=1;\n            }\n        }\n        ll q=2;\n        power[i]=power[i-1]*1ll*q;\n        power[i]=power[i]%mod;\n    }\n    vector<ll> vi;\n    for(i=2;i<MAXN;i++){\n        if(a[i]==0){\n            vi.pb(i);\n        }\n    }\n    // for(auto x:vi){\n    //     cout<<x<<\" \";\n    // }\n    // cout<<endl;\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n;\n        cin>>n;\n        ll x=upper_bound(vi.begin(),vi.end(),n)-vi.begin();\n        // ll ans=fun(p,x-1);\n        ll ans=power[x-1];\n        // cout<<n<<\" \";\n        // cout<<ans<<endl;\n        if(n==1){\n            cout<<0;\n        }\n        else{\n            cout<<ans;\n        }\n        cout<<endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475775,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3651417",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973566,
        "updated_at_ms": 1599975966,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:30:37.234Z",
        "__v": 0
    },
    {
        "_id": "5f607bb650731f1064908c23",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n\n// https://atcoder.jp/posts/518\n// #include <atcoder/convolution>\n// #include <atcoder/dsu>\n// #include <atcoder/fenwicktree>\n// #include <atcoder/lazysegtree>\n// #include <atcoder/math>\n// #include <atcoder/maxflow>\n// #include <atcoder/mincostflow>\n// #include <atcoder/modint>\n// #include <atcoder/scc>\n// #include <atcoder/segtree>\n// #include <atcoder/string>\n// #include <atcoder/twosat>\n// using namespace atcoder;\n\nusing ld = long double;\n#define int long long\n\n#define F first\n#define S second\n#define s(x) set<x>\n#define um(x, y) unordered_map<x, y>\n#define m(x, y) map<x, y>\n#define p(x, y) pair<x, y>\n#define v(x) vector<x>\n#define min_heap(t) priority_queue<t, vector<t>, greater<t>>\n#define max_heap(t) priority_queue<t>\n\n#define eb emplace_back\n#define mp make_pair\n#define bs binary_search\n#define lb lower_bound\n#define ub upper_bound\n\n#define all(v) v.begin(), v.end()\n#define ss(v) stable_sort(all(v))\n#define fori(i, a, b) for (int i = a; i <= b; i++)\n#define rofi(i, a, b) for (int i = a; i >= b; --i)\n#define scn(v1)        \\\n    for (auto &x : v1) \\\n        cin >> x;\n#define deb(x) cout << #x << \"=\" << x << endl;\n#define R(x) reverse(all(x));\n\n#define FILE_READ_IN freopen(\"input.txt\", \"r\", stdin);\n#define FILE_READ_OUT freopen(\"output.txt\", \"w\", stdout);\n\n#define fastio                    \\\n    ios_base::sync_with_stdio(0); \\\n    cin.tie(0);                   \\\n    cout.tie(0);\n#define stprs(x) cout << fixed << setprecision(x);\n\nconst char nl = '\\n';\nconst char sp = ' ';\nconst int mod1 = 1e9 + 7;\nconst int mod2 = 998244353;\nconst ld PI = acos(-1);\n\n#define debug cerr\n#define name(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\ntemplate<class A>\nostream& operator << (ostream& out, const set<A> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            out << \", \";\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<class A>\nostream& operator << (ostream& out, const vector<A> &a) {\n    // out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            // out << \", \";\n            out << ' ';\n        out << *it;\n    }\n    return out;\n    return out << \"]\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const pair<A, B> &a) {\n    return out <<  \"(\" << a.first << \", \" << a.second << \")\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\ntemplate<class A, class B>\nostream& operator << (ostream& out, const unordered_map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<typename... T>\nvoid read(T&... args) {\n    ((cin >> args), ...);\n}\n\ntemplate<typename... T>\nvoid print(T... args) {\n    ((cout << args), ...);\n}\n\n// variables and consts\nconst int N = 10000000;\nint lp[N+1];\nvector<int> pr;\n// -- variables and consts --\n\nvoid primes() {\n    for (int i=2; i<=N; ++i) {\n        if (lp[i] == 0) {\n            lp[i] = i;\n            pr.push_back (i);\n        }\n        for (int j=0; j<(int)pr.size() && pr[j]<=lp[i] && i*pr[j]<=N; ++j)\n            lp[i * pr[j]] = pr[j];\n    }\n}\n\nint upb(int n) {\n    int l = 0;\n    int h = pr.size() - 1ll;\n    int ans;\n    while(l <= h) {\n        int mid = (l+h) / 2;\n        if(pr[mid] == n) return mid;\n        if(pr[mid] > n) {\n            ans = mid;\n            h = mid-1;\n        } else {\n            l = mid+1;\n        }\n    }\n    return ans;\n}\n\nint po(int a) {\n    if(a == 1) {\n        return 2ll;\n    } else if(a == 0) {\n        return 1ll;\n    }\n    int p = po(a/2);\n    p *= p;\n    p %= mod1;\n    if(a&1) {\n        p *= 2;\n        if(p >= mod1) {\n            p -= mod1;\n        }\n    }\n    return p;\n}\n\nvoid solve(void) {\n    int n;\n    read(n);\n    if(n == 1) {\n        print(\"1\\n\");\n        return;\n    }\n    int k = upb(n);\n    // debug << name(k);\n    while(pr[k] > n) -- k; \n    int l = upb(n/2);\n    k -= l;\n    print(po(k), nl);\n}\n\nint32_t main(void) {\n    fastio\n    int __ = 1;\n    primes();\n    read(__);\n    while (__--) {\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475773,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5078334",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "the_pythor",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973561,
        "updated_at_ms": 1599975961,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T08:30:46.523Z",
        "__v": 0
    },
    {
        "_id": "5f607c1ca103c413d4ade40d",
        "submission_code": "/* ****Ragnar7 _Lawliet_**** */\n/* First, solve the problem.Then write the code. */\n#include<bits/stdc++.h>\n#define ll          long long\n#define ld             long double\n#define hell        1000000007\n#define time        cerr << \"\\nTime elapsed: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\nstd::mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());\nusing namespace std;\n\nll expo(ll base, ll exponent, ll mod) {                                //return base^exponent modulo modulus\n    ll ans = 1;\n    while(exponent !=0 ) {\n        if((exponent&1) == 1) {\n            ans = ans*base ;\n            ans = ans%mod;\n        }\n        base = base*base;\n        base %= mod;\n        exponent>>= 1;\n    }\n    return ans%mod;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    // #ifndef ONLINE_JUDGE\n    // freopen (\"input.txt\",\"r\",stdin);\n    // // freopen (\"output.txt\",\"w\",stdout);\n    // #endif\n    ll N = 1e6+1;\n    vector<ll> sieve(N,0);\n    for(ll i=2;i<N;i++)\n    {\n        if(sieve[i])\n            continue;\n        // sieve[i] = 0;\n        for(ll j=2*i;j<N;j+=i)\n            sieve[j] = 1 ;\n    }\n    sieve[0] = sieve[1] = 1;\n    for(ll i=0;i<N;i++)\n        sieve[i] ^=1;\n    for(ll i=1;i<N;i++)\n        sieve[i]+=sieve[i-1];\n    // vector<ll> fact(N,0);\n    // fact[0] = 1;\n    // for(ll i=1;i<N;i++)\n    //     fact[i] = (fact[i-1]*i)%hell;\n    ll t = 1;\n    cin>>t;\n    while(t--)\n    {\n        ll n;\n        cin>>n;\n        if(n==1)\n        {\n            cout<<1<<'\\n';\n            continue;\n        }\n        ll ans  = (expo(2LL,sieve[n],hell)*expo(2LL,hell-2,hell))%hell;\n        cout<<ans<<'\\n';\n    }\n\n    \n    time\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475757,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3583145",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "Ragnar_7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973514,
        "updated_at_ms": 1599974714,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T08:32:28.539Z",
        "__v": 0
    },
    {
        "_id": "5f607c23a103c413d4ade40e",
        "submission_code": "import java.io.*;\nimport java.util.*;\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        while(t>0){\n            t--;\n            int n=sc.nextInt();\n            int x[]=new int[n];\n            int y[]=new int[n];\n            for(int i=0;i<n;i++){\n                x[i]=sc.nextInt();\n                y[i]=sc.nextInt();\n            }\n            int a[][]=new int[n+1][n+1];\n            for(int i=0;i<n;i++){\n                for(int j=i;j<n;j++){\n                    a[i][j]=dist(x[i],y[i],x[j],y[j]);\n                    a[j][i]=a[i][j];\n                }\n            }\n            int minSum=Integer.MAX_VALUE,x1=-1,y1=-1;\n            for(int i=0;i<n;i++){\n                int sum=0;\n                for(int j=0;j<n;j++){\n                    sum+=a[i][j];\n                    //System.out.print(a[i][j]+\" \");\n                }\n                if(minSum>sum){\n                    minSum=sum;\n                    //System.out.println(\"\\n\\t\"+x[i]+\" \"+y[i]);\n                    x1=x[i];\n                    y1=y[i];\n                }\n                //System.out.println();\n            }\n            System.out.println(x1+\" \"+y1);\n            \n        }\n    }\n    public static int dist(int x1,int y1,int x2,int y2){\n        //System.out.println(\"\\t\"+x1+\" \"+y1+\" \"+x2+\" \"+y2+\" \"+(x1-x2)*(x1-x2)+\" \"+(((y1-y2)*(y1-y2))));\n        return ((x1-x2)*(x1-x2))+((y1-y2)*(y1-y2));\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475754,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "3770682",
        "submission_status": "Runtime Error",
        "submission_language": "java8",
        "site_user_handle": "aamukthaaukunoo1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973509,
        "updated_at_ms": 1599973509,
        "misc_notes": "[\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Runtime Error\",\"Runtime Error\",\"Runtime Error\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:32:35.192Z",
        "__v": 0
    },
    {
        "_id": "5f607c29a103c413d4ade40f",
        "submission_code": "T = int(input())\nfor i in range(0,T):\n    n=int(input())\n    x=[]\n    y=[]\n    l=[]\n    h=0\n    s=0\n    for j in range(0,n):\n        w=input().split(' ')\n        x.append(int(w[0]))\n        y.append(int(w[1]))\n    for r in range(0,n): \n        d=x[r]\n        c=y[r]\n        s=0\n        for j in range(0,n):\n            s=s+(((d-x[j])*(d-x[j]))+((c-y[j])*(c-y[j])))\n        l.append(s)\n        \n        \n    v= min(l)\n    for o in range(0,n):\n        if(l[o]==v):\n            print(x[o],y[o])\n            break\n                \n        \n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475749,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9094317",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "divyajomi01",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973500,
        "updated_at_ms": 1599973500,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:32:41.544Z",
        "__v": 0
    },
    {
        "_id": "5f607c33a103c413d4ade410",
        "submission_code": "from sys import stdin,stdout\n\nt = int(stdin.readline())\nfor _ in range(t):\n    n,m = stdin.readline().split()\n    n , m = int(n),int(m)\n    grid = []\n    dp = []\n    path = []\n    for i in range(n):\n        a = stdin.readline()\n        arr = []\n        k = []\n        k1 = []\n        for j in range(m):\n            arr.append(a[j])\n            k.append(\"\")\n            k1.append(\"\")\n        grid.append(arr)\n        dp.append(k)\n        path.append(k1)\n    dp[0][0] = grid[0][0]\n    for i in range(1,m):\n        dp[0][i] = dp[0][i-1]+grid[0][i]\n        path[0][i] = path[0][i-1]+'R'\n    for i in range(1,n):\n        dp[i][0] = dp[i-1][0]+grid[i][0]\n        path[i][0] = path[i-1][0]+'D'\n    for i in range(1,n):\n        for j in range(1,m):\n            val1 = dp[i][j-1]+grid[i][j]\n            val2 = dp[i-1][j]+grid[i][j]\n            if(val1<=val2):\n                dp[i][j] = val1\n                path[i][j] = path[i][j-1]+'R'\n            else:\n                dp[i][j] = val2\n                path[i][j] = path[i-1][j]+'D'\n    print(\"Case #{}: \".format(_+1)+str(path[-1][-1]))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475745,
        "contest_id": "115291",
        "problem_id": "170877",
        "site_user_id": "4312249",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733003CSEA",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "stringpath",
        "problem_view_link": "stringpath",
        "created_at_ms": 1599973489,
        "updated_at_ms": 1599973489,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:32:51.167Z",
        "__v": 0
    },
    {
        "_id": "5f607c3da103c413d4ade411",
        "submission_code": "import math\ndef argmin(l,x,y):\n    res=0\n    for i in range(len(l)):\n        res=res+math.pow((l[i][0]-x),2)+math.pow((l[i][1]-y),2)\n    return res\nT=int(input())\nres_array=[]\nfor i in range (T):\n    N=int(input())\n    l=[]\n    \n    for i in range(N):\n        a,b=map(int,input().split())\n        l.append([a,b])\n    k=argmin(l,l[0][0],l[0][1])\n    r=[l[0][0],l[0][1]]\n    for i in range(N):\n        k1=argmin(l,l[i][0],l[i][1])\n        \n        if(k>k1):\n            k=k1\n            r=[l[i][0],l[i][1]]\n    res_array.append(r)\nfor i in range(len(res_array)):\n    print(res_array[i][0],end=\" \")\n    print(res_array[i][1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475735,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9380840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "trishulmabbu",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973454,
        "updated_at_ms": 1599973454,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:33:01.718Z",
        "__v": 0
    },
    {
        "_id": "5f607c44a103c413d4ade412",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n    public static int f(int k,int[][] a)\n    {\n        int x=a[k][0],y=a[k][1],sum=0;;\n        for(int i=0;i<a.length;i++)\n        {\n            if(i==k)\n                continue;\n            sum=sum+(x-a[i][0])*(x-a[i][0])+(y-a[i][1])*(y-a[i][1]);\n        }\n        return sum;\n    }\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        Scanner sc=new Scanner(System.in);\n        int N=sc.nextInt();\n        for(int i=0;i<N;i++)\n        {\n            int n=sc.nextInt();\n            int[][] a=new int[n][2];\n            for(int j=0;j<n;j++)\n            {\n                a[j][0]=sc.nextInt();\n                a[j][1]=sc.nextInt();\n            }\n            int[][] sum=new int[n][2];\n            for(int i1=0;i1<n;i1++)\n            {\n                sum[i1][0]=i1;\n                sum[i1][1]=f(i1,a);\n            }int max=1000,l=0;\n            for(int i1=0;i1<n;i1++)\n            {\n                if(max>sum[i1][1])\n                {\n                    max=sum[i1][1];\n                    l=i1;\n                }\n            }\n            System.out.println(a[l][0]+\" \"+a[l][1]);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475733,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636583",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java",
        "site_user_handle": "ramyasreesai2000",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973447,
        "updated_at_ms": 1599973447,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:33:08.368Z",
        "__v": 0
    },
    {
        "_id": "5f607c4ea103c413d4ade413",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include<cmath>\nusing namespace std;\nbool coprime(int a,int b)\n{\n    int flag=0;\n    int n = min(a,b);\n    for(int i=2;i<=n;i++)\n    {\n        if(a%i==0 && b%i==0)\n        {\n            flag=1;\n            break;\n        }\n    }\n    if(flag) return false;\n    else return true;\n}\n\nvector<int> factor(long long int n)\n{\n    vector<int> res;\n    for(int i=1;i<=n;i++)\n    {\n        if(n%i==0)\n            res.push_back(i);\n    }\n    return res;\n}\n\nlong long int factorial(int n)\n{\n    long long int res=1;\n    for(int i=1;i<=n;i++)\n        res*=i;\n    return res;\n}\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int q,n;\n    cin>>q;int c=0,arsize;\n    vector<int> ar;\n    long long fact;\n    while(q-->0)\n    {\n        cin>>n;\n        fact = factorial(n);\n        ar = factor(fact);\n        arsize = ar.capacity();\n        //cout<<\"arsize:\"<<arsize<<endl;\n        for(int i=0,j=(arsize-1);i<j;i++,j--)\n        {\n        //    cout<<i<<\" \"<<j<<endl;\n            if(coprime(ar[i],ar[j]))\n                c++;\n        }\n        cout<<c<<endl;\n        c=0;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475732,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8732760",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "ayushsngh20",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973441,
        "updated_at_ms": 1599973441,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:33:18.919Z",
        "__v": 0
    },
    {
        "_id": "5f607c58a103c413d4ade414",
        "submission_code": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    sum=0\n    sumx=0\n    sumy=0\n    l=[]\n    for i in range(n):\n        l.append([int(j) for j in input().split()])\n        sum+=(l[-1][0]**2+l[-1][1]**2)\n        sumx+=l[-1][0]\n        sumy+=l[-1][1]\n    min=-1\n    ans=-1\n    for i in range(n):\n        temp=sum+((n-2)*(l[i][0]**2+l[i][1]**2))-2*(l[i][0]*(sumx-l[i][0])+l[i][1]*(sumy-l[i][1]))\n        if(ans==-1 or temp<min):\n            min=temp\n            ans=i\n    print(*l[ans])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475731,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5298342",
        "submission_status": "Accepted",
        "submission_language": "python3",
        "site_user_handle": "18pa1a0511",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973441,
        "updated_at_ms": 1599974641,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:33:28.030Z",
        "__v": 0
    },
    {
        "_id": "5f607c60a103c413d4ade415",
        "submission_code": "from math import *\nl=[0,1]\nfor i in range(2,1000000):\n    t=l[i-1]\n    l.append((t*i)%1000000007)\ndef pairs(n):  \n    count=0\n    for i in range(1, int(sqrt(n))+1): \n        if n % i == 0: \n            if(gcd(i,n//i)==1):\n                count+=1\n    return count\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    print(pairs(l[n]))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475724,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2923379",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "mahesh_8842",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973422,
        "updated_at_ms": 1599974622,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:33:36.324Z",
        "__v": 0
    },
    {
        "_id": "5f607c6aa103c413d4ade416",
        "submission_code": "import math\nfor _ in range(int(input())):\n    n=int(input())\n    if n==1:\n            print(1)\n    elif n==2:\n            print(1)     \n    else:    \n        n=math.factorial(n)\n        m=round(n**0.5)\n        cnt=0\n        for i in range(2,m+1):\n            if n%i==0:\n                t=n//i\n                c=i\n                if math.gcd(c,t)==1:\n                    cnt+=1\n        print(cnt+1)             ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475715,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9623064",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "srikanthsupraja1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973381,
        "updated_at_ms": 1599973381,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:33:46.153Z",
        "__v": 0
    },
    {
        "_id": "5f607c70a103c413d4ade417",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    int t;\n    cin>>t;\n    while(t--){\n        long long n;\n        cin>>n;\n        long long i,j,x[n],y[n],f[n],min=100005,min1=10000000;\n        for(i=0;i<n;i++){\n            cin>>x[i]>>y[i];\n        }\n        for(i=0;i<n;i++){\n            f[i] = 0;\n        }\n        for(i=0;i<n;i++){\n            for(j=0;j<n;j++){\n                f[i] += (x[i]-x[j])*(x[i]-x[j]) + (y[i]-y[j])*(y[i]-y[j]); \n            }\n            // cout<<f[i]<<endl;\n            if(min1>f[i]){\n                min1 = f[i];\n                min = i;\n            }\n        }\n        cout<<x[min]<<\" \"<<y[min]<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475706,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6986492",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp",
        "site_user_handle": "drakcoder991",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973362,
        "updated_at_ms": 1599973362,
        "misc_notes": "[\"Segmentation Fault\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:33:52.400Z",
        "__v": 0
    },
    {
        "_id": "5f607c76a103c413d4ade418",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int[] a=new int[n];\n            int[] b=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[j]=sc.nextInt();\n            }\n            int f1=0,x=0,y=0,k=0;\n            while(k<n)\n            {\n                int f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+((a[k]-a[j])*(a[k]-a[j]))+((b[k]-b[j])*(b[k]-b[j]));\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                k++;\n            }\n            System.out.println(x+\" \"+y);\n        }\n        \n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475699,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973342,
        "updated_at_ms": 1599974542,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:33:58.751Z",
        "__v": 0
    },
    {
        "_id": "5f607c7ea103c413d4ade419",
        "submission_code": "for t in range(int(input())):\n    n=int(input())\n    l=[]\n    for i in range(n):\n        a=list(map(int,input().split()))\n        l.append(a)\n    l.sort()\n    if(n%2==1):\n        print(*l[n//2])\n    else:\n        m1,m2=0,0\n        for i in range(n):\n            m1=m1+((l[n//2][0]-l[i][0])**2+(l[n//2][1]-l[i][0])**2)\n        for i in range(n):\n            m2=m2+((l[n//2 -1 ][0]-l[i][0])**2+(l[n//2 -1][1]-l[i][0])**2)\n        if(m1<m2):\n            print(*l[n//2])\n        elif(m2<m1):\n            print(*l[n//2 -1])\n        else:\n            print(*l[n//2 -1])\n            \n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475685,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4684377",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "karthikreddy_10",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973307,
        "updated_at_ms": 1599973307,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:34:06.017Z",
        "__v": 0
    },
    {
        "_id": "5f607c87a103c413d4ade41a",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) throws IOException {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int T = Integer.parseInt(br.readLine().trim());\n        while(T-- >0){\n            int n = Integer.parseInt(br.readLine().trim());\n            int min = Integer.MAX_VALUE,minx=0,miny=0;\n            for(int i=1;i<=n;i++){\n                String s[] = br.readLine().trim().split(\"\\\\s+\");\n                int x = Integer.parseInt(s[0]);\n                int y = Integer.parseInt(s[1]);\n                int res=0;\n                for(int j=1;j<=n;j++){\n                    res = res + (int)Math.pow((x-j),2) + (int)Math.pow((y-j),2);\n                }\n                if(res < min){\n                    min = res;\n                    minx = x;\n                    miny = y;\n                }\n            }\n            System.out.println(minx+\" \"+miny);\n        }\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475679,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5773737",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "lakshmimanasamvs",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973299,
        "updated_at_ms": 1599973299,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T08:34:15.440Z",
        "__v": 0
    },
    {
        "_id": "5f607c8da103c413d4ade41b",
        "submission_code": "def fin(n):\n    def gcd(p,q):\n        while(q !=0):\n            p,q=q,p%q\n        return p\n\n    fact=1\n    for i in range(1,n+1):\n        fact=fact*i\n    #print(fact)\n    l=[]\n    for i in range(1, fact+1):\n        if(fact%i==0):\n            l.append(i)\n    pairs=[]\n    j=len(l)-1\n    for i in range(int(len(l)/2)):\n        p=[]\n        p.append(l[i])\n        p.append(l[j])\n        j=j-1;\n        pairs.append(p)\n#print(pairs)\n    count=0\n    for i in range(len(pairs)):\n        if(gcd(pairs[i][0],pairs[i][1])==1):\n            count=count+1\n    return count      \n   # print(pairs[i][0],pairs[i][1])\nt=int(input())\nf=[]#final list\nfor i in range(t):\n    n=int(input())\n    f.append(fin(n))\nfor i in range(len(f)):\n    print(f[i]%(pow(10,9)+7))\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475676,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "8908111",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "chandana2k1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973293,
        "updated_at_ms": 1599973293,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:34:21.294Z",
        "__v": 0
    },
    {
        "_id": "5f607c95a103c413d4ade41c",
        "submission_code": "t=int(input())\nfor k in range(t):\n    n=int(input())\n    xi=[]\n    yi=[]\n    temp=0\n    sum=0\n    cordinates=[]\n    for i in range(n):\n        t1,t2=map(int,input().split())\n        xi.append(t1)\n        yi.append(t2)\n    for i in range(n):\n        temp=0\n        for j in range(n):\n            temp=temp+pow((xi[i]-xi[j]),2)+pow((yi[i]-yi[j]),2)\n        if i==0:\n            sum=temp\n            cordinates=[xi[i],yi[i]]\n        else:\n            if sum>temp:\n                sum=temp\n                cordinates=[xi[i],yi[i]]\n            elif sum==temp:\n                if xi[i]+yi[i]<cordinates[0]+cordinates[1]:\n                    cordinates=[xi[i],yi[i]]\n                elif xi[i]+yi[i]==cordinates[0]+cordinates[1]:\n                    if xi[i]<cordinates[0]:\n                        cordinates=[xi[i],yi[i]]\n    print(cordinates[0],cordinates[1])\n            ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475675,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4674964",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "160218733110CSEB",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973290,
        "updated_at_ms": 1599973290,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:34:29.362Z",
        "__v": 0
    },
    {
        "_id": "5f607c9da103c413d4ade41d",
        "submission_code": "T=int(input())\nimport math\ndef isPrime(n) : \n    if (n <= 1) : \n        return False\n    if (n <= 3) : \n        return True\n    if (n % 2 == 0 or n % 3 == 0) : \n        return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\nfor _ in range(T):\n    count=0\n    n=int(input())\n    if(n>=2):count+=1\n    for i in range(3,n+1,2):\n        if(isPrime(i)):\n            count+=1\n    print((2**(count-1)%((10**9)+7)))\n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475672,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6986737",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vegishanmukh7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973286,
        "updated_at_ms": 1599973286,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:34:37.762Z",
        "__v": 0
    },
    {
        "_id": "5f607ca4a103c413d4ade41e",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n \ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef long double ld;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<ii> vii;\ntypedef pair<ll,ll> pll;\ntypedef vector<vector<ii>> vvii;\n \n#define F first\n#define S second\n#define PB push_back\n#define MP make_pair\n#define EPS 1e-9\n#define INF 1000000\n#define MOD 1000000007\n#define PI 3.14159265358979323846\n\nbitset <INF+1> prime;\nvector<ll> primesVec;\n\nll modpow(ll x, ll n, ll m) {\n\n    if (n == 0) return 1%m;\n    ll u = modpow(x,n/2,m);\n    u = (u*u)%m;\n    if (n%2 == 1) u = (u*x)%m;\n    return u;\n}\n\n//https://www.geeksforgeeks.org/modular-exponentiation-power-in-modular-arithmetic/\nll power(ll x, ll y, ll p) \n{ \n    ll res = 1;      // Initialize result \n  \n    x = x % p;  // Update x if it is more than or  \n                // equal to p \n  \n    if (x == 0) return 0; // In case x is divisible by p; \n  \n    while (y > 0) \n    { \n        // If y is odd, multiply x with result \n        if (y & 1) \n            res = (res*x) % p; \n  \n        // y must be even now \n        y = y>>1; // y = y/2 \n        x = (x*x) % p;   \n    } \n    return res; \n}\n\nvoid seive()\n{\n  prime.set();\n  prime[0]=0;\n  prime[1]=0;\n\n  for(ll i=2;i<=INF;i++)\n  {\n    if(prime[i])\n    {\n      for(ll j=i*i;j<=INF;j+=i)\n        prime[j]=0;\n      primesVec.push_back(i);\n    }\n  }\n}\n\n\nint main()\n{    \n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n\n    int t,n;\n    cin>>t;\n    seive();\n    while(t--)\n    {\n        cin>>n;\n        if(n==1)\n            cout<<\"0\"<<endl;\n        else\n        {\n            int m = upper_bound(primesVec.begin(),primesVec.end(),n) - primesVec.begin();\n            //cout<<m<<\" \"<<primesVec.size()<<endl;\n            cout<<power(2,m-1,MOD)<<endl;\n        }\n    }\n\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475669,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5369834",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "rizwan_b170829cs",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973279,
        "updated_at_ms": 1599974479,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:34:44.216Z",
        "__v": 0
    },
    {
        "_id": "5f607caea103c413d4ade41f",
        "submission_code": "t= int(input())\n\nfor i in range(t):\n    N=int(input())\n    X=[]\n    for j in range(N):\n        X.append(list(map(int,input().split())))\n    \n    O=[]\n    for j in range(N):\n        O1=0\n        for k in range(N):\n            O1+=(((X[j][0]-X[k][0])**2)+((X[j][1]-X[k][1])**2))\n        O.append(O1)\n    y=min(O)\n    sol=O.index(y)\n    print(X[sol][0],X[sol][1])\n                \n                \n        \n        \n    \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475666,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5235288",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anudeep_kalitkar",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973270,
        "updated_at_ms": 1599975670,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:34:54.760Z",
        "__v": 0
    },
    {
        "_id": "5f607cb9a103c413d4ade420",
        "submission_code": "#include<bits/stdc++.h>\n#define ll           long long int\n#define pb           push_back\n#define F            first\n#define S            second\nusing namespace std;\nconst int mod=1e9+7;\nint pw(int a,int p)\n{\n    int res=1;\n    while(p>0)\n    {\n        if(p&1)\n            res=(res*1ll*res)%mod;\n        a=(a*1ll*a)%mod;\n    }\n    return res;\n}\nll ans[int(1e6+1)];\nvoid solve()\n{\n    int n;\n    cin>>n;\n    cout<<ans[n]<<\"\\n\";\n}\nvoid pre()\n{\n    int prime[int(1e6+1)]={0};\n    bool fac[int(1e6+1)]={0};\n    for(int i=2;i<=1e6;++i)\n    {\n        if(!prime[i])\n        {\n            prime[i]=i;\n            for(int j=i;j<=1e6;j+=i)\n            {\n                if(!prime[j])\n                    prime[j]=i;\n            }\n        }\n    }\n    ans[1]=0;\n    ans[2]=1;\n    ll x=1;\n    for(int i=3;i<=1e6;++i)\n    {\n        if(prime[i]==i)\n            ans[i]=(ans[i-1]*2ll)%mod;\n        else\n            ans[i]=(ans[i-1]);\n    }\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    pre();\n    int t;\n    cin>>t;\n    while(t--)\n        solve();\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475664,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "9693257",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "sg0071729",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973268,
        "updated_at_ms": 1599973268,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:35:05.203Z",
        "__v": 0
    },
    {
        "_id": "5f607cbfa103c413d4ade421",
        "submission_code": "for i in range(int(input())):\n    n=int(input())\n    x=[]\n    y=[]\n    for i in range(n):\n        x1,y1=map(int,input().split())\n        x.append(x1)\n        y.append(y1)\n    sum1=[]\n    sum2=[]\n    for i in range(len(x)):\n        d=x[i]\n        sum11=0\n        for j in range(len(x)):\n            sum11+=((x[i]-x[j])*(x[i]-x[j]))\n        sum1.append([sum11,d])\n    for i in range(len(y)):\n        d=y[i]\n        sum21=0\n        for j in range(len(y)):\n            sum21+=((y[i]-y[j])*(y[i]-y[j]))\n        sum2.append([sum21,d])\n    min1=10000000000\n    a1=[]\n    a2=[]\n    for i,j in zip(sum1,sum2):\n        sum3=i[0]+j[0]\n        if(min1>sum3):\n            min1=sum3\n        a1.append([sum3,[i[1],j[1]]])\n    for i in a1:\n        if(i[0]==min1):\n            a2.append(i[1])\n    print(*min(a2))       \n\n             \n                    \n            \n            ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475659,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5796840",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "_unstable_atom",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973249,
        "updated_at_ms": 1599973249,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Runtime Error\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:35:11.377Z",
        "__v": 0
    },
    {
        "_id": "5f607cc9a103c413d4ade422",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <climits>\nusing namespace std;\n#define ll long long int\nstruct cor{\n    ll x,y;\n};\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    ll n,t,x1,y1;\n    unsigned long long int sum,mi;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cor a[n];\n        mi=INT_MAX;\n        for(ll i=0;i<n;i++)\n            cin>>a[i].x>>a[i].y;\n        for(ll i=0;i<n;i++)\n        {\n            sum=0;\n            for(ll j=0;j<n;j++)\n            {\n                sum+=pow((a[i].x-a[j].x),2) + pow((a[i].y-a[j].y),2);\n            }\n            if(mi>sum)\n            {\n                mi=sum;\n                x1=a[i].x;\n                y1=a[i].y;\n            }\n        }\n        printf(\"%lld %lld\\n\",x1,y1);\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475654,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5413147",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "SNV18H51A05B2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973231,
        "updated_at_ms": 1599974431,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:35:21.477Z",
        "__v": 0
    },
    {
        "_id": "5f607cd2a103c413d4ade423",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define sz(x) (int)(x).size()\n#define all(x) x.begin(), x.end()\n#define itn int\n \nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\nconst int mod = 1000000007,maxn=1000001;\nint spf[1000001];\nll powmod(ll a,ll b) {ll res=1; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}\n\n\nvoid init(){\n    for(int i=0;i<maxn;++i) spf[i] = i;\n    for(int i=2;i<maxn;++i){\n        if(spf[i] == i){\n            for(int p=2*i;p<maxn;p+=i){\n                if(spf[p]>i) spf[p] = i;\n            }\n        }\n    }\n}\n\nint main(){\n    ios_base::sync_with_stdio(false); cin.tie(NULL); \n    int t;\n    cin>>t;\n    init();\n    int dp[maxn],pre[maxn] = {0}; dp[1] = 0; dp[2] = 1; pre[2]=1;\n    for(int i=3;i<maxn;++i){\n        int j=i,cnt=0;\n        while(spf[j]!=1){\n            if(pre[spf[j]] == 0){ cnt++; pre[spf[j]] = 1; }\n            int x = spf[j];\n            while(j%x == 0) j/=x;\n        }\n        dp[i] = (dp[i-1]*1ll*powmod(2,cnt))%mod;\n    }\n    while(t--){\n        int n;\n        cin >> n;\n        cout << dp[n]<<'\\n';\n    }\n  return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475631,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6937721",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "ak821",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973171,
        "updated_at_ms": 1599973171,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:35:30.090Z",
        "__v": 0
    },
    {
        "_id": "5f607cdaa103c413d4ade424",
        "submission_code": "inp=int(input())\nfor i in range(inp):\n    a=int(input())\n    b=[]\n    for i in range(a):\n        c=list(map(int,input().split()))\n        b.append(c)\n    x1=[]\n    y1=[]\n    for i in range(len(b)):\n        x1.append(b[i][0])\n        y1.append(b[i][1])\n    ans=[]\n    for i in range(a):\n        x=b[i][0]\n        y=b[i][1]\n        f=0\n        for j in range(a):\n            g=((x-x1[j])**2)+((y-y1[j])**2)\n            f=f+g    \n        ans.append(f)\n    h1=ans.index(min(ans))\n    print(*(b[h1]))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475630,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6619310",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Rahul_Sripada",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973170,
        "updated_at_ms": 1599973170,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:35:38.894Z",
        "__v": 0
    },
    {
        "_id": "5f607ce2a103c413d4ade425",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\n    Scanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int[] a=new int[n];\n            int[] b=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[j]=sc.nextInt();\n            }\n            int f1=0,x=0,y=0;\n            for(int k=0;k<n;k++)\n            {\n                int f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+((a[k]-a[j])*(a[k]-a[j]))+((b[k]-b[j])*(b[k]-b[j]));\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            System.out.println(x+\" \"+y);\n        }\n        \n    \n    \n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475626,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6636594",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "srujana9645",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973155,
        "updated_at_ms": 1599973155,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:35:46.621Z",
        "__v": 0
    },
    {
        "_id": "5f607ceba103c413d4ade426",
        "submission_code": "import java.io.*;\nimport java.util.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */\nScanner sc=new Scanner(System.in);\n        int t=sc.nextInt();\n        for(int i=0;i<t;i++)\n        {\n            int n=sc.nextInt();\n            int[] a=new int[n];\n            int[] b=new int[n];\n            for(int j=0;j<n;j++)\n            {\n                a[j]=sc.nextInt();\n                b[j]=sc.nextInt();\n            }\n            int f1=0,x=0,y=0;\n            for(int k=0;k<n;k++)\n            {\n                int f2=0;\n                for(int j=0;j<n;j++)\n                {\n                    f2=f2+((a[k]-a[j])*(a[k]-a[j]))+((b[k]-b[j])*(b[k]-b[j]));\n                }\n                if(k==0)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n                else if(f1>f2)\n                {\n                    f1=f2;\n                    x=a[k];\n                    y=b[k];\n                }\n            }\n            System.out.println(x+\" \"+y);\n        }\n    }\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475621,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6637308",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "badiniswetha",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973130,
        "updated_at_ms": 1599973130,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:35:55.585Z",
        "__v": 0
    },
    {
        "_id": "5f607cf4a103c413d4ade427",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n   long long t;\n    cin>>t;\n    while(t--){\n        long long  n;\n        cin>>n;\n     long long a[2][n];\n         map<long long ,long long> m;\n        for(int i=0;i<n;i++)\n        {cin>>a[0][i]>>a[1][i];\n         m[0]=m[0]+1;\n         m[1]=m[1]-(2*a[0][i]);\n         m[2]++;\n         m[3]=m[3]-(2*a[1][i]);\n         m[4]+=a[0][i]*a[0][i]+a[1][i]*a[1][i];\n        }\n        long long ans=LONG_MAX;\n        long x,y;\n        for(int i=0;i<n;i++){\n              long long a1=m[0]*a[0][i]*a[0][i]+m[1]*a[0][i]+m[2]*a[1][i]*a[1][i]+m[3]*a[1][i]+m[4];\n            if(ans>a1){\n                  ans=min(ans,a1);\n                x=a[0][i],y=a[1][i];\n            }\n            else if(ans==a1){\n               if(x>a[0][i]){\n                   x=a[0][i];y=a[1][i];\n               }  \n            }\n          \n                \n        }\n        cout<<x<<\" \"<<y<<endl;\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475617,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4724102",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "18H51A05C3",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973128,
        "updated_at_ms": 1599973128,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:36:04.491Z",
        "__v": 0
    },
    {
        "_id": "5f607cfba103c413d4ade428",
        "submission_code": "from math import * \ndef check(n) : \n    c = 0\n    for i in range(2, int(sqrt(n)) + 1) : \n        if n % i == 0 : \n            if gcd(i, n // i) == 1 : \n                c += 1\n    print((c+1)%(10**9+7)) \n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    check(factorial(n))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475609,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4671628",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "suhrusai",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973111,
        "updated_at_ms": 1599973111,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:36:11.762Z",
        "__v": 0
    },
    {
        "_id": "5f607d02a103c413d4ade429",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n\n// https://atcoder.jp/posts/518\n// #include <atcoder/convolution>\n// #include <atcoder/dsu>\n// #include <atcoder/fenwicktree>\n// #include <atcoder/lazysegtree>\n// #include <atcoder/math>\n// #include <atcoder/maxflow>\n// #include <atcoder/mincostflow>\n// #include <atcoder/modint>\n// #include <atcoder/scc>\n// #include <atcoder/segtree>\n// #include <atcoder/string>\n// #include <atcoder/twosat>\n// using namespace atcoder;\n\nusing ld = long double;\n#define int long long\n\n#define F first\n#define S second\n#define s(x) set<x>\n#define um(x, y) unordered_map<x, y>\n#define m(x, y) map<x, y>\n#define p(x, y) pair<x, y>\n#define v(x) vector<x>\n#define min_heap(t) priority_queue<t, vector<t>, greater<t>>\n#define max_heap(t) priority_queue<t>\n\n#define eb emplace_back\n#define mp make_pair\n#define bs binary_search\n#define lb lower_bound\n#define ub upper_bound\n\n#define all(v) v.begin(), v.end()\n#define ss(v) stable_sort(all(v))\n#define fori(i, a, b) for (int i = a; i <= b; i++)\n#define rofi(i, a, b) for (int i = a; i >= b; --i)\n#define scn(v1)        \\\n    for (auto &x : v1) \\\n        cin >> x;\n#define deb(x) cout << #x << \"=\" << x << endl;\n#define R(x) reverse(all(x));\n\n#define FILE_READ_IN freopen(\"input.txt\", \"r\", stdin);\n#define FILE_READ_OUT freopen(\"output.txt\", \"w\", stdout);\n\n#define fastio                    \\\n    ios_base::sync_with_stdio(0); \\\n    cin.tie(0);                   \\\n    cout.tie(0);\n#define stprs(x) cout << fixed << setprecision(x);\n\nconst char nl = '\\n';\nconst char sp = ' ';\nconst int mod1 = 1e9 + 7;\nconst int mod2 = 998244353;\nconst ld PI = acos(-1);\n\n#define debug cerr\n#define name(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\ntemplate<class A>\nostream& operator << (ostream& out, const set<A> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            out << \", \";\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<class A>\nostream& operator << (ostream& out, const vector<A> &a) {\n    // out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            // out << \", \";\n            out << ' ';\n        out << *it;\n    }\n    return out;\n    return out << \"]\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const pair<A, B> &a) {\n    return out <<  \"(\" << a.first << \", \" << a.second << \")\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\ntemplate<class A, class B>\nostream& operator << (ostream& out, const unordered_map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<typename... T>\nvoid read(T&... args) {\n    ((cin >> args), ...);\n}\n\ntemplate<typename... T>\nvoid print(T... args) {\n    ((cout << args), ...);\n}\n\n// variables and consts\nconst int N = 10000000;\nint lp[N+1];\nvector<int> pr;\n// -- variables and consts --\n\nvoid primes() {\n    for (int i=2; i<=N; ++i) {\n        if (lp[i] == 0) {\n            lp[i] = i;\n            pr.push_back (i);\n        }\n        for (int j=0; j<(int)pr.size() && pr[j]<=lp[i] && i*pr[j]<=N; ++j)\n            lp[i * pr[j]] = pr[j];\n    }\n}\n\nint upb(int n) {\n    int l = 0;\n    int h = pr.size() - 1ll;\n    int ans;\n    while(l <= h) {\n        int mid = (l+h) / 2;\n        if(pr[mid] == n) return mid;\n        if(pr[mid] > n) {\n            ans = mid;\n            h = mid-1;\n        } else {\n            l = mid+1;\n        }\n    }\n    return ans;\n}\n\nint po(int a) {\n    if(a == 1) {\n        return 2ll;\n    } else if(a == 0) {\n        return 1ll;\n    }\n    int p = po(a/2);\n    p *= p;\n    p %= mod1;\n    if(a&1) {\n        p *= 2;\n        if(p >= mod1) {\n            p -= mod1;\n        }\n    }\n    return p;\n}\n\nvoid solve(void) {\n    int n;\n    read(n);\n    if(n == 1) {\n        print(\"1\\n\");\n        return;\n    }\n    int k = upb(n);\n    // debug << name(k);\n    while(pr[k] > n) -- k;\n    print(po(k), nl);\n}\n\nint32_t main(void) {\n    fastio\n    int __ = 1;\n    primes();\n    read(__);\n    while (__--) {\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475608,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5078334",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "the_pythor",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973108,
        "updated_at_ms": 1599974308,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T08:36:18.626Z",
        "__v": 0
    },
    {
        "_id": "5f607d09a103c413d4ade42a",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define ll  long long int\n#define MAXN 1000020\n#define mod 1000000007\n#define pb push_back\n#define endl    '\\n'\n \nll fun(ll x,ll y){\n    ll ans=1;\n    while(y>0){\n        if(y%2==1){\n            ans=(ans*1ll*x)%mod;\n        }\n        y=y/2;\n        x=(x*1ll*x)%mod;\n    }\n    return ans;\n}\n \nint main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    ll a[MAXN],i,j;\n    memset(a,0,sizeof(a));\n    for(i=2;i<MAXN;i++){\n        if(a[i]==0){\n            for(j=2*i;j<MAXN;j+=i){\n                a[j]=1;\n            }\n        }\n    }\n    vector<ll> vi;\n    for(i=2;i<MAXN;i++){\n        if(a[i]==0){\n            vi.pb(i);\n        }\n    }\n    // for(auto x:vi){\n    //     cout<<x<<\" \";\n    // }\n    // cout<<endl;\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n;\n        cin>>n;\n        ll x=upper_bound(vi.begin(),vi.end(),n)-vi.begin();\n        ll p=2;\n        ll ans=fun(p,x-1);\n        cout<<ans<<endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475607,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3651417",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973106,
        "updated_at_ms": 1599974306,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T08:36:25.262Z",
        "__v": 0
    },
    {
        "_id": "5f607d0fa103c413d4ade42b",
        "submission_code": "import math\ndef gcd(a,b): \n    if a==0 or b==0: \n        return 0\n    if a==b:\n        return a \n    if a>b:  \n        return gcd(a-b,b) \n    return gcd(a,b-a)\ndef coprime(a,b):  \n    if gcd(a,b)==1:\n        return True\n    else: \n        return False\ndef primeFactors(n) : \n    i=1\n    z=[]\n    while i<=n : \n        if n%i==0: \n            z.append(i) \n        i=i+1\n    p=[]\n    for i in range(len(z)):\n        if n//z[i] in z and coprime(z[i],n//z[i]) and z[i] not in p:\n            p.append(n//z[i])\n            p.append(z[i])\n    print(len(p)//2)\n\ntest=int(input())\nfor _ in range(test):\n    n=int(input())\n    primeFactors(math.factorial(n))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475599,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4622965",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vision01",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973096,
        "updated_at_ms": 1599973096,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:36:31.627Z",
        "__v": 0
    },
    {
        "_id": "5f607d15a103c413d4ade42c",
        "submission_code": "////////////////////////////////////////////////////\n//                                                //\n//  For her who keeps the fire kindling in me...  //\n//                                                //\n////////////////////////////////////////////////////\n\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileOutputStream;\nimport java.io.IOException; \nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\n// import java.util.Scanner;\n// import java.util.Arrays;\n// import java.util.ArrayList;\n// import java.util.Collections; \n// import java.util.StringTokenizer;\nimport java.util.*;\nimport java.lang.Math;\nimport java.sql.Array;\nimport java.awt.Point;                            \n\nimport java.awt.geom.*;\n\npublic class Solution{\n\n    static class Node{\n        int x;\n        int rank;\n        int level;\n        int fnodecount;\n        char type;\n\n        ArrayList<Node> children = new ArrayList<Node>(); \n\n        public Node(int x){\n            this.x = x;\n            // this.rank = 0;\n            this.type = 'f';\n        }\n    }\n\n\n\n    static class DisjointUnionSets { \n        int[] rank, parent, ele_count; \n        int n; \n        \n        // Constructor \n        public DisjointUnionSets(int n) \n        { \n            rank = new int[n]; \n            parent = new int[n];\n            ele_count = new int[n];\n            this.n = n; \n            makeSet(); \n        } \n        \n        // Creates n sets with single item in each \n        void makeSet() \n        { \n            for (int i = 0; i < n; i++) { \n                // Initially, all elements are in \n                // their own set. \n                parent[i] = i; \n                ele_count[i] = 1;\n            } \n        } \n        \n        // Returns representative of x's set \n        int find(int x) \n        { \n            // Finds the representative of the set \n            // that x is an element of \n            if (parent[x] != x) { \n                // if x is not the parent of itself \n                // Then x is not the representative of \n                // his set,\n\n                parent[x] = find(parent[x]); \n                \n                // so we recursively call Find on its parent \n                // and move i's node directly under the \n                // representative of this set \n            } \n        \n            return parent[x]; \n        }\n\n\n\n        int setSize(int x){\n            int par = find(x);\n            return ele_count[par];\n        }\n        \n\n\n        // Unites the set that includes x and the set \n        // that includes x \n        void union(int x, int y) \n        { \n            // Find representatives of two sets \n            int xRoot = find(x), yRoot = find(y); \n        \n            // Elements are in the same set, no need \n            // to unite anything. \n            if (xRoot == yRoot) \n                return; \n        \n            // If x's rank is less than y's rank \n            if (rank[xRoot] < rank[yRoot]){ \n        \n                // Then move x under y  so that depth \n                // of tree remains less \n                parent[xRoot] = yRoot;\n            \n                ele_count[yRoot] = ele_count[yRoot] + ele_count[xRoot];\n        \n            // Else if y's rank is less than x's rank \n            }else if (rank[yRoot] < rank[xRoot]) {\n        \n                // Then move y under x so that depth of \n                // tree remains less \n                parent[yRoot] = xRoot; \n                ele_count[xRoot] = ele_count[yRoot] + ele_count[xRoot];\n            \n            } else // if ranks are the same \n            { \n                // Then move y under x (doesn't matter \n                // which one goes where) \n                parent[yRoot] = xRoot; \n        \n                ele_count[xRoot] = ele_count[yRoot] + ele_count[xRoot];\n\n                // And increment the result tree's \n                // rank by 1 \n                rank[xRoot] = rank[xRoot] + 1; \n            } \n        } \n    } \n\n\n    static long power(long x, long y, long p) \n    { \n        // Initialize result \n        long res = 1l;      \n        \n        // Update x if it is more   \n        // than or equal to p \n        x = x % p;  \n    \n        while (y > 0) \n        { \n            // If y is odd, multiply x \n            // with result \n            if((y & 1)==1) \n                res = (res * x) % p; \n    \n            // y must be even now \n            // y = y / 2 \n            y = y >> 1;  \n            x = (x * x) % p;  \n        } \n        return res; \n    } \n\n\n\nstatic int countGreater(int arr[], int n, int k) \n{ \nint l = 0; \nint r = n - 1; \n\n// Stores the index of the left most element \n// from the array which is greater than k \nint leftGreater = n; \n\n// Finds number of elements greater than k \nwhile (l <= r) { \n    int m = l + (r - l) / 2; \n\n    // If mid element is greater than \n    // k update leftGreater and r \n    if (arr[m] > k) { \n        leftGreater = m; \n        r = m - 1; \n    } \n\n    // If mid element is less than \n    // or equal to k update l \n    else\n        l = m + 1; \n} \n\n// Return the count of elements greater than k \nreturn (n - leftGreater); \n} \n\n\n\nstatic int countLessEqual(int arr[], int n, int k) \n{ \nint l = 0; \nint r = n - 1; \n\n// Stores the index of the left most element \n// from the array which is greater than k \nint leftGreater = n; \n\n// Finds number of elements greater than k \nwhile (l <= r) { \n    int m = l + (r - l) / 2; \n\n    // If mid element is greater than \n    // k update leftGreater and r \n    if (arr[m] > k) { \n        leftGreater = m; \n        r = m - 1; \n    } \n\n    // If mid element is less than \n    // or equal to k update l \n    else\n        l = m + 1; \n} \n\n// Return the count of elements greater than k \nreturn (leftGreater); \n} \n\n\npublic static void main(String args[]){\n    try{\n        // FastReader s = new FastReader();\n        Scanner s = new Scanner(System.in);\n        BufferedWriter w = new BufferedWriter(new OutputStreamWriter(System.out));\n        int i, q, j, k, x, y, t, n, ind, count, diff, key, l, r, a, b, size, Pairer, max, sec_max, minglob, minloc, beg, end, begl, endr, ld, up, down, maxele, minele, case_count;\n        long ans, sqrt, sum, maxup, maxdown, m, X, Y, Q, MOD, lx, ly, sqsum;//, sum2;\n        boolean flag, flag2;\n        boolean l2r;\n\n        float quo;\n\n        double avg;\n        char c, c2;\n        String str;\n\n        t = s.nextInt();\n        for(; t>0; t--){\n            \n            n = s.nextInt();\n            // lx = s.nextLong();\n            // ly = s.nextLong();\n\n\n            long arrx[] = new long[n];\n            long arry[] = new long[n];\n\n            sqsum = 0l; lx=0l; ly = 0l;\n            for(i=0; i<n; i++){\n                arrx[i] = s.nextLong();\n                arry[i] = s.nextLong();\n                // sqsum += (arrx[i]*arrx[i] + arry[i]*arry[i]);\n                lx += arrx[i];\n                ly += arry[i];\n            }\n\n            sum = Long.MAX_VALUE; x=0;\n            for(i=0; i<n; i++){\n                ans = n*(arrx[i]*arrx[i] + arry[i]*arry[i]) - 2*(lx*arrx[i] + ly*arry[i]);\n                if(sum > ans){\n                    sum = ans;\n                    x = i;\n                }\n            }\n\n            \n            // for(i=0; i<n-1; i++){\n                w.write((arrx[x])+\" \"+arry[x]);\n            // }      \n            w.write(\"\\n\");\n                \n        }\n        w.close();\n    }catch(Exception e){\n        e.printStackTrace();\n    }\n}\n}\n                \n                \n//========================================### FAST IO ###=========================================//\nclass FastReader \n{ \n    BufferedReader br; \n    StringTokenizer st; \n\n    public FastReader() \n    { \n        br = new BufferedReader(new\n                    InputStreamReader(System.in)); \n    } \n\n    String next() \n    { \n        while (st == null || !st.hasMoreElements()) \n        { \n            try\n            { \n                st = new StringTokenizer(br.readLine()); \n            } \n            catch (IOException  e) \n            { \n                e.printStackTrace(); \n            } \n        } \n        return st.nextToken(); \n    } \n\n    int nextInt() \n    { \n        return Integer.parseInt(next()); \n    } \n\n    long nextLong() \n    { \n        return Long.parseLong(next()); \n    } \n\n    Double nextDouble() \n    { \n        return Double.parseDouble(next());\n    } \n\n    String nextLine() \n    { \n        String str = \"\"; \n        try\n        { \n            str = br.readLine(); \n        } \n        catch (IOException e) \n        { \n            e.printStackTrace(); \n        } \n        return str;\n    } \n}\n    //====================================================================================================//\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475590,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5369834",
        "submission_status": "Accepted",
        "submission_language": "java8",
        "site_user_handle": "rizwan_b170829cs",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973053,
        "updated_at_ms": 1599973053,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:36:37.668Z",
        "__v": 0
    },
    {
        "_id": "5f607d1ea103c413d4ade42d",
        "submission_code": "t= int(input())\n\nfor i in range(t):\n    N=int(input())\n    X=[]\n    for j in range(N):\n        X.append(list(map(int,input().split())))\n    \n    O=[]\n    for j in range(N):\n        O1=0\n        for k in range(N):\n            O1+=(((X[j][0]-X[k][0])**2)+((X[j][1]-X[k][1])**2))\n        O.append(O1)\n    y=min(O)\n    res = [k for k, j in enumerate(O) if j == y]\n    print(X[res[0]][0],X[res[0]][1])\n    \n                \n                \n        \n        \n    \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475589,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5235288",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anudeep_kalitkar",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973050,
        "updated_at_ms": 1599974250,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:36:46.579Z",
        "__v": 0
    },
    {
        "_id": "5f607d27a103c413d4ade42e",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  \n    int T, N, i, minIndex;\n    long sumx, sumy, squares, tempx, tempy, minF, F;\n    cin >> T;\n    vector<int> cx, cy;\n    while(T--) {\n        cin >> N;\n        sumx=0, sumy=0, squares=0;\n        for(i=0;i<N;i++) {\n            cin >> tempx >> tempy;\n            sumx += tempx;\n            sumy += tempy;\n            squares += (tempx*tempx)+(tempy*tempy);\n            cx.push_back(tempx);\n            cy.push_back(tempy);\n        }\n        minF = INT_MAX;\n        minIndex = 0;\n        for(i=0;i<N;i++) {\n            F = N*(cx[i]*cx[i]+cy[i]*cy[i])+squares-2*(cx[i]*sumx+cy[i]*sumy);\n            if(minF > F) {\n                minF = F;\n                minIndex = i;\n            }\n        }\n        cout << cx[minIndex] <<\" \"<<cy[minIndex]<<\"\\n\";\n        cx.clear();\n        cy.clear();\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475587,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "1082327",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "Tush512",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599973046,
        "updated_at_ms": 1599973046,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:36:55.282Z",
        "__v": 0
    },
    {
        "_id": "5f607d30a103c413d4ade42f",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define ll  long long int\n#define MAXN 1000020\n#define mod 1000000007\n#define pb push_back\n \nll fun(ll x,ll y){\n    ll ans=1;\n    while(y>0){\n        if(y%2==1){\n            ans=(ans*1ll*x)%mod;\n        }\n        y=y/2;\n        x=(x*1ll*x)%mod;\n    }\n    return ans;\n}\n \nint main(){\n    ll a[MAXN],i,j;\n    memset(a,0,sizeof(a));\n    for(i=2;i<MAXN;i++){\n        if(a[i]==0){\n            for(j=2*i;j<MAXN;j+=i){\n                a[j]=1;\n            }\n        }\n    }\n    vector<ll> vi;\n    for(i=2;i<MAXN;i++){\n        if(a[i]==0){\n            vi.pb(i);\n        }\n    }\n    // for(auto x:vi){\n    //     cout<<x<<\" \";\n    // }\n    // cout<<endl;\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n;\n        cin>>n;\n        ll x=upper_bound(vi.begin(),vi.end(),n)-vi.begin();\n        ll p=2;\n        ll ans=fun(p,x-1);\n        cout<<ans<<endl;\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475571,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3651417",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599973005,
        "updated_at_ms": 1599973005,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:37:04.191Z",
        "__v": 0
    },
    {
        "_id": "5f607d39a103c413d4ade430",
        "submission_code": "\n#include<bits/stdc++.h>\nusing namespace std;\n#define IO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define int long long \n#define endl \"\\n\"\n#define all(x) (x).begin(),(x).end()\nconst int MOD = 1e9+7;\nconst int mxN = 2e5+3;\n\nint fun(int x_sq, int y_sq, int xs, int ys, int xi, int yi, int n){\n    int ret = 0;\n    ret += (x_sq + y_sq);\n    ret += (n * xi * xi);\n    ret += (n * yi * yi);\n    ret -= (2 * xi * xs);\n    ret -= (2* yi * ys);\n    return ret;\n}\n\nvoid solve(){\n    int n;\n    cin >> n;\n    pair<int, int> a[n];\n    for(int i = 0; i < n; ++i){\n        cin >> a[i].first >> a[i].second;\n    }\n    int x_sq_sum = 0;\n    int x_sum = 0;\n    int y_sq_sum = 0;\n    int y_sum = 0;\n    for(int i = 0; i < n; ++i){\n        x_sq_sum += (a[i].first * a[i].first);\n        x_sum += a[i].first;\n        y_sq_sum += (a[i].second * a[i].second);\n        y_sum += a[i].second;\n    }\n    pair<int, int> ans;\n    int mx = INT_MAX;\n    for(int i = 0; i < n; ++i){\n        int tt = fun(x_sq_sum, y_sq_sum, x_sum, y_sum, a[i].first, a[i].second, n);\n        if(tt < mx){\n            mx = tt;\n            ans.first = a[i].first;\n            ans.second = a[i].second;\n        }\n    }\n    cout << ans.first << \" \" << ans.second << endl;\n}\n\nint32_t main(){\n    IO;\n    \n    int nT = 1;\n    cin >> nT;\n    for(int i = 1; i <= nT; ++i)\n        solve();\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475563,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7776882",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "17131a0588",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972980,
        "updated_at_ms": 1599972980,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:37:13.097Z",
        "__v": 0
    },
    {
        "_id": "5f607d43a103c413d4ade431",
        "submission_code": "#include <bits/stdc++.h>\nusing namespace std;\n\n// https://atcoder.jp/posts/518\n// #include <atcoder/convolution>\n// #include <atcoder/dsu>\n// #include <atcoder/fenwicktree>\n// #include <atcoder/lazysegtree>\n// #include <atcoder/math>\n// #include <atcoder/maxflow>\n// #include <atcoder/mincostflow>\n// #include <atcoder/modint>\n// #include <atcoder/scc>\n// #include <atcoder/segtree>\n// #include <atcoder/string>\n// #include <atcoder/twosat>\n// using namespace atcoder;\n\nusing ld = long double;\n#define int long long\n\n#define F first\n#define S second\n#define s(x) set<x>\n#define um(x, y) unordered_map<x, y>\n#define m(x, y) map<x, y>\n#define p(x, y) pair<x, y>\n#define v(x) vector<x>\n#define min_heap(t) priority_queue<t, vector<t>, greater<t>>\n#define max_heap(t) priority_queue<t>\n\n#define eb emplace_back\n#define mp make_pair\n#define bs binary_search\n#define lb lower_bound\n#define ub upper_bound\n\n#define all(v) v.begin(), v.end()\n#define ss(v) stable_sort(all(v))\n#define fori(i, a, b) for (int i = a; i <= b; i++)\n#define rofi(i, a, b) for (int i = a; i >= b; --i)\n#define scn(v1)        \\\n    for (auto &x : v1) \\\n        cin >> x;\n#define deb(x) cout << #x << \"=\" << x << endl;\n#define R(x) reverse(all(x));\n\n#define FILE_READ_IN freopen(\"input.txt\", \"r\", stdin);\n#define FILE_READ_OUT freopen(\"output.txt\", \"w\", stdout);\n\n#define fastio                    \\\n    ios_base::sync_with_stdio(0); \\\n    cin.tie(0);                   \\\n    cout.tie(0);\n#define stprs(x) cout << fixed << setprecision(x);\n\nconst char nl = '\\n';\nconst char sp = ' ';\nconst int mod1 = 1e9 + 7;\nconst int mod2 = 998244353;\nconst ld PI = acos(-1);\n\n#define debug cerr\n#define name(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\ntemplate<class A>\nostream& operator << (ostream& out, const set<A> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            out << \", \";\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<class A>\nostream& operator << (ostream& out, const vector<A> &a) {\n    // out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin())\n            // out << \", \";\n            out << ' ';\n        out << *it;\n    }\n    return out;\n    return out << \"]\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const pair<A, B> &a) {\n    return out <<  \"(\" << a.first << \", \" << a.second << \")\";\n}\n\ntemplate<class A, class B>\nostream& operator << (ostream& out, const map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\ntemplate<class A, class B>\nostream& operator << (ostream& out, const unordered_map<A, B> &a) {\n    out << \"[\";\n    for (auto it = a.begin(); it != a.end(); ++it) {\n        if (it != a.begin()) {\n            out << \", \";\n        }\n        out << *it;\n    }\n    return out << \"]\";\n}\n\ntemplate<typename... T>\nvoid read(T&... args) {\n    ((cin >> args), ...);\n}\n\ntemplate<typename... T>\nvoid print(T... args) {\n    ((cout << args), ...);\n}\n\n// variables and consts\nconst int N = 10000000;\nint lp[N+1];\nvector<int> pr;\n// -- variables and consts --\n\nvoid primes() {\n    for (int i=2; i<=N; ++i) {\n        if (lp[i] == 0) {\n            lp[i] = i;\n            pr.push_back (i);\n        }\n        for (int j=0; j<(int)pr.size() && pr[j]<=lp[i] && i*pr[j]<=N; ++j)\n            lp[i * pr[j]] = pr[j];\n    }\n}\n\nint upb(int n) {\n    int l = 0;\n    int h = pr.size() - 1ll;\n    int ans;\n    while(l <= h) {\n        int mid = (l+h) / 2;\n        if(pr[mid] == n) return mid;\n        if(pr[mid] > n) {\n            ans = mid;\n            h = mid-1;\n        } else {\n            l = mid+1;\n        }\n    }\n    return ans;\n}\n\nint po(int a) {\n    if(a == 1) {\n        return 2ll;\n    } else if(a == 0) {\n        return 1ll;\n    }\n    int p = po(a/2);\n    p *= p;\n    p %= mod1;\n    if(a&1) {\n        p *= 2;\n        if(p >= mod1) {\n            p -= mod1;\n        }\n    }\n    return p;\n}\n\nvoid solve(void) {\n    int n;\n    read(n);\n    int k = upb(n);\n    // debug << name(k);\n    while(pr[k] > n) -- k;\n    print(po(k), nl);\n}\n\nint32_t main(void) {\n    fastio\n    int __ = 1;\n    primes();\n    read(__);\n    while (__--) {\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475548,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5078334",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "the_pythor",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599972941,
        "updated_at_ms": 1599972941,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T08:37:23.136Z",
        "__v": 0
    },
    {
        "_id": "5f607d49a103c413d4ade432",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define endl \"\\n\"\n#define mod 1000000007\nvector<int>adj[300001];\n\nint power(int x,int y)\n{ int temp;\n  if(y==0)\n    return 1;\n  temp=power(x,y/2)%mod;\n  if(y%2==0)\n    return (temp%mod*temp%mod)%mod;\n  else\n    return ((x%mod)*((temp%mod*temp%mod)%mod))%mod;\n}\nbool comp(pair<int,int>&a,pair<int,int>&b)\n{\n  if(a.first!=b.first)\n    return (a.first<b.first);\n  return a.second<b.second;\n}\nvoid solve()\n{  \n  int n;\n  cin>>n;\n  vector<pair<int,int>>v;\n  int x=0,y=0;\n  for(int i=0;i<n;i++)\n  {\n    int a,b;\n    cin>>a>>b;\n    v.push_back(make_pair(a,b));\n    x=x+a;\n    y=y+b;\n  }\n  x=x/2;\n  y=y/2;\n  int m=INT_MAX;\n  int temp1,temp2;\n  for(auto i:v)\n  { int c=i.first,d=i.second;\n    int a=pow(abs(c-x),2)+pow(abs(y-d),2);\n    if(a<m)\n    {\n      m=a;\n      temp1=c;\n      temp2=d;\n    }\n  }\n  cout<<temp1<<\" \"<<temp2<<endl;\n \n}\nsigned main()\n{   ios_base::sync_with_stdio(false);\n  cin.tie(NULL); \n  //           #ifndef ONLINE_JUDGE\n  // freopen(\"input1.txt\",\"r\",stdin);\n  // freopen(\"output1.txt\",\"w\",stdout);\n  //        #endif\n\n  int t;\n  cin>>t;\n  //  t=1;\n  for(int i=1;i<=t;i++)\n    {solve();\n    }\n\n\n\n    return 0;     \n\n  }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475545,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5810514",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "naveenvineeth6",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972931,
        "updated_at_ms": 1599974131,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T08:37:29.582Z",
        "__v": 0
    },
    {
        "_id": "5f607d52a103c413d4ade433",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n \ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef long double ld;\ntypedef long long ll;\ntypedef vector<ll> vll;\ntypedef vector<ii> vii;\ntypedef pair<ll,ll> pll;\ntypedef vector<vector<ii>> vvii;\n \n#define F first\n#define S second\n#define PB push_back\n#define MP make_pair\n#define EPS 1e-9\n#define INF 1000000\n#define MOD 1000000007\n#define PI 3.14159265358979323846\n\nbitset <INF+1> prime;\nvector<ll> primesVec;\n\nll modpow(ll x, ll n, ll m) {\n\n    if (n == 0) return 1%m;\n    ll u = modpow(x,n/2,m);\n    u = (u*u)%m;\n    if (n%2 == 1) u = (u*x)%m;\n    return u;\n}\n\nvoid seive()\n{\n  prime.set();\n  prime[0]=0;\n  prime[1]=0;\n\n  for(ll i=2;i<=INF;i++)\n  {\n    if(prime[i])\n    {\n      for(ll j=i*i;j<=INF;j+=i)\n        prime[j]=0;\n      primesVec.push_back(i);\n    }\n  }\n}\n\n\nint main()\n{    \n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n\n    int t,n;\n    cin>>t;\n    seive();\n    while(t--)\n    {\n        cin>>n;\n        if(n==1)\n            cout<<\"0\"<<endl;\n        else\n        {\n            int m = upper_bound(primesVec.begin(),primesVec.end(),n) - primesVec.begin();\n            //cout<<m<<\" \"<<primesVec.size()<<endl;\n            cout<<modpow(2,m-1,MOD)<<endl;\n        }\n    }\n\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475543,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5369834",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "rizwan_b170829cs",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599972929,
        "updated_at_ms": 1599972929,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:37:38.594Z",
        "__v": 0
    },
    {
        "_id": "5f607d5ba103c413d4ade434",
        "submission_code": "from math import *\ndef countCoprimePairs(n) : \n\n    count = 1\n    for i in range(2, int(sqrt(n)) + 1) : \n\n        if n % i == 0 : \n            if gcd(i, n // i) == 1 : \n                count += 1\n\n    print(count) \n                \ndef factor(x):\n    r=1\n    for i in range(1, x + 1):\n        r=r*i \n    return r\nif __name__ == \"__main__\" : \n  \n    t=int(input())\n    while t:\n        n=int(input())\n        N = factor(n)\n        countCoprimePairs(N)\n        t=t-1\n     ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475538,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "4613145",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330030_CSE_A",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599972922,
        "updated_at_ms": 1599972922,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:37:47.711Z",
        "__v": 0
    },
    {
        "_id": "5f607d62a103c413d4ade435",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\n#include <climits>\nusing namespace std;\n#define ll long long int\nstruct cor{\n    ll x,y;\n};\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    ll b[1000001];\n    for(int i=0;i<1000001;i++)\n    b[i]=i*i;\n    ll n,t,x1,y1,mi,sum;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        cor a[n];\n        mi=INT_MAX;\n        for(ll i=0;i<n;i++)\n            cin>>a[i].x>>a[i].y;\n        for(ll i=0;i<n;i++)\n        {\n            sum=0;\n            for(ll j=0;j<n;j++)\n            {\n                sum+=b[abs(a[i].x-a[j].x)] + b[abs(a[i].y-a[j].y)];\n            }\n            if(mi>sum)\n            {\n                mi=sum;\n                x1=a[i].x;\n                y1=a[i].y;\n            }\n        }\n        printf(\"%lld %lld\\n\",x1,y1);\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475535,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5413147",
        "submission_status": "Segmentation Fault",
        "submission_language": "cpp14",
        "site_user_handle": "SNV18H51A05B2",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972919,
        "updated_at_ms": 1599972919,
        "misc_notes": "[\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Segmentation Fault\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:37:54.058Z",
        "__v": 0
    },
    {
        "_id": "5f607d6aa103c413d4ade436",
        "submission_code": "l=[0,1]\nfor i in range(2,1000000):\n    t=l[i-1]\n    l.append((t*i)%1000000007)\ndef pairs(n):  \n    count=0\n    for i in range(1, int(pow(n, 1 / 2))+1): \n        if n % i == 0: \n            if(gcd(i,n/i)==1):\n                count+=1\n    return count\ndef gcd(a,b):   \n    if (b == 0): \n         return a \n    return gcd(b, a%b) \nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    print(pairs(l[n]))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475517,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2923379",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "mahesh_8842",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599972848,
        "updated_at_ms": 1599972848,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:38:02.783Z",
        "__v": 0
    },
    {
        "_id": "5f607d73a103c413d4ade437",
        "submission_code": "t= int(input())\n\nfor i in range(t):\n    N=int(input())\n    X=[]\n    for j in range(N):\n        X.append(list(map(int,input().split())))\n    \n    O=[]\n    for j in range(N):\n        O1=0\n        for k in range(N):\n            if(j!=k):\n                O1+=(((X[j][0]-X[k][0])**2)+((X[j][1]-X[k][1])**2))\n        O.append(O1)\n    y=min(O)\n    res = [i for i, j in enumerate(O) if j == y]\n    print(X[res[0]][0],X[res[0]][1])\n    \n                \n                \n        \n        \n    \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475514,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5235288",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "anudeep_kalitkar",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972836,
        "updated_at_ms": 1599972836,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:38:11.526Z",
        "__v": 0
    },
    {
        "_id": "5f607d7aa103c413d4ade438",
        "submission_code": "/* ****Ragnar7 _Lawliet_**** */\n/* First, solve the problem.Then write the code. */\n#include<bits/stdc++.h>\n#define ll          long long\n#define ld             long double\n#define hell        1000000007\n#define time        cerr << \"\\nTime elapsed: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\nstd::mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());\nusing namespace std;\n\nll expo(ll base, ll exponent, ll mod) {                                //return base^exponent modulo modulus\n    ll ans = 1;\n    while(exponent !=0 ) {\n        if((exponent&1) == 1) {\n            ans = ans*base ;\n            ans = ans%mod;\n        }\n        base = base*base;\n        base %= mod;\n        exponent>>= 1;\n    }\n    return ans%mod;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    // #ifndef ONLINE_JUDGE\n    // freopen (\"input.txt\",\"r\",stdin);\n    // // freopen (\"output.txt\",\"w\",stdout);\n    // #endif\n    ll N = 1e6+1;\n    vector<ll> sieve(N,0);\n    for(ll i=2;i<N;i++)\n    {\n        if(sieve[i])\n            continue;\n        // sieve[i] = 0;\n        for(ll j=2*i;j<N;j+=i)\n            sieve[j] = 1 ;\n    }\n    sieve[0] = sieve[1] = 1;\n    for(ll i=0;i<N;i++)\n        sieve[i] ^=1;\n    for(ll i=1;i<N;i++)\n        sieve[i]+=sieve[i-1];\n    // vector<ll> fact(N,0);\n    // fact[0] = 1;\n    // for(ll i=1;i<N;i++)\n    //     fact[i] = (fact[i-1]*i)%hell;\n    ll t = 1;\n    cin>>t;\n    while(t--)\n    {\n        ll n;\n        cin>>n;\n        ll ans  = (expo(2LL,sieve[n],hell)*expo(2LL,hell-2,hell))%hell;\n        cout<<ans<<'\\n';\n    }\n\n    \n    time\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475500,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "3583145",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "Ragnar_7",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599972797,
        "updated_at_ms": 1599972797,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T08:38:18.936Z",
        "__v": 0
    },
    {
        "_id": "5f607d81a103c413d4ade439",
        "submission_code": "#include<bits/stdc++.h>\n\n#ifndef LOCAL\n#pragma GCC optimize(\"O3\")\n#endif\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//#pragma GCC optimize(\"unroll-loops\")\n\n#define endl        '\\n'\n#define ll          long long\n#define pb          push_back\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define rs(v,n)     v.resize(n)\n#define hell        1000000007\n#define peak        9123372036854775807\n#define pii         acos(-1)\n#define clr(a,x)    memset(a,x,sizeof(a))\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\n\nnamespace InOp{\ntemplate<class x,class y>\nistream &operator>>(istream &in,pair<x,y> &p) \n{ \n    in>>p.F>>p.S;\n    return in;\n}\ntemplate<class x>\nistream &operator>>(istream &in,vector<x> &v) \n{\n    for(auto& i:v)\n        in>>i;\n    return in;\n}\ntemplate<class x,class y>\nostream &operator<<(ostream &out,pair<x,y> &p) \n{ \n    out<<\"(\"<<p.F<<\",\"<<p.S<<\") \";\n    return out; \n}\ntemplate<class x>\nostream &operator<<(ostream &out,vector<x> &v) \n{ \n    out<<v.size()<<endl;\n    for(auto i:v)\n        out<<i<<\" \";\n    out<<endl;\n    return out; \n}\n}\nusing namespace InOp;\n\nnamespace ModOp{\ntemplate<class x,class y,class z> z add(x a,y b,z m){return (a+b)%m;}\ntemplate<class x,class y,class z> z sub(x a,y b,z m){return (a-b+m)%m;}\ntemplate<class x,class y,class z> z mul(x a,y b,z m){return ((ll)a*b)%m;}\ntemplate<class y,class z> z expo(ll b,y e,z m){ll a=1;b%=m;while(e!=0){if((e&1)==1){a=a*b;a=a%m;}b=b*b;b%=m;e>>=1;}return a%m;}\ntemplate<class x,class z> z inv(x b,z m){return expo(b,m-2,m);}\ntemplate<class x,class y> x invGeneral(x a,y b){if(a==0)return b==1?0:-1;x m=invGeneral(b%a,a);return m==-1?-1:((1-(ll)b*m)/a+b)%b;}\ntemplate<class x,class y,class z> z div(x a,y b,z m){ll c=inv(b,m);return mul(a,c,m);}\n}\nusing namespace ModOp;\n\nnamespace Debug{\ntemplate<class x> void deb(x a){cerr<<\"a\"<<\": \"<<a<<endl;}\ntemplate<class x,class y> void deb(x a,y b){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<endl;}\ntemplate<class x,class y,class z> void deb(x a,y b,z c){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<endl;}\ntemplate<class x,class y,class z,class xy> void deb(x a,y b,z c,xy d){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<\" | \"<<\"d\"<<\": \"<<d<<endl;}\n}\nusing namespace Debug;\n\n#define N  1000005\nvi fac(N,0);\n\nvoid fact()\n{\n    fac[0]=1;\n    for(ll i=1;i<N;i++)\n    {\n        fac[i]=(fac[i-1]*i)%hell;\n    }\n}\n\nll com(ll n,ll r)\n{\n    if(r>n)return 0;\n    ll ans=fac[n];\n    ans=(ans*expo(fac[r],hell-2,hell))%hell;\n    ans=(ans*expo(fac[n-r],hell-2,hell))%hell;\n    return ans;\n}\n\nll ncom(ll n,ll r)\n{\n    if(r==0)return 1;    \n    ll ans=1;\n    ll x=n%hell;\n    ll y=r%hell;\n    ans=(com(x,y)*ncom(n/hell,r/hell))%hell;\n    return ans;\n}\nll solve(ll x,ll y,ll a,ll b)\n{\n    if(a<x||b<y)return 0;\n    ll c=a-x,d=b-y;\n    ll ans=com(c+d,c);\n    return ans;\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    ll tt=1;\n    cin>>tt;\n    fact();\n    while(tt--)\n    {\n        ll i,j,k,l,r,x,y,m,n;\n        ll x1,y1,x2,y2;\n        cin>>x>>y>>x1>>y1>>x2>>y2;\n        ll ans=0;\n        ans=solve(0,0,x,y);\n        ans=(ans-(solve(x1,y1,x,y)*solve(0,0,x1,y1))%hell+hell)%hell;\n        ans=(ans-(solve(x2,y2,x,y)*solve(0,0,x2,y2))%hell+hell)%hell;\n        ans=(ans+(((solve(0,0,x1,y1)*solve(x1,y1,x2,y2))%hell)*solve(x2,y2,x,y))%hell+hell)%hell;\n        ans=(ans+(((solve(0,0,x2,y2)*solve(x2,y2,x1,y1))%hell)*solve(x1,y1,x,y))%hell+hell)%hell;\n        cout<<ans<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475479,
        "contest_id": "115291",
        "problem_id": "170475",
        "site_user_id": "1583809",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Mikkel and the Wormhole",
        "problem_view_link": "mikkel-and-the-wormhole",
        "created_at_ms": 1599972741,
        "updated_at_ms": 1599972741,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:38:25.788Z",
        "__v": 0
    },
    {
        "_id": "5f607d8aa103c413d4ade43a",
        "submission_code": "t = int(input())\nwhile t:\n    n = int(input())\n    mx=0\n    my=0\n    min=0\n    l=[]\n    for i in range(n):\n        l.append(list(map(int,input().split())))\n\n    for i in range(n):\n        f=0\n        for j in range(n):\n            f+=((l[i][0]-l[j][0])*(l[i][0]-l[j][0])+(l[i][1]-l[j][1])*(l[i][1]-l[j][1]))\n        if i==0:\n            mx=l[i][0]\n            my=l[i][1]\n            min = f\n        if f<min:\n            mx=l[i][0]\n            my=l[i][1]\n            min = f\n    print(mx,my)\n        \n    t-=1",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475476,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4613176",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "180330007_CSE_A",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972733,
        "updated_at_ms": 1599972733,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:38:34.195Z",
        "__v": 0
    },
    {
        "_id": "5f607d90a103c413d4ade43b",
        "submission_code": "/*\n _     _                             \n| |__ | |__   __ _  __ _ _   _  __ _ \n| '_ \\| '_ \\ / _` |/ _` | | | |/ _` |\n| |_) | | | | (_| | (_| | |_| | (_| |\n|_.__/|_| |_|\\__,_|\\__, |\\__, |\\__,_|\n                   |___/ |___/       \n*/\n#include<bits/stdc++.h>\n\n#define ll          long long\n#define pb          push_back\n#define ppb         pop_back\n#define BigInt      __int128\n#define endl        '\\n'\n#define mii         map<ll int,ll int>\n#define pii         pair<ll int,ll int>\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define hell        1000000007\n#define sim         template < class c\n#define ris         return * this\n#define dor         > debug & operator <<\n#define eni(x)      sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\n\nusing namespace std;\n\nsim > struct rge {c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cout << *x, 0);\nsim > char dud(...);\nstruct debug \n{\n    ~debug() \n    { \n        cout<<endl; \n    }\n    eni(!=) cout << boolalpha << i; ris; }\n    eni(==) ris << range(begin(i), end(i)); }\n    sim, class b dor(pair < b, c > d) \n    {\n        ris << \"(\" << d.first << \", \" << d.second << \")\";\n    }\n    sim dor(rge<c> d) \n    {\n          *this << \"[\";\n          for (auto it = d.b; it != d.e; ++it)\n            *this << \", \" + 2 * (it == d.b) << *it;\n          ris << \"]\";\n    }\n};\n#define fuck(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define N  3000005\n\nll int expo(ll int base,ll int exponent,ll int mod){\n    ll int ans=1;\n    while(exponent!=0){\n        if(exponent&1) ans=(1LL*ans*base)%mod;\n        base=(1LL*base*base)%mod;\n        exponent>>=1;\n    }\n    return ans%mod;\n}\n\nll int spf[N];\n\nll int prime[N];\n\nvoid sieve()\n{\n    for(ll int i = 0; i < N; i++)\n    {\n        spf[i] = i;\n    }\n    for(ll int i = 2; i < N; i++)\n    {\n        if(spf[i] == i)\n        {\n            for(ll int j = 2 * i; j < N; j += i)\n            {\n                if(spf[j] == j)\n                {\n                    spf[j] = i;\n                }\n            } \n        }\n    }\n    prime[0] = prime[1] = 0;\n    for(ll int i = 2; i < N; i++)\n    {\n        prime[i] = prime[i - 1];\n        if(spf[i] == i)\n        {\n            prime[i]++;\n        }\n    }\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int TESTS=1;\n    cin>>TESTS;\n    sieve();\n    while(TESTS--)\n    {\n\n        ll int n;\n        cin >> n;\n        if(n == 1)\n        {\n            cout << 0 << endl;\n            continue;\n        }\n        ll int ans = expo(2, prime[n] - 1, hell);\n        cout << ans << endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475443,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "2968720",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599972637,
        "updated_at_ms": 1599972637,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:38:40.279Z",
        "__v": 0
    },
    {
        "_id": "5f607d95a103c413d4ade43c",
        "submission_code": "t=int(input())\nfor test in range(t):\n    n=int(input())\n    x=[0]*n\n    y=[0]*n\n    for i in range(n):\n        x[i],y[i]=map(int,input().split())\n    f=[0]*n\n    for i in range(n):\n        for j in range(n):\n            f[i]+=((x[i]-x[j])*(x[i]-x[j]))+((y[i]-y[j])*(y[i]-y[j]))\n    z=f.index(min(f))\n    print(str(x[z])+\" \"+str(y[z]))",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475441,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5632329",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "shilpa_sankineni",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972628,
        "updated_at_ms": 1599972628,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:38:45.969Z",
        "__v": 0
    },
    {
        "_id": "5f607d9ba103c413d4ade43d",
        "submission_code": "def numbers(num):\n    store=[1]\n    for i in range(2,num+1):\n        if num%i==0:\n            store.append(i)\n    return store\n\n\nfrom math import factorial,gcd\nn=int(input())\nfor _ in range(n):\n    a=int(input())\n    f=factorial(a)\n    lst=numbers(f)\n    k=len(lst)\n    cnt=0\n    for i in range(k):\n        for j in range(i+1,k):\n            if lst[i]*lst[j]==f and gcd(lst[i],lst[j])==1 and lst[i]!=lst[j]:\n                cnt+=1\n                break\n    cnt=cnt%((10**9)+7)\n    print(cnt)\n\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475438,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "6619310",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "Rahul_Sripada",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599972621,
        "updated_at_ms": 1599972621,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:38:51.895Z",
        "__v": 0
    },
    {
        "_id": "5f607da5a103c413d4ade43e",
        "submission_code": "from math import factorial\nfrom math import sqrt,gcd\nmod=10**9+7\nfor _ in range(int(input())):\n    n=int(input())\n    n=factorial(n)%mod\n    count=0\n    a=1\n    while(a<=sqrt(n)):\n        count%=mod\n        if(n%a==0):\n            if(gcd(a,n//a)==1):\n                count+=1\n        a+=1\n    print(count%mod)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475407,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "5298342",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "18pa1a0511",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599972530,
        "updated_at_ms": 1599972530,
        "misc_notes": "[\"Success\",\"Terminated due to timeout\"]",
        "submission_entry_created_at": "2020-09-15T08:39:01.228Z",
        "__v": 0
    },
    {
        "_id": "5f607daca103c413d4ade43f",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define endl \"\\n\"\n#define mod 1000000007\nvector<int>adj[300001];\n\nint power(int x,int y)\n{ int temp;\n  if(y==0)\n    return 1;\n  temp=power(x,y/2)%mod;\n  if(y%2==0)\n    return (temp%mod*temp%mod)%mod;\n  else\n    return ((x%mod)*((temp%mod*temp%mod)%mod))%mod;\n}\nbool comp(pair<int,int>&a,pair<int,int>&b)\n{\n  if(a.first!=b.first)\n    return (a.first<b.first);\n  return a.second<b.second;\n}\nvoid solve()\n{  \n  int n;\n  cin>>n;\n  vector<pair<int,int>>v;\n  for(int i=0;i<n;i++)\n  {\n    int a,b;\n    cin>>a>>b;\n    v.push_back(make_pair(a,b));\n  }\n  sort(v.begin(),v.end(),comp);\n  if(n%2!=0)\n  {\n    int a=v[n/2].first;\n    int b=v[n/2].second;\n    cout<<a<<\" \"<<b<<endl;\n    return;\n  }\n  int a=v[n/2].first,b=v[n/2].second,x=v[n/2-1].first,y=v[n/2-1].second;\n  int s1=0;\n  for(int i=0;i<n;i++)\n  { int c=v[i].first,d=v[i].second;\n    s1=s1+pow(abs(a-c),2)+pow(abs(b-d),2);\n  }\n    int s2=0;\n  for(int i=0;i<n;i++)\n  { int c=v[i].first,d=v[i].second;\n    s2=s2+pow(abs(x-c),2)+pow(abs(y-d),2);\n  }\n  if(s1>s2)\n  {\n    cout<<a<<\" \"<<b<<endl;\n  }\n  else\n  {\n    cout<<x<<\" \"<<y<<endl;\n  }\n}\nsigned main()\n{   ios_base::sync_with_stdio(false);\n  cin.tie(NULL); \n  //           #ifndef ONLINE_JUDGE\n  // freopen(\"input1.txt\",\"r\",stdin);\n  // freopen(\"output1.txt\",\"w\",stdout);\n  //        #endif\n\n  int t;\n  cin>>t;\n  //  t=1;\n  for(int i=1;i<=t;i++)\n    {solve();\n    }\n\n\n\n    return 0;     \n\n  }",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475395,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5810514",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "naveenvineeth6",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972493,
        "updated_at_ms": 1599972493,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:39:08.908Z",
        "__v": 0
    },
    {
        "_id": "5f607db3a103c413d4ade440",
        "submission_code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        CP sc =new CP();\n        int tt = sc.nextInt();\n        while (tt-- > 0) {\n            int n = sc.nextInt();\n            Pair[] p = new Pair[n];\n            for(int i=0;i<n;i++){\n                p[i] = new Pair(sc.nextInt(), sc.nextInt());\n            }\n            Pair z = null;\n            long min = Long.MAX_VALUE;\n            for(int i=0;i<n;i++){\n                long s=0;\n                for(int j=0;j<n;j++){\n                    s+=(p[i].x-p[j].x)*(p[i].x-p[j].x)+(p[i].y-p[j].y)*(p[i].y-p[j].y);\n                }\n                if(min>s) {\n                    min = s;\n                    z = p[i];\n                }\n            }\n            System.out.println(z.x+\" \"+z.y);\n        }\n    }\n    static class Pair{\n        int x,y;\n        Pair(int a,int b){\n            x=a;\n            y=b;\n        }\n    }\n    /***************************/\n    static class CP\n    {\n        BufferedReader bufferedReader;\n        StringTokenizer stringTokenizer;\n        public CP() {\n            bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n        }\n        int nextInt() {\n            return Integer.parseInt(NNNN());\n        }\n        long nextLong() {\n            return Long.parseLong(NNNN());\n        }\n        double nextDouble() {\n            return Double.parseDouble(NNNN());\n        }\n        String NNNN() {\n            while (stringTokenizer == null || !stringTokenizer.hasMoreElements()) {\n                try {\n                    stringTokenizer = new StringTokenizer(bufferedReader.readLine());\n                }\n                catch (IOException  e) {\n                    e.printStackTrace();\n                }\n            }\n            return stringTokenizer.nextToken();\n        }\n        String nextLine() {\n            String spl = \"\";\n            try {\n                spl = bufferedReader.readLine();\n            }\n            catch (IOException e) {\n                e.printStackTrace();\n            }\n            return spl;\n        }\n    }\n    /***************************/\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475387,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9698632",
        "submission_status": "Terminated due to timeout",
        "submission_language": "java8",
        "site_user_handle": "rhythem_18930301",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972468,
        "updated_at_ms": 1599972468,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:39:15.566Z",
        "__v": 0
    },
    {
        "_id": "5f607dbba103c413d4ade441",
        "submission_code": "T = int(input())\nfor i in range(T):\n    n = int(input())\n    xi = []\n    yi = []\n    d = {}\n    for j in range(n):\n        p,q = [int(a) for a in input().split()]\n        xi.append(p)\n        yi.append(q)\n    mi = -1\n    for j in range(n):\n        x = xi[j]\n        y = yi[j]\n        s = 0\n        for k in range(n):\n            s += (x-xi[k])**2 + (y-yi[k])**2\n        if(mi == -1):\n            mi = s\n        else:\n            if(mi > s):\n                mi = s\n        if(mi not in d):\n            d[mi] = [x,y]\n    print(*d[mi])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475365,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "7010132",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "karri_balu",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972393,
        "updated_at_ms": 1599972393,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:39:23.653Z",
        "__v": 0
    },
    {
        "_id": "5f607dc2a103c413d4ade442",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include<bits/stdc++.h>\n#define ll long long\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    ll t;\n    cin>>t;\n    while(t--){\n        ll n,a,b;\n        vector<pair<ll,ll>> v;\n        cin>>n;\n        for(int i=0;i<n;i++){\n            cin>>a>>b;\n            v.push_back(make_pair(a,b));\n        }\n        ll mini = INT_MAX,sumis=0;\n        pair<ll,ll> ans;\n        sort(v.begin(),v.end());\n        for(ll i=0;i<v.size();i++){\n            sumis=0;\n                for(ll j=0;j<v.size();j++){\n                    if(i!=j){\n                        ll value1 = abs(v[i].first-v[j].first);\n                        ll value2 = abs(v[i].second-v[j].second);\n                        sumis+=value1*value1 + value2*value2;\n                    }  \n                }\n                if(sumis < mini){\n                    ans = make_pair(v[i].first,v[i].second);\n                    mini=sumis;\n                }\n        }\n        cout<<ans.first<<\" \"<<ans.second<<'\\n';\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475350,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5615052",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp14",
        "site_user_handle": "prateek_singam8",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972336,
        "updated_at_ms": 1599972336,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:39:30.302Z",
        "__v": 0
    },
    {
        "_id": "5f607dcba103c413d4ade443",
        "submission_code": "for _ in range(int(input())):\n    n=int(input())\n    a=[]\n    b=[]\n    m=10000\n    for i in range(n):\n        x,y=map(int,input().split())\n        a.append(x)\n        b.append(y)\n    for i in range(n):\n        x=a[i]\n        y=b[i]\n        s=0\n        for j in range(n):\n            xx=x-a[j]\n            yy=y-b[j]\n            s=s+xx**2+yy**2\n        if s<m:\n                m=s\n                f=x\n                p=y\n    print(f,p)             \n            ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475347,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9623064",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "srikanthsupraja1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972333,
        "updated_at_ms": 1599972333,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Runtime Error\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:39:39.115Z",
        "__v": 0
    },
    {
        "_id": "5f607dd1a103c413d4ade444",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 1e18\n#define ll  long long int\n#define deb(x) cout << #x << \" : \" << x << endl\n \nint main(){\n    ll t;\n    cin >> t;\n    while(t--){\n        ll n;\n        cin >> n ;\n        ll ans = INF;\n        ll x[n],y[n];\n        ll x2[n],y2[n];\n        ll i,j;\n        ll sumx=0;\n        ll sumy=0;\n        ll sum2x=0;\n        ll sum2y=0;\n        for(i=0;i<n;i++){\n            cin >> x[i] >> y[i];\n            x2[i]=x[i]*x[i];\n            y2[i]=y[i]*y[i];\n            sumx+=x[i];\n            sumy+=y[i];\n            sum2x+=x2[i];\n            sum2y+=y2[i];\n        }\n        ll ix,iy;\n        for(i=0;i<n;i++){\n            ll temp = 0;\n            temp += (n-1) * x2[i];\n            temp += (n-1) * y2[i];\n            temp += sum2x - x2[i];\n            temp += sum2y - y2[i];\n            temp -= 2 * (sumx - x[i]) * x[i];\n            temp -= 2 * (sumy - y[i]) * y[i];\n            if(temp < ans){\n                ans = temp;\n                ix = x[i];\n                iy = y[i];\n            }\n            else if(temp == ans){\n                if(x[i] < ix){\n                    ix = x[i];\n                    iy = y[i];\n                }\n                else if(x[i] == ix){\n                    ix = x[i];\n                    iy = min(iy,y[i]);\n                }\n            }\n        }\n        cout << ix << \" \" << iy << endl;\n\n    }   \n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475339,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "3651417",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "nizamfarhaan0201",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972309,
        "updated_at_ms": 1599972309,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:39:45.774Z",
        "__v": 0
    },
    {
        "_id": "5f607dd7a103c413d4ade445",
        "submission_code": "t=int(input())\nfor i in range(t):\n    n=int(input())\n    l=[]\n    for i in range(n):\n        l.append([int(j) for j in input().split()])\n    min=-1\n    ans=-1\n    #v=True\n    for i in range(n):\n        sum=0\n        for j in range(n):\n            sum+=(l[i][0]**2+l[i][1]**2+l[j][0]**2+l[j][1]**2-2*(l[i][0]*l[j][0]+l[i][1]*l[j][1]))\n        if(ans==-1 or sum<min):\n            min=sum\n            ans=i\n    print(*l[ans])\n            \n        ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475326,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5298342",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "18pa1a0511",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972270,
        "updated_at_ms": 1599972270,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:39:51.427Z",
        "__v": 0
    },
    {
        "_id": "5f607de1a103c413d4ade446",
        "submission_code": "#include<bits/stdc++.h>\n#define ll           long long int\n#define pb           push_back\n#define F            first\n#define S            second\nusing namespace std;\nvoid solve()\n{\n    int n;\n    cin>>n;\n    ll x[n],y[n];\n    ll sx=0,sy=0,l=0,r=0;\n    for(int i=0;i<n;++i)\n    {\n        cin>>x[i]>>y[i];\n        sx+=(x[i]*x[i]);\n        sy+=(y[i]*y[i]);\n        l+=(x[i]);r+=(y[i]);            \n    }\n    ll ans=1e18;\n    int ind=0;\n    ll m;\n    for(int i=0;i<n;++i)\n    {\n        m=(n*(x[i]*x[i]+y[i]*y[i])+sx+sy-(2ll*x[i]*l)-(2ll*y[i]*r));\n        if(m<ans)\n        {\n            ans=m;\n            ind=i;\n        }\n    }\n    cout<<x[ind]<<\" \"<<y[ind]<<\"\\n\";\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t;\n    cin>>t;\n    while(t--)\n        solve();\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475296,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "9693257",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "sg0071729",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972177,
        "updated_at_ms": 1599972177,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:40:01.170Z",
        "__v": 0
    },
    {
        "_id": "5f607de8a103c413d4ade447",
        "submission_code": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=[]\n    s1=0\n    s2=0\n    for _ in range(n):\n        a,b=map(int,input().split())\n        l.append([a,b])\n        s1+=a\n        s2+=b\n    s1=s1/n\n    s2=s2/n\n    l.sort()\n    res=[l[0][0],l[0][1]]\n    s=(abs(l[0][0]-s1)+abs(l[0][1]-s2))\n    for i in range(1,n):\n        c=(abs(l[i][0]-s1)+abs(l[i][1]-s2))\n        if(c<s):\n            s=c\n            res=[l[i][0],l[i][1]]\n    print(res[0],res[1])\n    \n        \n        \n        \n    ",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475279,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4529175",
        "submission_status": "Wrong Answer",
        "submission_language": "python3",
        "site_user_handle": "itsbhavya",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972123,
        "updated_at_ms": 1599972123,
        "misc_notes": "[\"Success\",\"Success\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\",\"Wrong Answer\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:40:08.918Z",
        "__v": 0
    },
    {
        "_id": "5f607deea103c413d4ade448",
        "submission_code": "#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;  \n#define min_heap(t) priority_queue<t,vector<t>,greater<t>>\n#define max_heap(t) priority_queue<t>\n#define ordered_set(x) tree<x, null_type, less<x>, rb_tree_tag, tree_order_statistics_node_update>\n#define orderKey order_of_key\n#define findOrder find_by_order\n#define F first\n#define S second\n#define pb emplace_back \n#define mp make_pair\n#define f(i,x,y) for(i=x;i<y;i++) \n#define fo(i,x,y) for(i=x;i>=y;i--)\n#define all(v) v.begin(),v.end()\n#define ss(v) stable_sort(all(v))\n#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define endl '\\n' \n#define pi  3.14159265358\nlong long po(long long int m,long long int n){\nlong long i=1; \nwhile(n>0)\n{\n    if(n%2==1)\n      i=(i*m);\n    n=n/2;\n    m=(m*m);\n}\nreturn(i);\n} \n\nbool comp(pair<ll,ll>x,pair<ll,ll>y){\n    if(x.F>y.F)\n        return true;\n    else if(x.F==y.F){\n            if(x.S>y.S)\n                return true;\n    } \n    return false;\n}\nvoid solve(void){  \n    ll n,x,y,a,b,i;\n    cin>>n; \n    map<pair<ll,ll>,ll>m;\n    vector<pair<ll,ll>>v;\n    for(i=0;i<n;i++){\n        cin>>x>>y;\n        v.pb(mp(x,y)); \n        m[mp(x,y)]=i;\n    } \n    sort(v.begin(),v.end(),comp); \n    if(n%2==1){\n        cout<<v[n/2].F<<\" \"<<v[n/2].S<<endl;\n    } \n    else{\n        x=n/2;\n        y=x-1;\n        a=m[{v[x].F,v[x].S}];\n        b=m[{v[y].F,v[y].S}];\n        if(a>b){\n            cout<<v[y].F<<\" \"<<v[y].S<<endl;\n        } \n        else{\n            cout<<v[x].F<<\" \"<<v[x].S<<endl;\n        }\n    }\n}\nint main(void){\n    fastio\n    ll __=1;\n    cin>> __;\n    while(__--){\n        solve();\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475260,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5687885",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp",
        "site_user_handle": "balajipulugujju1",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972087,
        "updated_at_ms": 1599972087,
        "misc_notes": "[\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Wrong Answer\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:40:14.925Z",
        "__v": 0
    },
    {
        "_id": "5f607df8a103c413d4ade449",
        "submission_code": "#include<bits/stdc++.h>\n\n#ifndef LOCAL\n#pragma GCC optimize(\"O3\")\n#endif\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//#pragma GCC optimize(\"unroll-loops\")\n\n#define endl        '\\n'\n#define ll          long long\n#define pb          push_back\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define rs(v,n)     v.resize(n)\n#define hell        1000000007\n#define peak        9123372036854775807\n#define pii         acos(-1)\n#define clr(a,x)    memset(a,x,sizeof(a))\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\n\nnamespace InOp{\ntemplate<class x,class y>\nistream &operator>>(istream &in,pair<x,y> &p) \n{ \n    in>>p.F>>p.S;\n    return in;\n}\ntemplate<class x>\nistream &operator>>(istream &in,vector<x> &v) \n{\n    for(auto& i:v)\n        in>>i;\n    return in;\n}\ntemplate<class x,class y>\nostream &operator<<(ostream &out,pair<x,y> &p) \n{ \n    out<<\"(\"<<p.F<<\",\"<<p.S<<\") \";\n    return out; \n}\ntemplate<class x>\nostream &operator<<(ostream &out,vector<x> &v) \n{ \n    out<<v.size()<<endl;\n    for(auto i:v)\n        out<<i<<\" \";\n    out<<endl;\n    return out; \n}\n}\nusing namespace InOp;\n\nnamespace ModOp{\ntemplate<class x,class y,class z> z add(x a,y b,z m){return (a+b)%m;}\ntemplate<class x,class y,class z> z sub(x a,y b,z m){return (a-b+m)%m;}\ntemplate<class x,class y,class z> z mul(x a,y b,z m){return ((ll)a*b)%m;}\ntemplate<class y,class z> z expo(ll b,y e,z m){ll a=1;b%=m;while(e!=0){if((e&1)==1){a=a*b;a=a%m;}b=b*b;b%=m;e>>=1;}return a%m;}\ntemplate<class x,class z> z inv(x b,z m){return expo(b,m-2,m);}\ntemplate<class x,class y> x invGeneral(x a,y b){if(a==0)return b==1?0:-1;x m=invGeneral(b%a,a);return m==-1?-1:((1-(ll)b*m)/a+b)%b;}\ntemplate<class x,class y,class z> z div(x a,y b,z m){ll c=inv(b,m);return mul(a,c,m);}\n}\nusing namespace ModOp;\n\nnamespace Debug{\ntemplate<class x> void deb(x a){cerr<<\"a\"<<\": \"<<a<<endl;}\ntemplate<class x,class y> void deb(x a,y b){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<endl;}\ntemplate<class x,class y,class z> void deb(x a,y b,z c){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<endl;}\ntemplate<class x,class y,class z,class xy> void deb(x a,y b,z c,xy d){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<\" | \"<<\"d\"<<\": \"<<d<<endl;}\n}\nusing namespace Debug;\n\n#define N  1000005\nvi pri(N,1);\nvoid seive()\n{\n    pri[0]=0;\n    pri[1]=0;\n    for(ll i=2;i<N;i++)\n    {\n        if(pri[i]==0)continue;\n        for(ll j=i*i;j<N;j+=i)\n        {\n            pri[j]=0;\n        }\n    }\n    for(ll i=2;i<N;i++)\n    {\n        pri[i]+=pri[i-1];\n    }\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    ll tt=1;\n    cin>>tt;\n    seive();\n    while(tt--)\n    {\n        ll i,j,k,l,r,x,y,m,n;\n        cin>>n;\n        if(n==1)\n        {\n            cout<<0<<endl;\n            continue;\n        }\n        x=pri[n];\n        x--;\n        ll ans=expo(2,x,hell);\n        cout<<ans<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475259,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "1583809",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599972080,
        "updated_at_ms": 1599973280,
        "misc_notes": "[\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:40:24.479Z",
        "__v": 0
    },
    {
        "_id": "5f607e02a103c413d4ade44a",
        "submission_code": "test=int(input())\nfor _ in range(test):\n    n=int(input())\n    x=[]\n    y=[]\n    for _ in range(n):\n        a,b=map(int,input().split())\n        x.append(a)\n        y.append(b)\n    p=[]\n    for i in range(n):\n        s=0\n        for j in range(n):\n            if i!=j:\n                s=s+((x[i]-x[j])**2)+((y[i]-y[j])**2)\n        p.append(s)\n    points=[]\n    for i in range(n):\n        if p[i]==min(p):\n            points.append([x[i],y[i]])\n    print(min(points)[0],min(points)[1])",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475256,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "4622965",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "vision01",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972075,
        "updated_at_ms": 1599972075,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:40:34.204Z",
        "__v": 0
    },
    {
        "_id": "5f607e0aa103c413d4ade44b",
        "submission_code": "/*\n _     _                             \n| |__ | |__   __ _  __ _ _   _  __ _ \n| '_ \\| '_ \\ / _` |/ _` | | | |/ _` |\n| |_) | | | | (_| | (_| | |_| | (_| |\n|_.__/|_| |_|\\__,_|\\__, |\\__, |\\__,_|\n                   |___/ |___/       \n*/\n#include<bits/stdc++.h>\n\n#define ll          long long\n#define pb          push_back\n#define ppb         pop_back\n#define BigInt      __int128\n#define endl        '\\n'\n#define mii         map<ll int,ll int>\n#define pii         pair<ll int,ll int>\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define hell        1000000007\n#define sim         template < class c\n#define ris         return * this\n#define dor         > debug & operator <<\n#define eni(x)      sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\n\nusing namespace std;\n\nsim > struct rge {c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cout << *x, 0);\nsim > char dud(...);\nstruct debug \n{\n    ~debug() \n    { \n        cout<<endl; \n    }\n    eni(!=) cout << boolalpha << i; ris; }\n    eni(==) ris << range(begin(i), end(i)); }\n    sim, class b dor(pair < b, c > d) \n    {\n        ris << \"(\" << d.first << \", \" << d.second << \")\";\n    }\n    sim dor(rge<c> d) \n    {\n          *this << \"[\";\n          for (auto it = d.b; it != d.e; ++it)\n            *this << \", \" + 2 * (it == d.b) << *it;\n          ris << \"]\";\n    }\n};\n#define fuck(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n#define N  100005\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int TESTS=1;\n    cin>>TESTS;\n    while(TESTS--)\n    {\n        ll int n;\n        cin >> n;\n        ll int x[n + 1], y[n + 1];\n        ll int smx1 = 0;\n        ll int smx2 = 0;\n        ll int smy1 = 0;\n        ll int smy2 = 0;\n        for(ll int i = 1; i <= n; i++)\n        {\n            cin >> x[i] >> y[i];\n            smx1 += x[i];\n            smx2 += x[i] * x[i];\n            smy1 += y[i];\n            smy2 += y[i] * y[i];\n        }    \n        pii mini = {1e18, 1e18};\n        for(ll int i = 1; i <= n; i++)\n        {\n            ll int val = 0;\n            val += (x[i] * x[i] * n) + smx2 - (2 * x[i] * smx1);\n            val += (y[i] * y[i] * n) + smy2 - (2 * y[i] * smy1);\n            mini = min(mini, make_pair(val, i));\n        }\n        ll int i = mini.S;\n        cout << x[i] << \" \" << y[i] << endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475255,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2968720",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "bhj2001",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972072,
        "updated_at_ms": 1599972072,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:40:42.090Z",
        "__v": 0
    },
    {
        "_id": "5f607e10a103c413d4ade44c",
        "submission_code": "def helperfunc(x,y,xi,yi):\n    return (x-xi)**2+(y-yi)**2\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [None for i in range(n)]\n    b = [None for j in range(n)]\n    for i in range(n):\n        u,v = map(int,input().split())\n        a[i] = u\n        b[i] = v\n        \n    ans = 10**13\n    ans_x,ans_y = -1,-1\n    for i in range(n):\n        temp = 0\n        for j in range(n):\n            temp += helperfunc(a[i],b[i],a[j],b[j])\n        if temp<ans:\n            ans = temp\n            ans_x = a[i]\n            ans_y = b[i]\n    print(ans_x,ans_y)",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475253,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "2923379",
        "submission_status": "Terminated due to timeout",
        "submission_language": "python3",
        "site_user_handle": "mahesh_8842",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972068,
        "updated_at_ms": 1599972068,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:40:48.541Z",
        "__v": 0
    },
    {
        "_id": "5f607e18a103c413d4ade44d",
        "submission_code": "#include<bits/stdc++.h>\n\n#ifndef LOCAL\n#pragma GCC optimize(\"O3\")\n#endif\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n//#pragma GCC optimize(\"unroll-loops\")\n\n#define endl        '\\n'\n#define ll          long long\n#define pb          push_back\n#define vi          vector<ll int>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define rs(v,n)     v.resize(n)\n#define hell        1000000007\n#define peak        9123372036854775807\n#define pii         acos(-1)\n#define clr(a,x)    memset(a,x,sizeof(a))\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\n\nnamespace InOp{\ntemplate<class x,class y>\nistream &operator>>(istream &in,pair<x,y> &p) \n{ \n    in>>p.F>>p.S;\n    return in;\n}\ntemplate<class x>\nistream &operator>>(istream &in,vector<x> &v) \n{\n    for(auto& i:v)\n        in>>i;\n    return in;\n}\ntemplate<class x,class y>\nostream &operator<<(ostream &out,pair<x,y> &p) \n{ \n    out<<\"(\"<<p.F<<\",\"<<p.S<<\") \";\n    return out; \n}\ntemplate<class x>\nostream &operator<<(ostream &out,vector<x> &v) \n{ \n    out<<v.size()<<endl;\n    for(auto i:v)\n        out<<i<<\" \";\n    out<<endl;\n    return out; \n}\n}\nusing namespace InOp;\n\nnamespace ModOp{\ntemplate<class x,class y,class z> z add(x a,y b,z m){return (a+b)%m;}\ntemplate<class x,class y,class z> z sub(x a,y b,z m){return (a-b+m)%m;}\ntemplate<class x,class y,class z> z mul(x a,y b,z m){return ((ll)a*b)%m;}\ntemplate<class y,class z> z expo(ll b,y e,z m){ll a=1;b%=m;while(e!=0){if((e&1)==1){a=a*b;a=a%m;}b=b*b;b%=m;e>>=1;}return a%m;}\ntemplate<class x,class z> z inv(x b,z m){return expo(b,m-2,m);}\ntemplate<class x,class y> x invGeneral(x a,y b){if(a==0)return b==1?0:-1;x m=invGeneral(b%a,a);return m==-1?-1:((1-(ll)b*m)/a+b)%b;}\ntemplate<class x,class y,class z> z div(x a,y b,z m){ll c=inv(b,m);return mul(a,c,m);}\n}\nusing namespace ModOp;\n\nnamespace Debug{\ntemplate<class x> void deb(x a){cerr<<\"a\"<<\": \"<<a<<endl;}\ntemplate<class x,class y> void deb(x a,y b){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<endl;}\ntemplate<class x,class y,class z> void deb(x a,y b,z c){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<endl;}\ntemplate<class x,class y,class z,class xy> void deb(x a,y b,z c,xy d){cerr<<\"a\"<<\": \"<<a<<\" | \"<<\"b\"<<\": \"<<b<<\" | \"<<\"c\"<<\": \"<<c<<\" | \"<<\"d\"<<\": \"<<d<<endl;}\n}\nusing namespace Debug;\n\n#define N  1000005\nvi pri(N,1);\nvoid seive()\n{\n    pri[0]=0;\n    pri[1]=0;\n    for(ll i=2;i<N;i++)\n    {\n        if(pri[i]==0)continue;\n        for(ll j=i*i;j<N;j+=i)\n        {\n            pri[j]=0;\n        }\n    }\n    for(ll i=2;i<N;i++)\n    {\n        pri[i]+=pri[i-1];\n    }\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    ll tt=1;\n    cin>>tt;\n    seive();\n    while(tt--)\n    {\n        ll i,j,k,l,r,x,y,m,n;\n        cin>>n;\n        if(n==1)\n        {\n            cout<<1<<endl;\n            continue;\n        }\n        x=pri[n];\n        x--;\n        ll ans=expo(2,x,hell);\n        cout<<ans<<endl;\n    }\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475249,
        "contest_id": "115291",
        "problem_id": "170137",
        "site_user_id": "1583809",
        "submission_status": "Wrong Answer",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "Alice and the \"Super Factorial Problem\"",
        "problem_view_link": "the-super-factorial-problem",
        "created_at_ms": 1599972048,
        "updated_at_ms": 1599972048,
        "misc_notes": "[\"Success\",\"Wrong Answer\"]",
        "submission_entry_created_at": "2020-09-15T08:40:56.425Z",
        "__v": 0
    },
    {
        "_id": "5f607e1ea103c413d4ade44e",
        "submission_code": "/* ****Ragnar7 _Lawliet_**** */\n/* First, solve the problem.Then write the code. */\n#include<bits/stdc++.h>\n#define ll          long long\n#define ld             long double\n#define hell        1000000007\n#define time        cerr << \"\\nTime elapsed: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\nstd::mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());\nusing namespace std;\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    // #ifndef ONLINE_JUDGE\n    // freopen (\"input.txt\",\"r\",stdin);\n    // // freopen (\"output.txt\",\"w\",stdout);\n    // #endif\n    ll t = 1;\n    cin>>t;\n    while(t--)\n    {\n        ll n;\n        cin>>n;\n        ll x = 0,y =0;\n        ll c,X1,Y1;\n        vector<pair<ll,ll> > v;\n        for(ll i=0;i<n;i++)\n        {\n            cin>>X1>>Y1;\n            x+=X1;\n            y+=Y1;\n            v.push_back({X1,Y1});\n        }\n        ll nx = 0,ny = 0,mx = LLONG_MAX;\n        // cout<<x/n<<\" \"<<y/n<<'\\n';   \n        x /=n;\n        y /=n;\n        for(auto i:v)\n        {\n            ll tmp = (i.first-x)*(i.first-x) + (i.second-y)*(i.second-y);\n            if(tmp<mx)\n            {\n                mx = tmp;\n                nx = i.first;\n                ny = i.second;\n            }\n        }\n        cout<<nx<<\" \"<<ny<<'\\n';\n        \n    }\n\n    \n    time\n    return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475244,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "3583145",
        "submission_status": "Accepted",
        "submission_language": "cpp",
        "site_user_handle": "Ragnar_7",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599972026,
        "updated_at_ms": 1599972026,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:41:02.874Z",
        "__v": 0
    },
    {
        "_id": "5f607e26a103c413d4ade44f",
        "submission_code": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   \n    int tc;\n    cin>>tc;\n    while(tc--)\n    {\n        int n;\n        cin>>n;\n        int x[n],y[n],min = 1000000000,idx=0;\n        for(int i=0;i<n;i++)\n            cin>>x[i]>>y[i];\n        for(int i=0;i<n;i++)\n        {\n            int sum = 0;\n            for(int j=0;j<n;j++)\n            {\n                if(i!=j)\n                {\n                    sum = sum + pow((x[i]-x[j]),2) + pow((y[i]-y[j]),2); \n                }\n            }\n            if(sum < min)\n            {\n                min = sum;\n                idx = i;\n            }\n        }\n        cout<<x[idx]<<\" \"<<y[idx]<<endl;\n    }\n    return 0;\n}\n",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475235,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "5549332",
        "submission_status": "Terminated due to timeout",
        "submission_language": "cpp",
        "site_user_handle": "Jayaprakashvenu1",
        "in_contest_bounds": true,
        "submission_status_code": 1,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599971987,
        "updated_at_ms": 1599971987,
        "misc_notes": "[\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Wrong Answer\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Terminated due to timeout\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:41:10.926Z",
        "__v": 0
    },
    {
        "_id": "5f607e2ea103c413d4ade450",
        "submission_code": "#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\ntypedef long long ll;\ntypedef pair<int, int> pii;\n#define sz(x) (int)(x).size()\n#define all(x) x.begin(), x.end()\n#define itn int\n \nll powmod(ll a,ll b) {ll res=1; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}\nll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}\n\nint main(){\n    ios_base::sync_with_stdio(false); cin.tie(NULL); \n    int t;\n    cin>>t;\n    while(t--){\n        int n;\n        cin >> n;\n        ll x[n],y[n],s1=0,s2=0;\n        for(int i=0;i<n;++i){\n            cin >> x[i] >> y[i];\n            s1+=x[i]; s2+=y[i];\n        }\n        ll ans = 1e18,in=0;\n        for(int i=0;i<n;++i){\n            ll temp = n*1ll*(x[i]*1ll*x[i] + y[i]*1ll*y[i]);\n            temp -= 2ll*(x[i]*1ll*s1 + y[i]*1ll*s2);\n            if(temp < ans){ ans = temp; in = i; }\n        }\n        cout << x[in] <<' '<<y[in]<< '\\n';\n    }\n  return 0;\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475234,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "6937721",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "ak821",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599971986,
        "updated_at_ms": 1599971986,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:41:18.439Z",
        "__v": 0
    },
    {
        "_id": "5f607e36a103c413d4ade451",
        "submission_code": "/*input\n3\n4\n1 0\n2 2\n3 2\n4 0\n3\n0 0\n3 0\n3 4\n2\n-1 -1\n1 1\n*/\n/*\n\n*/\n#include<bits/stdc++.h>\n#define lld          long long int\n#define pb          push_back\n#define ppb         pop_back\n#define    endl        '\\n'\n#define mii         map<lld,lld>\n#define msi         map<string,lld>\n#define mis         map<lld, string>\n#define mpi         map<pair<lld ,lld >,lld >\n#define pii         pair<lld,lld>\n#define vi          vector<lld>\n#define vpi         vector<pii>\n#define vs          vector<string>\n#define all(a)      (a).begin(),(a).end()\n#define F           first\n#define S           second\n#define sz(x)       (lld)x.size()\n#define hell        1000000007\n#define rrep(i,m,n)    for(lld i=m;i>=n;i--)\n#define rep(i,m,n)    for(lld i=m;i<n;i++)\n#define lbnd        lower_bound\n#define ubnd        upper_bound\n#define bs          binary_search\n#define mp          make_pair\n#define what_is(x)  cerr << #x << \" is \" << x << endl;\n#define pr(x)         cout<< x << \" \";\n#define pre(x)        cout<< x << endl ;\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>; \n//change null_type to get ordered_map\n#define N  100005\nvoid solve()\n{\n    lld n;\n    cin >> n;\n    vi x,y;\n    vpi pnts;\n    lld xsum=0,xsqsum=0,ysum=0,ysqsum=0;\n    rep(i,0,n){\n        lld a,b;\n        cin >> a >> b;\n        xsum+=a,xsqsum+=a*a;\n        ysum+=b,ysqsum+=b*b;\n        pnts.pb({a,b});\n    }\n    vi ans;\n    rep(i,0,n){\n        lld x=pnts[i].F,y=pnts[i].S;\n        lld res=n*x*x+xsqsum - 2*x*xsum + n*y*y + ysqsum - 2*y*ysum;\n        ans.pb(res); \n    }\n    lld mn=ans[0];\n    rep(i,0,n){\n        mn=min(mn,ans[i]);\n    }\n    rep(i,0,n){\n        if(ans[i]==mn){\n            cout << pnts[i].F << ' ' << pnts[i].S << endl;\n            return;\n        }\n    }\n}\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int tests=1;\n    cin>>tests;\n    while(tests--)\n    {\n        solve();\n    }\n}",
        "contest_name": "vce-bellman-crown-2k20",
        "site_name": "HACKERRANK",
        "site_submission_id": 1326475198,
        "contest_id": "115291",
        "problem_id": "178406",
        "site_user_id": "1583809",
        "submission_status": "Accepted",
        "submission_language": "cpp14",
        "site_user_handle": "shado_w",
        "in_contest_bounds": true,
        "submission_status_code": 2,
        "problem_name": "The Professor's Challenge",
        "problem_view_link": "the-professors-challenge",
        "created_at_ms": 1599971846,
        "updated_at_ms": 1599971846,
        "misc_notes": "[\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\",\"Success\"]",
        "submission_entry_created_at": "2020-09-15T08:41:26.019Z",
        "__v": 0
    }
]